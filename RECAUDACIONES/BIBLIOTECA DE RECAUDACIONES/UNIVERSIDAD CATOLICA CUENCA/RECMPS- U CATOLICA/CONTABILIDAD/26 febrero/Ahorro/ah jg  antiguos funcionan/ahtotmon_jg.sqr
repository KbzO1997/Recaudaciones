!************************************************************************!
!*      Archivo           :  ahtotmon.sqr                               *!
!*      Base de datos     :  cob_ahorros                                *!
!*      Producto          :  Cuentas de Ahorros                         *!
!*      Disenado por      :  Mauricio Bayas/Sandra Ortiz                *!
!*      Fecha de escritura:  18/Oct/94                                  *!
!************************************************************************!
!*                              IMPORTANTE                              *!
!*      Este programa es parte de los paquetes bancarios propiedad del  *!
!*      "BANCO BOLIVARIANO".                                            *!
!*      Su uso no autorizado queda expresamente prohibido asi como      *!
!*      cualquier alteracion o agregado hecho por alguno de sus         *!
!*      usuarios sin el debido consentimiento por escrito de la         *!
!*      Presidencia Ejecutiva del BANCO BOLIVARIANO o su representante. *!
!************************************************************************!
!*                              PROPOSITO                               *!
!*      Se encarga de calcular los totales de las transacciones moneta- *!
!* rias del dia a contabilizar.  Estos totales se almacenan en re_total *!
!************************************************************************!
!*                            MODIFICACIONES                            *!
!*      FECHA           AUTOR           RAZON                           *!
!*      18/Oct/94     R. Garces         Emision Inicial                 *! 
!*	30/Ago/96     Juan F. Cadena	Revision Bco. de Credito:	*!
!*					Totalizacion por sucursales	*!
!*	07/Oct/96     Erika L. Sanchez	Correcciones por errores hayados*!
!*	06/May/1998   Graciela Morales	Validar codigo valor solo sucres*!
!*      27/May/1998   David Sanchez     Utilizar tabla re_total_ah      *!
!*      31/Dic/98     Dario Barco       Adicionar nemonico de impuestos *!
!*      26/Abr/1999   Lourdes Reyes     Cambiar tabla re_codval_mn a:   *!
!*                                      re_codval_mn_ah                 *!
!*      05/Nov/1999   R. Egas           secuencial en quiebre           *!
!*      13/Abr/2000   C.Montesdeoca     Problema contable en Db/Cr      *!
!*      01/Ago/2000   R. Egas           Cambio a moneda Base            *!
!*   #  14.Oct.2003  Galo Yanez  Cambiar older sqr commands.   *!
!*      03/Ago/2004   Galo Yanez        Reproceso solo monetarios       *!
!*      20.AGO.2006  Paul Hoyos V.     Se agrega al quiebre el campo co-*!
!*                                     tización.                        *!
!*      03.MAR.2009  Tania Cumbicus    Se agrega al quiebre un nuevo campo*!
!*                                     de cotizacion para trx 4253, 4272 *!
!*                                     causas 32, 940 de creditos en euros *!
!*      26.MAR.2009  Tania Cumbicus    Se agrega al quiebre un nuevo campo*!
!*                                     de cotizacion para trx 4272 *!
!*                                     causas 333, 424 de cheques en euros *!
!*      25.JUN.2009  Tania Cumbicus    se agrega causa 515 para tomar nueva cotizacion*!
!* 17   10.MAR.2010  Tania Cumbicus  CTE-CC-8512  Se agrega validacion para causa ISD *!
!*                                     para que contabilice con cotizacion de transferencia *!
!*  17/Nov/2011 Galo Yanez	Validar que se hayan ejecutado los 	*!
!*				totalizadores (ahtotmon - ahtotser)	*!
!*				Tarea: AHO-CC-10815			*!
!*  02/Feb/2012	Galo Yanez	Grabar en tabla temporal fisica el 	*!
!*				cursor principal			*!
!*				Tarea: AHO-8860				*!
!* 20  16/DIC/2013   Sandra Merino   CNB-316-CU-1901                    *!
!*  14/Ago/2014	Galo Yanez	Cambiar base de tabla temporal de 	*!
!*				trabajo (optimizacion solicitada DBA)	*!
!*				Tarea: AHO-CC-SGC00016819		*!
!************************************************************************!

#include  "definic.inc"

#define   NRO_TOT                  9500 ! Numero maximo de totalizadores
#define   ANCHO_PAG                  80 ! Ancho de la pagina

Begin-Setup
use cob_ahorros
End-Setup  

#include "log.inc"
#include "ctahorro.inc"

!-----------------------------
Begin-Program   !REF:GYC
!-----------------------------
do Inicializar_Programa
!do ParamN (1,#i_filial,'cobis..cl_filial','fi_filial = ','No existe la filial')
!do ParamS (2,$i_fecha_proceso,'','','')

let #i_filial = 1
let $i_fecha_proceso = '02/25/2021'

do Inicio_Valida				!-- GYC 2011/Nov/17
do Carga_Datos
do Main
do Fin_Valida	
do Finalizar_Programa
do Borrar					!-- GYC 2014/Ago/14
End-Program   !REF:GYC

!-----------------------------
Begin-Procedure Borrar				!-- GYC 2014/Ago/14
!-----------------------------
Begin-Sql
truncate table db_general..ah_tran_monet_conta
End-Sql
End-Procedure

!-----------------------------
Begin-Procedure Carga_Datos
!-----------------------------
Begin-Sql
if exists(select 1 from db_general..sysobjects where name = 'ah_tran_monet_conta')
          drop table db_general..ah_tran_monet_conta
End-Sql

Begin-Sql
select 
tm_moneda,
tm_oficina,
tm_oficina_cta,
tm_tipo_tran,
tm_causa,
tm_indicador,
tm_valor,
tm_correccion, 
tm_secuencial,
tm_cod_alterno,
tm_valor_comision,
tm_chq_propios,
tm_chq_locales,
tm_chq_ot_plazas,  
tm_efectivo,
tm_saldo_interes,
tm_valor_impuesto,
tm_signo,
tm_saldo_lib,
tm_saldo_contable,
tm_saldo_disponible,
tm_interes,
tm_val_cheque,
tm_tarjeta,
tc_indice,
tc_causa_dst, 
tc_causa_org,
tc_contabiliza,
tc_perfil,
tc_estado,
mt_cotiza,
substring(isnull(tm_canal,''),1,3)  tm_canal

into db_general..ah_tran_monet_conta
from cob_ahorros..ah_tran_monet, cob_remesas..re_tran_contable (index index1), cob_cuentas..cc_monet_transfer (index cc_monet_transfer_sec)
where tm_tipo_tran	= tc_tipo_tran
  and tc_causa_org	in (isnull(tm_causa,'0'),'0')
 !and tc_indicador	in (isnull(tm_indicador,0),0)
  and tc_estado		= 'V'             
  and tm_tipo_tran  not in (select convert (smallint, codigo)
                            from cobis..cl_catalogo
                            where tabla = (select codigo
                                           from cobis..cl_tabla
                                           where tabla = 'tr_mon_no_cont_ah')
                            and estado = 'V')
  and tm_fecha *= mt_fecha 
  and tm_secuencial *= mt_ssn_monet
  and tm_tipo_tran  *= mt_tipo_tran 
  and tm_causa *= mt_causa 
  and tm_fecha = $i_fecha_proceso
  and tm_secuencial = 107200521
End-Sql
End-Procedure

!-----------------------------
Begin-Procedure Main
!-----------------------------
do TrxEuros   !lfcm 09-enero-2009
do Crear_Arreglo
do Inicializaciones
do Transacciones
End-Procedure

!------------------------------
Begin-Procedure Inicio_Valida			!-- GYC 2011/Nov/17
!------------------------------
Begin-Sql
delete cob_cuentas..cc_control_contabilidad
where cc_fecha = $i_fecha_proceso
  and cc_producto = 4
  and cc_transaccion = 'M'
End-Sql

Begin-Sql
  insert into cob_cuentas..cc_control_contabilidad
  values ($i_fecha_proceso, 4, 'M', 'E', getdate(), null, null)
End-Sql
End-Procedure

!------------------------------
Begin-Procedure Fin_Valida			!-- GYC 2011/Nov/17
!------------------------------
Begin-Sql
update cob_cuentas..cc_control_contabilidad
set cc_estado = 'F',
    cc_hora_fin = getdate()
where cc_fecha = $i_fecha_proceso
  and cc_producto = 4
  and cc_transaccion = 'M'
End-Sql
End-Procedure

!-----------------------------
Begin-Procedure TrxEuros
!-----------------------------
begin-sql
update cob_ahorros..ah_tran_monet
set tm_tarjeta = null
where tm_tipo_tran = 4272
and tm_moneda = 17
and tm_causa = '515'
end-sql
End-Procedure

!-----------------------------
Begin-Procedure Crear_Arreglo
!-----------------------------
!* Crea   el arreglo que contiene la transaccion destino,causa destino *!
!* y valor destino.                                                    *!

Create-Array name=Totalizador size={NRO_TOT}  field=Transaccion:number
                                              field=Causa:char
                                              field=Valor:number
                                              field=Perfil:char
                                              field=Codval:number
                                              field=Numtran:number
                                              field=Compra:char
End-Procedure 

!-----------------------------
Begin-Procedure Transacciones
!-----------------------------
!* Se barre una por una las transacciones a contabilizar *!

let #quiebre = {FALSE} ! Si #quiebre = {TRUE} entonces quiebra
Begin-Select
tm_moneda         &ti_moneda () on-break print=never before=Salvar after=Analizar_Quiebre level=1
tm_oficina        &ti_ofic_orig () on-break print=never before=Salvar after=Analizar_Quiebre level=2
tm_oficina_cta    &ti_ofic_dest () on-break print=never before=Salvar after=Analizar_Quiebre level=3
tm_tipo_tran      &ti_tipo_tran () on-break print=never before=Salvar after=Analizar_Quiebre level=4
tm_causa          &ti_causa () on-break print=never before=Salvar after=Analizar_Quiebre level=5                   !RE 19991105
tm_indicador
tm_valor 
tm_correccion 
tm_secuencial
tm_cod_alterno
tm_valor_comision
tm_chq_propios
tm_chq_locales
tm_chq_ot_plazas  
tm_efectivo
tm_saldo_interes
tm_valor_impuesto
tm_signo
tm_saldo_lib
tm_saldo_contable
tm_saldo_disponible
tm_interes
tm_val_cheque
!- TPE06/16/2006 Cotizacion TRANSFERENCIAS
isnull(tm_tarjeta,'1.0') &tm_tarjeta () on-break print=never before=Salvar after=Analizar_Quiebre level=6 !PHV 16AGO2006
tc_indice
tc_causa_dst 
tc_causa_org
tc_contabiliza
tc_perfil
tc_estado
isnull(convert(varchar,mt_cotiza),'1.0')  &mt_cotiza () on-break print=never before=Salvar after=Analizar_Quiebre level=6 !tc 03032009
isnull(tm_canal,"")       &canal 

     let #secuencial =  &tm_secuencial 
     let #codigo_val =  to_number(&tc_causa_dst)
     if &tm_correccion = 'S' ! Se trata de una correccion, signo negativo
        let #signo = -1
     else
        let #signo =  1
     end-if
     
     let $canal = &canal 
     
     do CampoContable
     !{PHV 03AGO2006
      
     if #moneda <> #moneda_base and &tm_tarjeta = '1.0'
     	if &mt_cotiza = '1.0'	!REF 17 
     	   do CotizacionBase   
     	   let $coticompra = &cotbase
     	else
     	   let $coticompra = &mt_cotiza	!REF 17
     	end-if
     	
     else
         if ((&ti_tipo_tran = 4272 and (&ti_causa = '333' or  &ti_causa = '424'  or  &ti_causa = '515' or &ti_causa = '940'  or &ti_causa = '959'  or &ti_causa = '516' )) or (&ti_tipo_tran = 4253 and &ti_causa = '32' )) and #moneda <> #moneda_base  !tc 03032009    
		if &mt_cotiza = '1.0'
			do CotizacionBase   
			let $coticompra = &cotbase
                else         
	        	let $coticompra = &mt_cotiza	!tc 03032009
	        end-if
         else	!tc 03032009
		!codigo a evaluar JSP para que no lo tome en cuenta como cotizacion si es string
		 let #w_numero = to_number(&tm_tarjeta)
		 If #w_numero = 0 or #w_numero>100
		       do CotizacionBase   
			let $coticompra = &cotbase
			 else
			let $coticompra = &tm_tarjeta
		 end-if
	end-if  !tc 03032009
     end-if
     !do Actualizar (&tc_indice, &ti_tipo_tran, &tc_causa_org, #val, &tc_perfil, #codigo_val, #secuencial,#signo,&tm_tarjeta)
     
     if #val > 0 
       do Actualizar (&tc_indice, &ti_tipo_tran, &tc_causa_org, #val, &tc_perfil, #codigo_val, #secuencial,#signo,$coticompra)
     end-if
     
     !{PHV 03AGO2006
     do Actualizar_Reg_Proc
     let #quiebre = {FALSE}
from db_general..ah_tran_monet_conta
order by tm_moneda,tm_oficina,tm_oficina_cta,tm_tipo_tran,tm_causa,isnull(tm_tarjeta,'1'),isnull(convert(varchar,mt_cotiza),'1.0')
End-Select 
End-Procedure

!-----------------------------
Begin-Procedure CampoContable
!-----------------------------
let #val = 0                                    !GMD19980506
evaluate &tc_contabiliza
WHEN = 'VTR'
   let #val = &tm_valor
   break
WHEN = 'VCH'
   let #val = &tm_chq_locales
   break
WHEN = 'COM'
   let #val = &tm_valor_comision
   break
WHEN = 'INT'
   let #val = &tm_saldo_interes
   break
WHEN = 'TDE'                              !* DEPOSITO COMPLETO (DSC970917) *!
   let #val = &tm_valor + &tm_chq_locales 
   break
WHEN = 'VCO'            
   let #val = &tm_valor - &tm_valor_comision
   break
WHEN = 'VIN'            
   let #val = &tm_valor - &tm_saldo_interes
   break
WHEN = 'CCO'                              !* N/D CHQ DEVUELTO  (DSC970917) *!
   let #val = &tm_chq_locales + &tm_valor_comision
   break
WHEN = 'EFE'                     
   if  $canal <> 'CNB'
      let #val = &tm_efectivo
   end-if
   break
WHEN = 'EFECNB'  
   if $canal = 'CNB'
      let #val = &tm_efectivo
   end-if
   break   
WHEN = 'SAL'                    
   let #val = &tm_saldo_lib
   break
WHEN = 'SAC'                   
   let #val = &tm_saldo_contable
   break
WHEN = 'SAD'                     
   let #val = &tm_saldo_disponible
   break
WHEN = 'IN2'                    
   let #val = &tm_interes
   break
WHEN = 'MCH'                   
   let #val = &tm_val_cheque
   break
WHEN = 'IMP'
   let #val = &tm_valor_impuesto               !* DBL981216
   break 
WHEN = 'CAP'                                   !* DBL981216
   let #val = &tm_valor + &tm_valor_impuesto   
   break                      
WHEN = 'VCC'                                   !* DBL981216
   let #val = &tm_chq_locales + &tm_valor_impuesto - (&tm_efectivo - &tm_valor)
   break   
end-evaluate
!show #val ' CORR:' &tm_correccion
End-Procedure

!-----------------------------
Begin-Procedure Salvar
!-----------------------------
!* Salva las variables necesarias antes del quiebre y encera variables *!
let #oficina_orig = &ti_ofic_orig
let #oficina_dest = &ti_ofic_dest
let #moneda = &ti_moneda
let $estado_cont = &tc_estado
!show 'estado:' $estado_cont
End-Procedure

!-----------------------------
Begin-Procedure Analizar_Quiebre
!-----------------------------
!* De producirse un quiebre, acumula todos los valores para la *!
!* transaccion activa                                          *!

add 1 to #quiebre
if #quiebre = {TRUE} ! Si es 1 entonces totaliza
   do Grabar_Total
end-if
End-Procedure

!-----------------------------
Begin-Procedure Actualizar (#indice,#tran,$causa,#valor,$perfil,#codval,#sec,#signo,$compra)
!Begin-Procedure Actualizar (#indice,#tran,$causa,#valor,$perfil,#codval,#sec,#signo,$compra,#tranmone)
!-----------------------------
!* Actualiza el elemento totalizador del arreglo #indice con #valor *!
get #valor_anterior from Totalizador (#indice) valor
let #nuevo_valor = #valor_anterior + (#valor * #signo)
get #numtran_ant from Totalizador (#indice) Numtran
let #numtran_ant = #numtran_ant + (1 * #signo)
put #tran $causa #nuevo_valor $perfil #codval #numtran_ant $compra into Totalizador (#indice)
!put #tran $causa #nuevo_valor $perfil #codval #numtran_ant $compra #tranmone into Totalizador (#indice)
End-Procedure

!-----------------------------
Begin-Procedure Grabar_Total
!-----------------------------
!* Graba en re_total los totales para la transaccion y causa definidas *!
!* en el arreglo Totalizador                                           *!

let #ind_max = {NRO_TOT} - 1
!show 'GRABANDO: '  #ind_max
let #i = 1
while #i <= #ind_max ! Analizamos todos los totalizadores 
   get #tran_dest $causa_org #valor_dest $perfil #codval #numtrn $cot_compra from Totalizador (#i) 
   !get #tran_dest $causa_org #valor_dest $perfil #codval #numtrn $cot_compra #tran_mone from Totalizador (#i) 
     !show 'ENTRO' 
   if #valor_dest <> 0 
      !show 'SIGUE' 
      !if #moneda <> 0 
      if #moneda <> #moneda_base ! Moneda Base      
         do Moneda_Extranjera
      else
        !-- CMH 13Abr2000
        !if #tran_dest = 4264 or #tran_dest = 4255 or #tran_dest = 4262 or #tran_dest = 4253 or #tran_dest = 4272
        !   do Moneda_Nacional
        !else
        let #valor_me = 0
        !end-if
      end-if

      Begin-SQL on-error=Error              ! re_total_cc (to_pro DSC970516
      insert into cob_remesas..re_total_ah 
             (to_producto,  to_moneda,    to_tipo_tran, to_causa,    
              to_ofic_orig, to_ofic_dest, to_valor,     to_perfil,    
              to_codval,    to_valor_me,  to_numtran,   to_estado, 
              to_tipo,      to_cotizacion) !-- GYC 2004/Ago/03
      values (4,            #moneda,      #tran_dest,   $causa_org,
              #oficina_orig,#oficina_dest,#valor_dest,  $perfil, 
              #codval,      #valor_me,    #numtrn,      $estado_cont, 
              'M',          #ct_compra  ) !-- GYC 2004/Ago/03 
      End-SQL
      put 0 '' 0 '' 0 0 into Totalizador (#i)
      !show 'INSERTO' 
   end-if
   add 1 to #i
end-while
End-Procedure

!-----------------------------
Begin-Procedure Moneda_Extranjera
!-----------------------------
!Este codigo quemado representan las transacciones de euros que deben utilizar como tipo de 
!cambio el campo ct_valor en lugar del ct_compra
if #tran_dest = 4239 or #tran_dest = 4294 or #tran_dest = 4237 or #tran_dest = 4293 or #tran_dest = 4252 or #tran_dest = 4263 or #tran_dest = 4272  or #tran_dest = 4253
Begin-Select
convert(float,$cot_compra) &cot_compra
End-Select
let #ct_compra = &cot_compra
else
Begin-Select
ct_compra
from cob_conta..cb_cotizacion
where ct_fecha = $i_fecha_proceso
  and ct_moneda = convert(tinyint,#moneda) 
End-Select
   if isnull(&ct_compra)
      let #ct_compra = 0
   else
      let #ct_compra = &ct_compra
   end-if
end-if

if #ct_compra = 0
  let #conversion = 0
else
  let #conversion = round((#valor_dest * #ct_compra),#w_numdecbase)
end-if

!***  VERIFICA SI CODIGO VALOR ES DE CUENTA QUE SOLO ACEPTA MONEDA BASE
let #existe   = 0
let $codval   = to_char(#codval)
Begin-Select
valor
  let #existe = 1
from cobis..cl_catalogo
where tabla = (select codigo from cobis..cl_tabla
               where tabla = 're_codval_mn_ah') and codigo = convert(char(10),$codval) !LRC/04261999
End-Select

let $cuenta_c = ''
Begin-Select
ltrim(rtrim(dp_cuenta))   &dp_cuenta
  let $cuenta_c = &dp_cuenta
from cob_conta..cb_det_perfil
where dp_codval = #codval
  and dp_perfil = $perfil
End-Select

let $cuenta_final = ''
do Resolver_Cuenta

let #cu_moneda = #moneda_base
if $cuenta_c <> ''
Begin-Select
cu_moneda
  let #cu_moneda = &cu_moneda
from cob_conta..cb_cuenta
where cu_cuenta = $cuenta_final
End-Select
end-if

!***  #existe = 1: CUENTA SOLO ACEPTA MONEDA NACIONAL, POR LO TANTO #valor_me = 0
!***  #existe = 0: CUENTA ACEPTA VARIAS MONEDAS.
!if #existe = 1
if #moneda_base = #cu_moneda
    let #valor_me   = 0
    let #valor_dest = #conversion
else
    let #valor_me   = #valor_dest
    let #valor_dest = #conversion
end-if
End-Procedure

!------------------------------
Begin-Procedure Moneda_Nacional                                         !RE 04/ABR/2000
!------------------------------
Begin-Select
ct_compra       &compra
from cob_conta..cb_cotizacion
where ct_fecha = $i_fecha_proceso
  and ct_moneda = 0
End-Select
if isnull(&compra)
  let #conversion = 0
else
  let #conversion = round((#valor_dest / &compra),0)
end-if

!***  VERIFICA SI CODIGO VALOR ES DE CUENTA QUE SOLO ACEPTA MONEDA EXTRANJERA
let #existe   = 0
let $codval   = to_char(#codval)
Begin-Select
valor           &val
  let #existe = 1
from cobis..cl_catalogo
where tabla  = (select codigo from cobis..cl_tabla
                 where tabla = 're_codval_ah_me')
  and codigo = convert(char(10),$codval) 
End-Select

!***  #existe = 1: CUENTA SOLO ACEPTA MONEDA EXTRANJERA, POR LO TANTO #valor_me <> 0
!***  #existe = 0: CUENTA ACEPTA VARIAS MONEDAS.
if #existe = 1
   let #valor_me = #conversion
else
   let #valor_me = 0
end-if
End-Procedure


!-----------------------------
Begin-Procedure Error
!-----------------------------
  show $sql-error
  do Abortar
End-Procedure

!------------------------------
Begin-Procedure Inicializaciones
!------------------------------
Begin-Sql
delete cob_remesas..re_total_ah                       !-- GYC 2004/Ago/03
where to_producto = 4
  and to_tipo = 'M'
!**truncate table cob_remesas..re_total               !re_total_cc  DSC970516
End-Sql

begin-select
em_moneda_base
    let #moneda_base = &em_moneda_base
from    cob_conta..cb_empresa
where   em_empresa = 1
end-select

! Numero de decimales para moneda base
begin-select
mo_decimales    
        let $w_usadeci = &mo_decimales
  from cobis..cl_moneda
 where mo_moneda = convert(tinyint,#moneda_base) 
end-select 
if $w_usadeci = 'S'
   let #w_numdecbase = 2
else
   let #w_numdecbase = 0
end-if

let #w_numdecnobase = 0

End-Procedure


Begin-Procedure Extraer_Valor (#filial,$parametro,$valor,:$resultado)
!----------------------------
Begin-Select
re_substring    &substring!OJOOOOO
from cob_conta..cb_relparam
where re_empresa = convert(tinyint,#filial)
  and re_parametro = convert(varchar(10),$parametro)
  and re_clave = convert(varchar(20),$valor)
End-Select
let $resultado = &substring!OJOOOOO
End-Procedure

Begin-Procedure Armar_Cuenta
!---------------------------
let #ascii = ascii(substr($trama,1,1))
if #ascii >= 48 and #ascii <= 57 ! Numerico, parte fija
  let $cuenta_final = $cuenta_final || $trama
else
  let $clave =  to_char(#moneda)   !OJOOOOOO
  do Extraer_Valor (#i_filial,$trama,$clave,$resultado)      !OJOOOOOO
  let $cuenta_final = $cuenta_final || $resultado
end-if
End-Procedure

Begin-Procedure Resolver_Cuenta
!------------------------------
!* A partir de la cuenta dinamica determina la final con los parametros *!
let #salir = {FALSE}
let $cuenta_aux = $cuenta_c
while #salir = {FALSE}
  let #pos = instr ($cuenta_aux,'.',1)
  if #pos = 0 ! No existen mas tramas
    let $trama = $cuenta_aux
    do Armar_Cuenta
    let #salir = {TRUE}
  else
    let #pos_ant = #pos - 1
    let #pos_sig = #pos + 1
    let $trama = substr ($cuenta_aux,1,#pos_ant)
    let $cuenta_aux = substr($cuenta_aux,#pos_sig,length($cuenta_aux)+1-#pos_sig)
    do Armar_Cuenta
  end-if
end-while
!show 'CUENTA A PROCESAR ' $cuenta_aux
End-Procedure

!{PHV  02AGO2006
!Para las transferencias en moneda extranjera se debe realizar con otra cotizacion
Begin-Procedure CotizacionBase
Begin-Select
isnull(ct_compra,1)  &cotbase
from cob_conta..cb_cotizacion
where ct_fecha = $i_fecha_proceso
  and ct_moneda = convert(tinyint,#moneda) 
End-Select
End-Procedure

!}PHV  02AGO2006
