VERSION 5.00
Object = "{A8B3B723-0B5A-101B-B22E-00AA0037B2FC}#1.0#0"; "GRID32.OCX"
Object = "{0F1F1508-C40A-101B-AD04-00AA00575482}#1.0#0"; "mhrinp32.ocx"
Object = "{9AED8C43-3F39-11D1-8BB4-0000C039C248}#2.0#0"; "txtin.ocx"
Object = "{DECFDD03-1E4B-11D1-B65E-0000C039C248}#5.0#0"; "mskedit.ocx"
Object = "{00025600-0000-0000-C000-000000000046}#5.2#0"; "crystl32.ocx"
Begin VB.Form FCC51 
   BackColor       =   &H00C0C0C0&
   BorderStyle     =   1  'Fixed Single
   Caption         =   "RECAUDACIONES - 51"
   ClientHeight    =   8445
   ClientLeft      =   1020
   ClientTop       =   330
   ClientWidth     =   11205
   KeyPreview      =   -1  'True
   MaxButton       =   0   'False
   MDIChild        =   -1  'True
   ScaleHeight     =   8445
   ScaleWidth      =   11205
   Begin VB.TextBox txtCodPago 
      Enabled         =   0   'False
      Height          =   375
      Left            =   8775
      TabIndex        =   97
      Top             =   240
      Visible         =   0   'False
      Width           =   285
   End
   Begin VB.TextBox txtReferenciaAux 
      Height          =   330
      Left            =   8280
      TabIndex        =   96
      Top             =   270
      Visible         =   0   'False
      Width           =   285
   End
   Begin VB.TextBox txt_dato_meer 
      Height          =   375
      Left            =   9120
      TabIndex        =   95
      Top             =   6960
      Visible         =   0   'False
      Width           =   1575
   End
   Begin VB.Frame fragua2 
      BackColor       =   &H00C0C0C0&
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H8000000D&
      Height          =   1200
      Left            =   4800
      TabIndex        =   88
      Top             =   5400
      Visible         =   0   'False
      Width           =   4395
      Begin VB.ComboBox cbo_tipo2 
         Height          =   315
         ItemData        =   "FCC51.frx":0000
         Left            =   1680
         List            =   "FCC51.frx":0002
         Style           =   2  'Dropdown List
         TabIndex        =   89
         Tag             =   "CboProd"
         Top             =   480
         Width           =   2145
      End
      Begin TxtinLib.TextValid txt_CodServ 
         Height          =   285
         Left            =   1680
         TabIndex        =   90
         ToolTipText     =   "Código del Cliente de acuerdo al código de empresa"
         Top             =   840
         Visible         =   0   'False
         Width           =   2040
         _Version        =   65536
         _ExtentX        =   3598
         _ExtentY        =   503
         _StockProps     =   253
         BorderStyle     =   1
         Range           =   ""
         MaxLength       =   15
         Character       =   0
         Type            =   4
         HelpLine        =   ""
         Pendiente       =   ""
         Connection      =   0
         AsociatedLabelIndex=   0
         TableName       =   ""
         MinChar         =   0
         Error           =   0
      End
      Begin VB.Label lblCol 
         Appearance      =   0  'Flat
         AutoSize        =   -1  'True
         BackColor       =   &H00C0C0C0&
         Caption         =   "Tipo:"
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   9
         Left            =   1080
         TabIndex        =   91
         Top             =   600
         Width           =   450
      End
   End
   Begin VB.TextBox txt_cta_tvcable 
      Height          =   285
      Left            =   5040
      TabIndex        =   85
      Top             =   5400
      Width           =   1095
   End
   Begin VB.TextBox txt_ciudad_tv 
      Height          =   285
      Left            =   5640
      TabIndex        =   83
      Top             =   240
      Width           =   2055
   End
   Begin VB.TextBox txt_negocio_tv 
      Height          =   285
      Left            =   6000
      TabIndex        =   82
      Top             =   4920
      Width           =   1935
   End
   Begin VB.TextBox txt_secuencial_tv 
      Height          =   285
      Left            =   6240
      TabIndex        =   81
      Top             =   5280
      Width           =   1575
   End
   Begin VB.TextBox txtregional 
      Height          =   285
      Left            =   4560
      TabIndex        =   79
      Top             =   6240
      Visible         =   0   'False
      Width           =   975
   End
   Begin VB.TextBox txthorario 
      Height          =   375
      Left            =   2520
      TabIndex        =   73
      Top             =   7680
      Visible         =   0   'False
      Width           =   855
   End
   Begin VB.TextBox Txtfeccontable 
      Height          =   285
      Left            =   120
      TabIndex        =   72
      Top             =   7680
      Visible         =   0   'False
      Width           =   1575
   End
   Begin MhinrelLib.MhRealInput Total_Pagar 
      Height          =   285
      Left            =   1365
      TabIndex        =   49
      Top             =   4005
      Visible         =   0   'False
      Width           =   3090
      _Version        =   65536
      _ExtentX        =   5450
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MhinrelLib.MhRealInput txtValFec 
      Height          =   285
      Left            =   3375
      TabIndex        =   65
      ToolTipText     =   "Valor Total de la Transacción"
      Top             =   3675
      Visible         =   0   'False
      Width           =   1080
      _Version        =   65536
      _ExtentX        =   1905
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Enabled         =   -1  'True
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      ReadOnly        =   -1  'True
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin VB.TextBox txtFechVen 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      Enabled         =   0   'False
      Height          =   285
      Left            =   1815
      Locked          =   -1  'True
      TabIndex        =   63
      Top             =   5925
      Visible         =   0   'False
      Width           =   2640
   End
   Begin VB.TextBox txt_fecha_emision 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      Enabled         =   0   'False
      Height          =   285
      Left            =   960
      Locked          =   -1  'True
      TabIndex        =   62
      Top             =   5310
      Visible         =   0   'False
      Width           =   3495
   End
   Begin MSGrid.Grid grdDetalle 
      Height          =   2775
      Left            =   4800
      TabIndex        =   57
      Top             =   1080
      Width           =   4215
      _Version        =   65536
      _ExtentX        =   7435
      _ExtentY        =   4895
      _StockProps     =   77
      BackColor       =   16777215
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
   End
   Begin VB.TextBox NomCta 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      Enabled         =   0   'False
      Height          =   285
      Left            =   1365
      TabIndex        =   47
      Top             =   3060
      Width           =   3090
   End
   Begin VB.TextBox Fecha 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      Enabled         =   0   'False
      Height          =   285
      Left            =   2265
      Locked          =   -1  'True
      TabIndex        =   43
      Top             =   5310
      Visible         =   0   'False
      Width           =   2190
   End
   Begin TxtinLib.TextValid Comprob 
      Height          =   285
      Left            =   1365
      TabIndex        =   10
      ToolTipText     =   "Código del Cliente de acuerdo al código de empresa"
      Top             =   3675
      Width           =   885
      _Version        =   65536
      _ExtentX        =   1561
      _ExtentY        =   503
      _StockProps     =   253
      BorderStyle     =   1
      Range           =   ""
      MaxLength       =   0
      Character       =   0
      Type            =   4
      HelpLine        =   ""
      Pendiente       =   ""
      Connection      =   0
      AsociatedLabelIndex=   0
      TableName       =   ""
      MinChar         =   0
      Error           =   0
   End
   Begin VB.TextBox txtContrato 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      Enabled         =   0   'False
      Height          =   285
      Left            =   960
      Locked          =   -1  'True
      TabIndex        =   18
      Top             =   5310
      Visible         =   0   'False
      Width           =   3495
   End
   Begin VB.TextBox txtFactura 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      Enabled         =   0   'False
      Height          =   285
      Left            =   960
      Locked          =   -1  'True
      TabIndex        =   19
      Top             =   5580
      Visible         =   0   'False
      Width           =   3500
   End
   Begin VB.Frame Fragua 
      BackColor       =   &H00C0C0C0&
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H8000000D&
      Height          =   975
      Left            =   60
      TabIndex        =   22
      Top             =   1110
      Width           =   4395
      Begin VB.ComboBox cboTipoId 
         Enabled         =   0   'False
         Height          =   315
         Left            =   120
         Style           =   2  'Dropdown List
         TabIndex        =   86
         Tag             =   "CboProd"
         Top             =   480
         Visible         =   0   'False
         Width           =   885
      End
      Begin VB.ComboBox CboTipo 
         Height          =   315
         ItemData        =   "FCC51.frx":0004
         Left            =   2040
         List            =   "FCC51.frx":000B
         Style           =   2  'Dropdown List
         TabIndex        =   80
         Tag             =   "CboProd"
         Top             =   480
         Visible         =   0   'False
         Width           =   1305
      End
      Begin VB.PictureBox bitmap 
         Appearance      =   0  'Flat
         BackColor       =   &H00C0C0C0&
         BorderStyle     =   0  'None
         Enabled         =   0   'False
         ForeColor       =   &H80000008&
         Height          =   735
         Left            =   120
         ScaleHeight     =   735
         ScaleWidth      =   855
         TabIndex        =   23
         Top             =   0
         Visible         =   0   'False
         Width           =   855
      End
      Begin TxtinLib.TextValid Ref 
         Height          =   285
         Left            =   2040
         TabIndex        =   3
         ToolTipText     =   "Código del Cliente de acuerdo al código de empresa"
         Top             =   525
         Width           =   2040
         _Version        =   65536
         _ExtentX        =   3598
         _ExtentY        =   503
         _StockProps     =   253
         BorderStyle     =   1
         Range           =   ""
         MaxLength       =   15
         Character       =   0
         Type            =   4
         HelpLine        =   ""
         Pendiente       =   ""
         Connection      =   0
         AsociatedLabelIndex=   0
         TableName       =   ""
         MinChar         =   0
         Error           =   0
      End
      Begin TxtinLib.TextValid Proceso 
         Height          =   285
         Left            =   2040
         TabIndex        =   2
         ToolTipText     =   "Código de empresa (Oprima F5 Ayuda)"
         Top             =   225
         Width           =   585
         _Version        =   65536
         _ExtentX        =   1032
         _ExtentY        =   503
         _StockProps     =   253
         BorderStyle     =   1
         Range           =   ""
         MaxLength       =   4
         Character       =   0
         Type            =   4
         HelpLine        =   "Ingrese el tipo de causa. F5 Ayuda"
         Pendiente       =   ""
         Connection      =   0
         AsociatedLabelIndex=   0
         TableName       =   ""
         MinChar         =   0
         Error           =   0
      End
      Begin TxtinLib.TextValid serpac 
         Height          =   285
         Left            =   2040
         TabIndex        =   69
         ToolTipText     =   "Código de empresa (Oprima F5 Ayuda)"
         Top             =   225
         Visible         =   0   'False
         Width           =   585
         _Version        =   65536
         _ExtentX        =   1032
         _ExtentY        =   503
         _StockProps     =   253
         BorderStyle     =   1
         Range           =   ""
         MaxLength       =   3
         Character       =   0
         Type            =   4
         HelpLine        =   "Ingrese el tipo de causa. F5 Ayuda"
         Pendiente       =   ""
         Connection      =   0
         AsociatedLabelIndex=   0
         TableName       =   "sv_servicios_pacifictel"
         MinChar         =   0
         Error           =   0
      End
      Begin VB.Image ImgStrech 
         Height          =   450
         Left            =   3465
         Stretch         =   -1  'True
         Top             =   135
         Width           =   885
      End
      Begin VB.Label lblCol 
         Appearance      =   0  'Flat
         AutoSize        =   -1  'True
         BackColor       =   &H00C0C0C0&
         Caption         =   "Regional:"
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   6
         Left            =   600
         TabIndex        =   78
         Top             =   240
         Visible         =   0   'False
         Width           =   825
      End
      Begin VB.Label lblCol 
         Appearance      =   0  'Flat
         AutoSize        =   -1  'True
         BackColor       =   &H00C0C0C0&
         Caption         =   "Servicio:"
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Index           =   5
         Left            =   240
         TabIndex        =   71
         Top             =   120
         Visible         =   0   'False
         Width           =   765
      End
      Begin VB.Label sal_serpac 
         Appearance      =   0  'Flat
         BackColor       =   &H00C0C0C0&
         BorderStyle     =   1  'Fixed Single
         BeginProperty Font 
            Name            =   "Small Fonts"
            Size            =   6.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000008&
         Height          =   285
         Left            =   2655
         TabIndex        =   70
         Top             =   225
         Visible         =   0   'False
         Width           =   1410
      End
      Begin VB.Label lblCol 
         Appearance      =   0  'Flat
         AutoSize        =   -1  'True
         BackColor       =   &H00C0C0C0&
         Caption         =   "Tipos:"
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   285
         Index           =   0
         Left            =   1080
         TabIndex        =   33
         Top             =   190
         Width           =   540
      End
      Begin VB.Label sal_proc 
         Appearance      =   0  'Flat
         BackColor       =   &H00C0C0C0&
         BorderStyle     =   1  'Fixed Single
         BeginProperty Font 
            Name            =   "Small Fonts"
            Size            =   6.75
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H80000008&
         Height          =   285
         Left            =   2670
         TabIndex        =   21
         Top             =   225
         Width           =   1410
      End
      Begin VB.Label lblCobAlum 
         Appearance      =   0  'Flat
         AutoSize        =   -1  'True
         BackColor       =   &H00C0C0C0&
         Caption         =   "Codigo:"
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H00800000&
         Height          =   195
         Left            =   1100
         TabIndex        =   32
         Top             =   570
         Width           =   660
      End
   End
   Begin VB.TextBox Nombre 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      Enabled         =   0   'False
      Height          =   285
      Left            =   960
      Locked          =   -1  'True
      TabIndex        =   17
      Top             =   5010
      Width           =   3495
   End
   Begin VB.ComboBox CboTipCta 
      Height          =   315
      Left            =   1365
      Style           =   2  'Dropdown List
      TabIndex        =   7
      Tag             =   "CboProd"
      Top             =   2700
      Width           =   1305
   End
   Begin TxtinLib.TextValid Empresa 
      Height          =   240
      Left            =   1365
      TabIndex        =   1
      ToolTipText     =   "Código de empresa (Oprima F5 Ayuda)"
      Top             =   270
      Width           =   630
      _Version        =   65536
      _ExtentX        =   1111
      _ExtentY        =   423
      _StockProps     =   253
      BorderStyle     =   1
      Range           =   ""
      MaxLength       =   3
      Character       =   0
      Type            =   1
      HelpLine        =   "Ingrese el tipo de causa. F5 Ayuda"
      Pendiente       =   ""
      Connection      =   0
      AsociatedLabelIndex=   0
      TableName       =   ""
      MinChar         =   0
      Error           =   0
   End
   Begin MhinrelLib.MhRealInput Efe 
      Height          =   285
      Left            =   1365
      TabIndex        =   4
      ToolTipText     =   "Valor en Efectivo"
      Top             =   2085
      Width           =   3090
      _Version        =   65536
      _ExtentX        =   5450
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Enabled         =   -1  'True
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MhinrelLib.MhRealInput Valor 
      Height          =   285
      Left            =   3060
      TabIndex        =   16
      ToolTipText     =   "Valor Total de la Transacción"
      Top             =   4380
      Visible         =   0   'False
      Width           =   1395
      _Version        =   65536
      _ExtentX        =   2461
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Enabled         =   -1  'True
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MhinrelLib.MhRealInput Loc 
      Height          =   285
      Left            =   2730
      TabIndex        =   6
      ToolTipText     =   "Valor en Cheques"
      Top             =   2400
      Width           =   1725
      _Version        =   65536
      _ExtentX        =   3043
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Enabled         =   -1  'True
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MhinrelLib.MhRealInput Debito 
      Height          =   285
      Left            =   1365
      TabIndex        =   9
      Top             =   3375
      Width           =   3090
      _Version        =   65536
      _ExtentX        =   5450
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MhinrelLib.MhRealInput Reten 
      Height          =   285
      Left            =   3120
      TabIndex        =   11
      Top             =   3690
      Width           =   1335
      _Version        =   65536
      _ExtentX        =   2355
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      TintColor       =   16711935
      FillColor       =   16777215
      Text            =   ""
      MaxReal         =   3.4E+38
      MinReal         =   0
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MhinrelLib.MhRealInput Minimo 
      Height          =   285
      Left            =   960
      TabIndex        =   15
      ToolTipText     =   "Valor Total de la Transacción"
      Top             =   4395
      Visible         =   0   'False
      Width           =   1110
      _Version        =   65536
      _ExtentX        =   1958
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Enabled         =   -1  'True
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MhinrelLib.MhRealInput Pago_Val 
      Height          =   285
      Left            =   1365
      TabIndex        =   12
      Top             =   4005
      Width           =   3090
      _Version        =   65536
      _ExtentX        =   5450
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin TxtinLib.TextValid CantChq 
      Height          =   285
      Left            =   1350
      TabIndex        =   5
      ToolTipText     =   "Cantidad de Cheques"
      Top             =   2400
      Width           =   525
      _Version        =   65536
      _ExtentX        =   926
      _ExtentY        =   503
      _StockProps     =   253
      BorderStyle     =   1
      Range           =   ""
      MaxLength       =   0
      Character       =   0
      Type            =   2
      HelpLine        =   ""
      Pendiente       =   ""
      Connection      =   0
      AsociatedLabelIndex=   0
      TableName       =   ""
      MinChar         =   0
      Error           =   0
   End
   Begin TxtinLib.TextValid Servicio 
      Height          =   240
      Left            =   1365
      TabIndex        =   0
      ToolTipText     =   "Codigo de Servicio"
      Top             =   10
      Width           =   630
      _Version        =   65536
      _ExtentX        =   1111
      _ExtentY        =   423
      _StockProps     =   253
      BorderStyle     =   1
      Range           =   ""
      MaxLength       =   1
      Character       =   0
      Type            =   0
      HelpLine        =   "Ingrese el Tipo de Servicio. F5 Ayuda"
      Pendiente       =   ""
      Connection      =   0
      AsociatedLabelIndex=   0
      TableName       =   "sv_recaudaciones"
      MinChar         =   0
      Error           =   0
   End
   Begin TxtinLib.TextValid mensaje 
      Height          =   285
      Left            =   1800
      TabIndex        =   48
      Top             =   6600
      Visible         =   0   'False
      Width           =   630
      _Version        =   65536
      _ExtentX        =   1111
      _ExtentY        =   503
      _StockProps     =   253
      BorderStyle     =   1
      Enabled         =   0   'False
      Range           =   ""
      MaxLength       =   3
      Character       =   0
      Type            =   1
      HelpLine        =   "Ingrese el tipo de causa. F5 Ayuda"
      Pendiente       =   ""
      Connection      =   0
      AsociatedLabelIndex=   0
      TableName       =   ""
      MinChar         =   0
      Error           =   0
   End
   Begin MhinrelLib.MhRealInput Comision 
      Height          =   285
      Left            =   960
      TabIndex        =   50
      ToolTipText     =   "Valor Total de la Transacción"
      Top             =   4700
      Width           =   1110
      _Version        =   65536
      _ExtentX        =   1958
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Enabled         =   0   'False
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      ReadOnly        =   -1  'True
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MhinrelLib.MhRealInput Total 
      Height          =   285
      Left            =   3060
      TabIndex        =   52
      ToolTipText     =   "Valor Total de la Transacción"
      Top             =   4695
      Width           =   1395
      _Version        =   65536
      _ExtentX        =   2461
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Enabled         =   0   'False
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin VB.ComboBox cmbTid 
      Height          =   315
      Left            =   1350
      Style           =   2  'Dropdown List
      TabIndex        =   13
      Tag             =   "CboProd"
      Top             =   4230
      Width           =   885
   End
   Begin TxtinLib.TextValid txtCedula 
      Height          =   285
      Left            =   2280
      TabIndex        =   14
      ToolTipText     =   "Código del Cliente de acuerdo al código de empresa"
      Top             =   4230
      Width           =   2175
      _Version        =   65536
      _ExtentX        =   3836
      _ExtentY        =   503
      _StockProps     =   253
      BorderStyle     =   1
      Range           =   ""
      MaxLength       =   15
      Character       =   0
      Type            =   4
      HelpLine        =   ""
      Pendiente       =   ""
      Connection      =   0
      AsociatedLabelIndex=   0
      TableName       =   ""
      MinChar         =   0
      Error           =   0
   End
   Begin VB.TextBox Nota_Venta 
      Height          =   285
      Left            =   3120
      TabIndex        =   56
      Top             =   6720
      Visible         =   0   'False
      Width           =   975
   End
   Begin VB.TextBox txt_trama 
      Appearance      =   0  'Flat
      Height          =   285
      Left            =   2760
      TabIndex        =   60
      Top             =   4560
      Visible         =   0   'False
      Width           =   2535
   End
   Begin MskeditLib.MaskInBox Cta 
      Height          =   285
      Left            =   2730
      TabIndex        =   8
      Tag             =   "Cta"
      ToolTipText     =   "Número de la Cuenta"
      Top             =   2715
      Width           =   1725
      _Version        =   262144
      _ExtentX        =   3043
      _ExtentY        =   503
      _StockProps     =   253
      Text            =   "___-______-_"
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      BorderStyle     =   1
      Decimals        =   0
      Separator       =   -1  'True
      MaskType        =   1
      HideSelection   =   0   'False
      MaxLength       =   0
      AutoTab         =   -1  'True
      DateString      =   "___-______-_"
      FormattedText   =   ""
      Mask            =   "###-######-#"
      HelpLine        =   "Ingrese el numero de cuenta."
      ClipText        =   ""
      ClipMode        =   0
      StringIndex     =   0
      DateType        =   0
      DateSybase      =   "09/08/1997"
      AutoDecimal     =   -1  'True
      MinReal         =   0
      MaxReal         =   0
      Units           =   0
      Errores         =   0
   End
   Begin MhinrelLib.MhRealInput txtValDeu 
      Height          =   285
      Left            =   1365
      TabIndex        =   66
      ToolTipText     =   "Valor Total de la Transacción"
      Top             =   3675
      Visible         =   0   'False
      Width           =   1080
      _Version        =   65536
      _ExtentX        =   1905
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Enabled         =   -1  'True
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      ReadOnly        =   -1  'True
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MhinrelLib.MhRealInput ValMinimo 
      Height          =   285
      Left            =   1365
      TabIndex        =   74
      ToolTipText     =   "Valor Total de la Transacción"
      Top             =   3675
      Visible         =   0   'False
      Width           =   1080
      _Version        =   65536
      _ExtentX        =   1905
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Enabled         =   -1  'True
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      ReadOnly        =   -1  'True
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MhinrelLib.MhRealInput ValMaximo 
      Height          =   285
      Left            =   3375
      TabIndex        =   75
      ToolTipText     =   "Valor Total de la Transacción"
      Top             =   3690
      Visible         =   0   'False
      Width           =   1080
      _Version        =   65536
      _ExtentX        =   1905
      _ExtentY        =   503
      _StockProps     =   77
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Enabled         =   -1  'True
      TintColor       =   16711935
      FillColor       =   16777215
      MaxReal         =   3.4E+38
      MinReal         =   0
      ReadOnly        =   -1  'True
      SpinChangeReal  =   0
      AutoHScroll     =   -1  'True
      CaretColor      =   -2147483642
      DecimalPlaces   =   2
      Separator       =   -1  'True
   End
   Begin MSGrid.Grid grddato 
      Height          =   1335
      Left            =   6720
      TabIndex        =   84
      Top             =   3720
      Visible         =   0   'False
      Width           =   2625
      _Version        =   65536
      _ExtentX        =   4630
      _ExtentY        =   2355
      _StockProps     =   77
      BackColor       =   16777215
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
   End
   Begin VB.TextBox Nombre_oficina 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      Enabled         =   0   'False
      Height          =   285
      Left            =   1365
      Locked          =   -1  'True
      TabIndex        =   42
      Top             =   90
      Width           =   3090
   End
   Begin Crystal.CrystalReport rptBAD 
      Left            =   45
      Top             =   6705
      _ExtentX        =   741
      _ExtentY        =   741
      _Version        =   348160
      DiscardSavedData=   -1  'True
      PrintFileLinesPerPage=   60
   End
   Begin VB.Label lbl_paramrev 
      AutoSize        =   -1  'True
      Caption         =   "lbl_paramrev"
      Height          =   195
      Left            =   45
      TabIndex        =   98
      Top             =   6480
      Visible         =   0   'False
      Width           =   900
   End
   Begin VB.Label lblServicio 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      BorderStyle     =   1  'Fixed Single
      ForeColor       =   &H80000008&
      Height          =   240
      Left            =   2040
      TabIndex        =   40
      Top             =   15
      Width           =   2415
   End
   Begin VB.Label lblCol 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Text.Aux.:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   7
      Left            =   4815
      TabIndex        =   94
      Top             =   765
      Visible         =   0   'False
      Width           =   885
   End
   Begin VB.Label lblAux 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      BorderStyle     =   1  'Fixed Single
      BeginProperty Font 
         Name            =   "Small Fonts"
         Size            =   6.75
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H80000008&
      Height          =   240
      Left            =   5700
      TabIndex        =   93
      Top             =   780
      Visible         =   0   'False
      Width           =   1020
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      Caption         =   "Facturas pendient.:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   465
      Index           =   14
      Left            =   75
      TabIndex        =   92
      Top             =   5925
      Visible         =   0   'False
      Width           =   900
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "F. limite:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   13
      Left            =   120
      TabIndex        =   87
      Top             =   5370
      Visible         =   0   'False
      Width           =   735
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "V.Maximo:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   12
      Left            =   2565
      TabIndex        =   77
      Top             =   3720
      Visible         =   0   'False
      Width           =   885
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "V.Minimo:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   9
      Left            =   120
      TabIndex        =   76
      Top             =   3720
      Visible         =   0   'False
      Width           =   840
   End
   Begin VB.Label lblmensaje 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      BorderStyle     =   1  'Fixed Single
      Enabled         =   0   'False
      BeginProperty Font 
         Name            =   "Small Fonts"
         Size            =   6.75
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H80000008&
      Height          =   285
      Left            =   0
      TabIndex        =   68
      Top             =   1170
      Visible         =   0   'False
      Width           =   2805
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Val. Deu.:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   11
      Left            =   75
      TabIndex        =   67
      Top             =   3720
      Visible         =   0   'False
      Width           =   870
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Val. Ult.:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   10
      Left            =   2520
      TabIndex        =   64
      Top             =   3720
      Visible         =   0   'False
      Width           =   765
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Fecha Emision :"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   8
      Left            =   90
      TabIndex        =   61
      Top             =   5370
      Visible         =   0   'False
      Width           =   1350
   End
   Begin VB.Label Forma_Pago 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      BorderStyle     =   1  'Fixed Single
      ForeColor       =   &H80000008&
      Height          =   240
      Left            =   2040
      TabIndex        =   59
      Top             =   690
      Width           =   2415
   End
   Begin VB.Label lblCol 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Forma de Pago:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   240
      Index           =   4
      Left            =   120
      TabIndex        =   58
      Top             =   690
      Width           =   1350
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Valor Serv:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   0
      Left            =   2115
      TabIndex        =   30
      Top             =   4440
      Visible         =   0   'False
      Width           =   960
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Total:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   7
      Left            =   2115
      TabIndex        =   53
      Top             =   4740
      Width           =   510
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Comisión:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   6
      Left            =   75
      TabIndex        =   51
      Top             =   4740
      Width           =   11295
   End
   Begin VB.Label LblNomCta 
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Nombre Cta:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Left            =   75
      TabIndex        =   46
      Top             =   3105
      Width           =   1065
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Nombre:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   1
      Left            =   90
      TabIndex        =   31
      Top             =   5055
      Width           =   780
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Fecha tope de pago:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   5
      Left            =   75
      TabIndex        =   45
      Top             =   5355
      Visible         =   0   'False
      Width           =   2025
   End
   Begin VB.Label lblCol 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Localidad:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   3
      Left            =   120
      TabIndex        =   44
      Top             =   960
      Width           =   900
   End
   Begin VB.Label lblCol 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Servicio:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   165
      Index           =   2
      Left            =   120
      TabIndex        =   41
      Top             =   45
      Width           =   765
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Contrato:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   255
      Index           =   3
      Left            =   75
      TabIndex        =   39
      Top             =   5055
      Visible         =   0   'False
      Width           =   810
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Factura:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   4
      Left            =   75
      TabIndex        =   38
      Top             =   5655
      Visible         =   0   'False
      Width           =   720
   End
   Begin VB.Label Label1 
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Comprob. Ret:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   1
      Left            =   75
      TabIndex        =   37
      Top             =   3720
      Width           =   1230
   End
   Begin VB.Label lblCantchq 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Cant.Cheques:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Left            =   75
      TabIndex        =   36
      Top             =   2445
      Width           =   1260
   End
   Begin VB.Label ValPago 
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Total a Pagar:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Left            =   75
      TabIndex        =   35
      Top             =   4050
      Width           =   1230
   End
   Begin VB.Label lblValor 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "V.Minimo:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   2
      Left            =   75
      TabIndex        =   34
      Top             =   4440
      Visible         =   0   'False
      Width           =   840
   End
   Begin VB.Label Sal_Emp 
      Appearance      =   0  'Flat
      BackColor       =   &H00C0C0C0&
      BorderStyle     =   1  'Fixed Single
      BeginProperty Font 
         Name            =   "Small Fonts"
         Size            =   6.75
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H80000008&
      Height          =   405
      Left            =   2040
      TabIndex        =   20
      Top             =   270
      Width           =   2415
   End
   Begin VB.Label lblCol 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Empresa:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   165
      Index           =   1
      Left            =   120
      TabIndex        =   24
      Top             =   348
      Width           =   795
   End
   Begin VB.Label lblEfe 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Efectivo:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Left            =   75
      TabIndex        =   25
      Top             =   2130
      Width           =   900
   End
   Begin VB.Label lblLoc 
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Cheques:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Left            =   1920
      TabIndex        =   26
      Top             =   2445
      Width           =   810
   End
   Begin VB.Label LblCuenta 
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "ND a cta:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Left            =   75
      TabIndex        =   27
      Top             =   2760
      Width           =   840
   End
   Begin VB.Label LblDebito 
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Debito :"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Left            =   75
      TabIndex        =   28
      Top             =   3420
      Width           =   690
   End
   Begin VB.Label Label1 
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Valor Ret:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   0
      Left            =   2265
      TabIndex        =   29
      Top             =   3720
      Width           =   870
   End
   Begin VB.Label lblTid 
      AutoSize        =   -1  'True
      Caption         =   "TipoId"
      Height          =   195
      Left            =   1140
      TabIndex        =   55
      Top             =   4275
      Width           =   450
   End
   Begin VB.Label Label1 
      Appearance      =   0  'Flat
      AutoSize        =   -1  'True
      BackColor       =   &H00C0C0C0&
      Caption         =   "Tipo/Ident.:"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   8.25
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800000&
      Height          =   195
      Index           =   2
      Left            =   75
      TabIndex        =   54
      Top             =   4290
      Width           =   1035
   End
End
Attribute VB_Name = "FCC51"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
'/*JPM 11112004 Jorge Pazmiño : Cobro de comsision por pago servicio */
'/*JPM 08122004 Jorge Pazmiño : Impresión nota de venta              */
'/*JPM 16122004 Jorge Pazmiño : Guardar/recuperar identificacion por */
'/*                             nota/debito sin especificacion de id */
'/*JPM 22122004 Jorge Pazmiño:  Reverso de peticion de cedula/ruc por*/
'/*                pago servicio e impresion N/V. IMPORTANTE: para   */
'/                 restablecer su uso, eliminar el bloque respectivo */
'                  en el evento Load de la forma                     */
'/*------------------------------------------------------------------*/
' 31ENE2005 Hugo Yépez  Preparar el programa para acceder en caso de
'                       pacifictel por tramas desde el frontend
'/*------------------------------------------------------------------*/
' 18FEB2005 Hugo Yépez  Incorporar la nota de venta para colegios
'/*------------------------------------------------------------------*/
' 26AGO2005 Daniel Gomez -  Incorporar captura de No. de autorizacion
'                           del SRI y  fecha de vencimiento de  dicha
'                           autorizacion (ANDINATEL)
'09Nov2005 Mauricio Echeverría Migración de Colegios al SAT          */
'03Ene2008 Luis F. Chacha M Validar ingreso obligatorio del numero de'
'                           contrato de TvCable y que solo permita el'
'                           ingreso de numeros, no letras, ni caracte'
'                           res especiales.                          '
'lfcm 19-junio-2008 Se aplica formato al campo @i_poperador en CATEG
'/*------------------------------------------------------------------*/
'********************************************************************************'
'*              MODIFICACIONES                                                  *'
'* REF  FECHA       AUTOR          DESCRIPCION                                  *'
'*  11  04/Oct/2016 Miriam Lindao  MEER-AP-SGC00026606-SGC00026614 Cambio MEER  *'
'*  12  01/Nov/2016 Vanessa Miranda MEER-AP-SGC00026606-SGC00026614 Cambio MEER  *'
'*  13  13/Sep/2017 Daniel Pereira  RECA-CC-SGC00029498 Interagua - comisión ND  *'
'*  14  19/Sep/2017 Vanessa Miranda FACOFF-AP-SGC00029747-SGC00029748 Agregar   *'
'*      Clave de Acceso Facturación Electrónica Offline                         *'
'*  15  14/Dic/2017 Danny Olaya S.  RECA-CC-SGC00030521 Comision - Débito Automático *'
'*      CNEL Guayaquil                                                          *'
'*  16  09/Mar/2018 Danny Olaya S.  CTE-CE-SGC00031263 Campo Total a Pagar Automático - MEER*'
'*  17  24/Sept/2018 Danny Olaya S. RECA-CC-SGC00033000 RECAUDACION UEES*'
'*  18  29/Mar/2019 Danny Olaya S. RECA-CE-SGC00033986 LIMPIO PANTALLA UTPL *'
'*  19  11/Junio/2020 Luis Gusñay C. [RECMPS-163] DE PRATI - etiqueta de Identificacion *'
'*  20  11/Ago/2021 Mirelly G. - Iroute  SGC00042528: Caja Verde 2.0            *'
'********************************************************************************'
Dim VLCambio As Integer
Dim grid(30) As Variant 'CRR
Dim VLDescargar As Integer
Dim vlOpcion As String
Dim VLTrn As String
Dim VLProcedure As String
Dim VlMes As String
Dim VTMes As String
Dim VLHorario As String
Dim VLfirma As Boolean
Dim VLEtiqTrn As String
Dim VLAltoForm As Integer
Dim VLFechaCorte As String
'ref:esma03ago2004
'->hy-31-ene-2005
'A partir de este instante esta variable pasa a ser global en el modcmn.bas
'Dim VLDatosConexionPV As structUpLoad
'<-hy-31-ene-2005
Dim SLSPCAndinatel As structServicioCnn
Dim SFormaPago As structFormaPagoCnn
Dim VLSecTrnCorr, VLemp_switch, VLtrn_switch As String
Dim VLHoraProceso As String
Dim VLFechaProceso As String
Dim VLMensajeVerificados As String
Dim VLDescripcion, VLRetencion, VLBaseImponible As String
Dim VLEmpDir, VLEmpruc, VLEmpaut, VLEmpval, VLEmpRes, VLCodCaj As String
Dim VLNombreCliente, VLValfactura, VLFecEmi, VLcategoria, VLValSaldoCredito
Dim VLFactImpagas, VLCedFactura, VLSubtotal, VLCicloFact, VLFecVen
Dim VLNumRubros, VLDetRubros1, VLDetRubros2, VLDetRubros3
Dim VLrubro1, VLrubro2, VLrubro3, VLrubro5, VLrubro6, VLrubro7, VLrubro27, VLrubro501, VLrubro500, VLrubro9992, VLrubro9993, VLrubro9995, VLrubro9991
'FMV
Dim VLDatosEmpresa() As String
Dim VLCodResp  As String
Dim VLautoriSri As String     '/*JPM 08122004*/
Dim VLFecvenSRI As String     '/*JPM 08122004*/
Dim VLSerie_Secuencia As String     'lfcm 08-dic-2006
Dim VLIdEsValida As Boolean   '/*JPM 08122004*/
'-->hy-31-ene-2005
Dim VLContratoPAC As String
Dim VLNumFacturaPAC As String
Dim VLValorTramaPAC As String
Dim VLMensajeErrPac As String
Dim VLOnLine As String
Dim VLCTGP As String
Dim VLTsnTemp As Integer
'<--hy-31-ene-2005
Dim VLNotaVenta As String 'hy-15-feb-2005
Public VLTramaCodigos As String  'hy-12-oct-2005
Private VLModoTrabajo As String
'S --> Como Sat
'C --> Como Cuentas
Dim VLMoneda As Integer
Dim VLDescMonCta As String

'lfcm 06-diciembre-2006
Dim VLTotCom As Currency
Dim VLEfe_com As Currency
Dim VLChq_com As Currency
Dim cedula As String
Dim SaldoFecha As Currency

Dim VLDeb_com As Currency 'ANBE
Dim VLCalle As String 'ANBE
Dim VLMTop As Boolean  'ANBE
Const MTop = 435      'ANBE
Dim VLPABOP As String   'ANBE
Dim VLFechFac As String 'ANBE
Dim VLFechaVenc As String 'ANBE
Dim VLVMes As String 'ANBE
Dim VLVAcum As String 'ANBE
Dim VLVTotal As String 'ANBE

Dim VLTvCableOnline As String          'hy-19-enero-2007
Dim VLTvCableLocalidad As String       'hy-19-enero-2007
Dim VLTvCableTransaccion As String     'hy-19-enero-2007
Dim VLTvCableTransaccionPago As String 'hy-19-enero-2007
Dim vtmatrizcps(2, 60) As String       'hy-19-enero-2007 'msilvag Inicio soa fase2
Dim VLValorTvCableOriginal As String   'hy-19-enero-2007
Dim VLTvCableFecha As String           'hy-19-enero-2007
Dim VLTvCableFechaContable As String   'hy-19-enero-2007

Dim VLEmpaut_Andinatel As String  'hy-09-marzo-2007
Dim VLEmpval_Andinatel As String  'hy-09-marzo-2007
'Dim psRetorno() As String
Dim VLFechaEnvio As String
Dim VLHoraEnvio As String
Dim VLreferencia As String
Dim VLSecParteFija As String           'lfcm 09-octubre-2007 Parametrizar Parte fija Andinatel

'--Cambios Pedidos por Andinatel en la Facturación
Dim VLFactura As String                'lfcm 01-noviembre-2007
Dim VLCtaCobro As Long                 'lfcm 01-noviembre-2007
Dim VLAutSRI As String                 'lfcm 01-noviembre-2007
Dim VLSubIndice As Integer             'lfcm 01-noviembre-2007
Dim VLValRubro9994 As String           'lfcm 14-noviembre-2007
Dim VLCtaCobroTope As String           'lfcm 18-julio-2008

'-->hy-categ
Dim VLCCATEG As String
Dim VLCedula As String
Dim VLi_pseguridad As String
Dim VLi_pfechaemi As String
Dim VLi_pfechaven As String
Dim VLi_pfactura As String
Dim VLo_pautorizacion As String
Dim VLo_pnumero As String
Dim VLo_pseqmit As String
Dim VLi_phoralocal As String
Dim VLi_pfechalocal As String
Dim VLi_pnumero As String
Dim VLOnLineCateg As String
Dim VLic_phoralocal As String
Dim VLic_pfechalocal As String
Dim VLic_pfechacomp As String
'<--hy-categ

'-->lfcm 02-abril-2009 emelgur
Dim VLCEMELG As String
Dim VLCIFIEM As String
Dim VLEMESEG As String
'JPM 11/02/2016 regional centro sur
'Dim VLCIFICS As String      'RCS
Dim VLcnelFechaVence As String
Dim VLcnelNumFactura As String
Dim VLcnelDeudaTotal As Currency
Dim VLcnelDomicilio As String
Dim VLcnelSecMt As String
Dim VLcnelCodAutoriza As String
Dim VLrevCodSeguridad As String   'Para el reverso
Dim VLrevHoraTrxLocal As String   'Para el reverso
Dim VLrevFechaTrxLocal As String  'Para el reverso
Dim VLrevTerminal As String       'Para el reverso
'--<lfcm 02-abril-2009 emelgur
Dim VLFacturaCNT As String 'gmartillo 10/19/2009
Dim VLFechaEmiCNT As String 'gmartillo 10/19/2009
Dim VLHorarioEmpresa As String          'GAMC - 20/05/2008 - SOAT
Dim VLDpsecporta As String  'tc 01/12/2010 PORTA
Dim VLDpPHorario As String  'tc 01/12/2010 PORTA
Dim VLFechaContable As String   'TC-12-enero-2010 PORTA
Dim VLDpPValorPendienteCobro As Currency   'lfcm 24-agosto-2009
Dim VLNombre As String  'TC 19/02/2010

Dim VLDpCFechaVenCobro As String           'lfcm 24-agosto-2009
Dim VLDpCReferenciaCed As String           'lfcm 24-agosto-2009
Dim VLDpCcodResp As String                 'lfcm 24-agosto-2009
Dim VLDpCMsgError As String                'lfcm 24-agosto-2009
Dim VLTipo_imp As String        'ame 08/03/2010
Dim VLfact_elect As String      'ame 08/03/2010
Dim VLFecinivig As String       'sme 06/08/2011
Dim VLFecfinvig As String       'sme 06/08/2011
Dim VGFechaProceso2 As String   'sme 09/20/2011
Dim VLBL As String              'gamc 02/17/2012
Dim VLTipoDocumento As String   'gamc 02/17/2012
Dim VGEmpGrupo  As String       'DAPV/02102012/CNEL
Dim VLCNLSEG As String          'DAPV/02282012/CNEL
Dim VLCodReg As String         'DAPV/02292012/CNEL
Dim VLRubroCNEL As String       'DAPV/03022012/CNEL
Dim VLRucCNEL   As String       'DAPV/03072012/CNEL
Dim MatrizCnel(2, 55) As String 'DAPV/03072012/CNEL
Dim VLSecMt As String           'DAPV/03072012/CNEL
Dim VLSsn As String             'DAPV/03072012/CNEL
Dim VLFechaContEmp As String    'DAPV/03072012/CNEL
Dim VL_Hora As String
Dim VLiva As Currency 'smerino iva
Dim VlbaseImp As Currency 'smerino
Dim VLNombElec As String 'msilvag SGC00007024
Dim VLCodError As String 'new tvcable smerino
Dim VLdescerror As String 'new tvcable smerino
Dim vlsecuenTv As Integer 'new tvcable smerino
Dim VLDpCSecAdq As String   'new tvcable smerino
Dim VLOperacion As String       'DAPV CNT-MOVIL
Dim VLCodAgencia As String      'DAPV CNT-MOVIL
Dim VLInstAdq As String         'DAPV CNT-MOVIL
Dim VLDpCcodAdq As String       'DAPV CNT-MOVIL
Dim VLDpCcodAgencia As String   'DAPV CNT-MOVIL
Dim VLDpCSecAdqRev As String    'DAPV CNT-MOVIL
Dim VLIdPagoRev As String       'DAPV CNT-MOVIL
Dim VLCanalEcut As String 'ecutel dpereirv
Dim VLDpsececutel As String 'ecutel dpereirv
Dim VLValorLimite As String 'ecutel dpereirv
Dim vl_servidor_BUS As String 'msilvag Bus Fase2
Dim VLParametroServer As String 'msilvag BUS Fase2
Dim VLTipCta_com As String 'smerino belcorp
Dim VLCta_com As String 'smerino belcorp
Dim VLCodBanco As String  'smerino belcorp
Dim vl_fecha_validez As String
Dim VLComision As String
Dim vl_idpago As String
Dim VLArrDeudas
Dim Vl_Mes_Impago As String
'msilvag Etapa Inicio ETAPA-AP-SGC00018437-SGC00018454
Dim VLParametroBanco As String
Dim Empresa1 As String
Dim VLIdentificadorDeduda As String
Dim VLTipoServicio As String
Dim VLDeudaActual As String
Dim VLNumTransaccion As String
Dim VLCodDocEtapa As String
Dim VLNumTransaccionReverso As String


Dim VLDocEtapaReverso As String
Dim VLCodDocEtapaReverso As String
Dim VLDescripServicio As String
Dim servicio1 As String
Dim rubro As String
Dim VLComisionEtapa As Double
Dim VLMontoMax As Currency
'msilvag Etapa Fin ETAPA-AP-SGC00018437-SGC00018454
Dim VTotal2 As Double 'msilvag ETAPA Marzo-03-2016
Dim VLHorarioBK As String    'JPM TRB
Dim VLEmpresaMeer As String 'Ref11
Dim VLReferMeer As String 'Ref11
Dim VLContratoMeer As String 'Ref11
Dim VLCodEmpMeer As Integer
Dim vl_trx As String 'ref12 'para obtener el código de transacción que devolvió proveedor
'msilvag RECA-CC-SGC00027715
Dim VLComsion As Double
Dim VLCobroComDeb As String
'msilvag Fin
'dolaya Ini RECA-CC-SGC00029665
Dim VLNumCta As String
'dolaya Fin
'dolayas AMAGUA - AMAGUA-AP-SGC00028642
Dim VLCodPago As String
Dim VLEmpAmaBase As String
Dim VLAmaguaReverso As String
Dim VLclave_acceso As String 'ref14 vmirandt
Dim VLCodConsultora As String 'msilvag RECA-CC-SGC00032726

'<Ref 20
Dim VLVerde As String
Dim VLcodCT As String
Dim VLcodTransaccion As String
Dim UUID As String
Dim VLcvfactura As String
Dim VLtpdnidep As String
Dim VLdnidep As String
Dim VLnomdep As String
Dim VLMail As String
Dim VLTpTrans As String
Dim VLfnCV As String
Dim VLcabCV(13) As String
Dim VlEjecInfoCVv As Boolean
Dim CVcomprobantes() As String
'Ref 20>






'Dim Comision As Currency 'msilvag
Public Function Empresa_SOAT(ByVal opcion1 As String, ByVal Opcion2 As Integer) As String
'German Medina C. - 18/04/2008 - Pago de SOAT
On Error GoTo Error
Dim VLTemporal_1 As String

Select Case opcion1
    Case "1" 'Carga incial despues de seleccionar la empresa
        VLHorarioEmpresa = ""
        Servicio.Enabled = False
        Empresa.Enabled = False
        bitmap.Visible = False
        ImgStrech.Visible = False  'JPM Megadatos
        Fragua.Caption = ""
        efe.Enabled = True
        CantChq.Enabled = True
        Loc.Enabled = True
        Reten.Enabled = False
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Comprob.Enabled = False
        Debito.Enabled = False
        Ref.Enabled = True
        Pago_Val.Visible = False
        Pago_Val.Enabled = False
        Me.Total_Pagar.Visible = True
        Me.Total_Pagar.Enabled = True
        ValPago.Visible = True
        Proceso.TableName = ""
        valor.Enabled = False
        Minimo.Visible = False
        valor.Visible = False
        lblValor(0).Visible = False
        lblValor(1).Visible = False
        Nombre.Visible = False
        lblValor(2).Visible = False
        Proceso.Enabled = False
        Me.Label1(0).Visible = False
        Me.Label1(1).Visible = False
        Comprob.Visible = False
        Me.Comision.Enabled = True
        Reten.Visible = False
        Me.Total_Pagar.Text = ""
        Me.Total.Visible = False
        Me.lblValor(7).Visible = False
        Me.Ref.MaxLength = 13
        If Opcion2 = 0 Then
            Empresa_SOAT = "True"
            Ref.SetFocus
        ElseIf Opcion2 = 1 Then
            PMSetValorReverso Proceso, "@i_proceso"
            PMSetValorReverso Ref, "@i_codigo"
            PMSetValorReverso efe, "@i_efe"
            PMSetValorReverso CboTipCta, "@i_tipocta"
            PMSetValorReverso Pago_Val, "@i_val"
            PMSetValorReverso Sal_Emp, "@i_empname"
            PMSetValorReverso CantChq, "@i_cant_chq"
            PMSetValorReverso Loc, "@i_valch"
            PMSetValorReverso Cta, "@i_cuenta"
            PMSetValorReverso Debito, "@i_debito"
            PMSetValorReverso Comision, "@o_comisionven"
            Fragua.Caption = "              PAGO A " & Sal_Emp
            Me.Total_Pagar.Text = Pago_Val.Text ' - Comision.Text
            Me.Total_Pagar.Enabled = False
            VLEfe_com = Comision.Text
            Total = val(Pago_Val) + val(Comision)
            Empresa_SOAT = "True"
        End If
    Case "2" 'Transmitir
    
        If VLTrn = "3218" Then
            VLTemporal_1 = "3925"
        End If
        If VLTrn = "3219" And VLHorarioEmpresa = "N" Then
            VLTemporal_1 = "3926"
        End If
        If VLTrn = "3219" And VLHorarioEmpresa = "D" Then
            VLTemporal_1 = "3927"
        End If
        
        PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, VLTemporal_1, "Trn", ""
        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
        PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
        PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, (Loc.Text), "Cheque", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
        PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
        PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
        PMPasoValoresATX VGSqlConn, "@i_supautor", 0, SQLVARCHAR, VGSuperAutoriza$, "Sup.autoriza", ""
        PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""  'ame 27.may.03
        PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", "" 'TPE Solo se incluye para el Reverso.
        PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, vlOpcion, "Opcion", ""
        PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
        PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, (Trim(Ref)), "Codigo", ""
        PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
        PMPasoValoresATX VGSqlConn, "@i_efe", 0, SQLMONEY, (efe.Text), "Efectivo", ""
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (CboTipCta.Text), "CboTipCta", ""
                
        PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
        PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
        
        PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
        PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
        PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, (VTIndicadorSum), "SecTrn", ""
        PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
        
        PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, Me.Comision.Text, "Comision", ""
        PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
        PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "AutorizacionSRI", ""
        PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "Stk", ""
        
                    
        VTIndexOutPutId = 11  'Servicio Privado
        Empresa_SOAT = "True"
    Case "3" 'Impresión del Comprobante
        If Trim(VLFechaCorte) <> "0" And VGTipoEjecucion% = CGNormal% Then
            PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte
        End If
        PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
        PMSetDetalle "v" + "PLACA/CAMV/CPN/OTRO: " + Trim(Ref) + " " + IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
        ef$ = ""
        If FMCCurATX((efe.Text)) > 0 Then
            ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
        End If
        Chq$ = ""
        If FMCCurATX((Loc.Text)) > 0 Then
            Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
        End If
        If ef$ <> "" Or Chq$ <> "" Then
            PMSetDetalle "v" + ef$ + Chq$
        End If
        If FMCCurATX((Debito.Text)) > 0 Then
            PMSetDetalle "v" + "CTA.: " + Format(Cta.ClipText, "000-000000-0") + " DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 15, CGJustificacionDerecha)
        End If
        If Not ((Servicio = 1 And Empresa = 1707) Or (Servicio = 2 And Empresa = 1708) Or (Servicio = 3 And Empresa = 1)) Then 'ANBE 120806 if & else   hy-categ inclusion servicio 3 empresa 1
            VLNeto = FMCCurATX(Me.Total_Pagar.Text)
        End If
        PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms  '/*JPM 08122004*/
        sal_empr = valor.Text - Pago_Val.Text
        If VLTsnTemp% = 0 Then
            VLTsnTemp% = VGTSN%
        End If
        Empresa_SOAT = "True"
    Case "4" 'Tecla F2
        Me.Ref.MaxLength = 15
        Me.Total_Pagar.Visible = False
        Me.Total_Pagar.Enabled = False
        Me.Total_Pagar.Text = ""
        Servicio.Enabled = True
        Empresa.Enabled = True
        bitmap.Visible = True
        Reten.Enabled = True
        Comprob.Enabled = True
        Debito.Enabled = True
        Pago_Val.Visible = True
        ValPago.Visible = True
        valor.Enabled = True
        Minimo.Visible = True
        valor.Visible = True
        lblValor(0).Visible = True
        lblValor(1).Visible = True
        Nombre.Visible = True
        lblValor(2).Visible = True
        Proceso.Enabled = True
        Me.Label1(0).Visible = True
        Me.Label1(1).Visible = True
        Comprob.Visible = True
        Reten.Visible = True
        Me.Total.Visible = True
        Me.lblValor(7).Visible = True
        VGSuperAutoriza = ""
        VGAutoriza = "N"
        VLHorarioEmpresa = ""
        'ref11 inicio
        VLEmpresaMeer = "N"
        VLReferMeer = ""
        VLContratoMeer = ""
        'ref11 fin
    Case "5" 'Consulta de Comisión del SOAT
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3218", "Transaccion", ""
        PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "S", "Opcion", ""
        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, Empresa.Text, "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, Comision.Text, "Comision", ""
        PMPasoValoresATX VGSqlConn, "@o_campo_adic1", 1, SQLVARCHAR, " ", "HorarioEmpresa", ""
        
        If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_servicio_rc", True, "Transaccion Ok", "S", "N", VLReverso$, "51", "S", "S") = True Then
            VLHorarioEmpresa = ""
            Comision.Text = FMRetParamATX(VGSqlConn, 1)
            VLHorarioEmpresa = FMRetParamATX(VGSqlConn, 2)
        End If
        VTIndicadorSum = 0
        PMChequea VGSqlConn&
        PMFinTransaccion
        
        Empresa_SOAT = "True"
        
        'LBP Inicio RECA-CC-SGC00025869
        If Comision > 0 Then
            VGCom_aux = FMDevuelveComisionReal(CDbl(Comision), False, 51)
            If VGCom_aux <> CDbl(Comision) And VGCom_aux > 0 Then
                VGComision_original = Comision
                Comision = VGCom_aux
            Else
                VGComision_original = Comision
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        
        
End Select
Exit Function
Error:
Empresa_SOAT = "False"
PMFinTransaccion
MsgBox "Error: " & Err.Description, vbExclamation, App.Title

End Function

'gamc 02/16/2012 CONSULTA MARGLOBAL
Function FLTransmitir_MARGLOBAL_consulta() As Boolean
    
On Error GoTo Error
    
    Dim VLCodigoRespuesta As String
    Dim MatrizCPS(10, 10) As String
    
    FLTransmitir_MARGLOBAL_consulta = False
    
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, App.Title
        Exit Function
    End If
    If Len(Trim$(Ref.Text)) < 15 Then
        MsgBox "Campo código es de 15 dígitos.", vbCritical + vbOKOnly, App.Title
        Exit Function
    End If
    
    Consulta_parametro_OSB  'msilvag MGLOB MARGLOBLAL
    
    'llamar a la consulta
    'PLTipoTransaccion  'msilvag MGLOB MARGLOBLAL
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62580, "Trn", ""
    'msilvag Inicio MGLOB MARGLOBLAL
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "canal", "" 'Canal
    If Me.Proceso.Text <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_grupo", 0, SQLVARCHAR, Trim$(Me.Empresa.Text), "Grupo", ""
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim$(Me.Proceso.Text), "Empresa", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_grupo", 0, SQLVARCHAR, "", "Grupo", ""
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim$(Me.Empresa.Text), "Empresa", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, Trim$(Ref.Text), "Suministro", "" '@i_cod_cliente
    
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_cons_marglobal", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
    'msilvag Fin
        FLTransmitir_MARGLOBAL_consulta = True
       
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        Nombre.Text = FLBuscarItem("@o_nombre")                   'Nombre del cliente
        VLCedula = FLBuscarItem("@o_identificacion")
        VLTotal = FLBuscarItem("@o_saldo")                 'Valor de la deuda
        Me.Pago_Val.Text = VLTotal
        Me.Comision = FLBuscarItem("@o_comision")
    Else
        FLTransmitir_MARGLOBAL_consulta = False
        PMFinTransaccion
        PMChequeaATX VGSqlConn
        Exit Function
    End If
    
    If Me.Comision.Text = 0 Then
      Comision.Enabled = False
    Else
      Comision.Enabled = True
    End If
    
    
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    
    efe.Enabled = True
    Loc.Enabled = True
    CantChq.Enabled = True
    Pago_Val.Enabled = False
    CboTipCta.Enabled = True
    Cta.Enabled = True
    Empresa.Enabled = False
    Servicio.Enabled = False
    Proceso.Enabled = False
    Ref.Enabled = False
    efe.SetFocus
    DoEvents
    
    Exit Function
Error:
    PMChequeaATX VGSqlConn&
    PMFinTransaccion

End Function

'gamc 02/16/2012 PAGO MARGLOBAL
Function FLTransmitir_MARGLOBAL_pago() As Boolean

On Error GoTo Error

    VLServicio = "Recaudacion"
    
    If VGHorarioDif Then
        VLTrn = "3926"
        VLHorario = "D"
    Else
        VLTrn = "3925"
        VLHorario = "N"
    End If
    
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    
    VLIndReverso = False
    
    If VGTipoEjecucion% = CGReverso% Then
        VLIndReverso = True
    End If
    
    'VALIDACIONES
    Dim Fecha As String
    Fecha = Format$(Date, "yyyymmdd")
    
    Dim fr_ced_ruc As String
    fr_ced_ruc = Replace(SGCedula, "_", "")
    
    Consulta_parametro_OSB 'msilvag MGLOB  MARGLOBLAL
    
    PMChequeaATX VGSqlConn

    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62581, "Trn", ""
    'msilvag Inicio MGLOB  MARGLOBLAL
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    End If
    'msilvag Fin
    
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Ventanilla", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Me.Servicio.Text, "Servicio", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    
    If Me.Proceso.Text <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_grupo", 0, SQLVARCHAR, Trim$(Me.Empresa.Text), "Grupo", ""
        PMPasoValoresATX VGSqlConn, "@i_gruponame", 0, SQLVARCHAR, (Sal_Emp), "NomGrupo", ""    ' Para recuperar en reverso
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim$(Me.Proceso.Text), "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (sal_proc), "NomEmpresa", ""    ' Para recuperar en reverso
    Else
        PMPasoValoresATX VGSqlConn, "@i_grupo", 0, SQLVARCHAR, "", "Grupo", ""
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim$(Me.Empresa.Text), "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmpresa", ""    ' Para recuperar en reverso
    End If
    PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, (Ref.Text), "CodSuministro", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, Me.Nombre.Text, "NombreCli", ""
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Pago_Val.Text), "TotalPagado", ""
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (Comision.Text), "valorCom", ""
    
    PMPasoValoresATX VGSqlConn, "@i_efe", 0, SQLMONEY, (efe.Text), "efe", ""
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, (Loc.Text), "Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
    
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, CCur(VLDeb_com), "Com. Debito", "" 'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    
    If CantChq.Text = "" Then
        PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, "0", "Cantidad de cheques", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, (CantChq.Text), "Cantidad de cheques", ""
    End If

    If Me.Cta.ClipText <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (CboTipCta.Text), "CboTipCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
    Else
        If VLTipCta_com = "" Then
            VLTipCta_com = "CTE"
        End If
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (VLTipCta_com), "CboTipCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    End If

    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLVARCHAR, "S", "AplCobis", ""
    'valores de salida
    PMPasoValoresATX VGSqlConn, "@o_cod_pago", 1, SQLVARCHAR, "XXXXXXXXXX", "CodPago", ""

    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    'If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_Etapa", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_marglobal", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLTransmitir_MARGLOBAL_pago = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        SGSecTrn$ = FLBuscarItem("@o_secuencial")
        VlbaseImp = FLBuscarItem("@o_base_imp")
        VLiva = FLBuscarItem("@o_impuesto")
        
        VLFechaCorte = FLBuscarItem("@o_fecha_contable")
        VLFechaCorte = Left(VLFechaCorte, 10)
        VLFechaContable = Format(VLFechaCorte, "mm/dd/yyyy")
        VLHorario = FLBuscarItem("@o_horario")
        
        If VGTipoEjecucion% <> CGReverso% Then
          VLCodPago = FMRetParamATX(VGSqlConn, 1)
        End If
        VLCambio% = False
        VTIndicadorSum = 1
        PMIniciaRegSum
        PMChequeaATX VGSqlConn
        
    Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_MARGLOBAL_pago = False
        SGSecTrn$ = VLDpPSecuencialTrx
        VTIndicadorSum = 0
        PMChequeaATX VGSqlConn
    End If
    
    PMChequeaATX VGSqlConn
'    If FMRetStatusATX(VGSqlConn) <> 0 Then
'        VTIndicadorSum = 0
'        FLTransmitir_MARGLOBAL_pago = False
'    End If
    
    PMFinTransaccion
  '--ref14 se agrega la llamada a factura porque este servicio no está registrando la factura por comisión
  If FLTransmitir_MARGLOBAL_pago = True Then
    'JPM Lectora de Billetes -->
    If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
      'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
      Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
      lectoraBill.Limpiar
    End If
    '<-- JPM Lectora de Billetes
    Call PLFactura
  End If
    
    'Sumadora -->
    If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
        If (VTIndicadorSum = 1 _
        And (Trim$(VGStatusCon) = "A" _
        Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
                FLTransmitir_MARGLOBAL_pago = False
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then                'Por REVERSO
        PMEgresoEfectivo SGUsar, VLTrn, VGSSNCorr&
    End If
    
    Exit Function
    
Error:
    MsgBox "Error al transmitir la transaccion " & Chr(13) & "Error:" & Err.Description, vbCritical
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    FLTransmitir_MARGLOBAL_pago = False
    
End Function


Private Sub CantChq_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        If CantChq.Enabled Then
            CantChq.Clear
        End If
    Case CGTeclaUP%, CGTeclaREPAG%
        SendKeys "+{TAB}"
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    End Select
End Sub

Private Sub cbo_tipo2_KeyPress(KeyAscii As Integer)
If KeyAscii = 13 Then
    If cbo_tipo2.ListIndex = 1 Then
        fragua2.Visible = False
    Else
        If cbo_tipo2.ListIndex = 2 Then
            lblCol(9).Left = 150
            lblCol(9).Caption = "Codigo de Servicio"
            txt_CodServ.Visible = True
            txt_CodServ.Top = 540
            txt_CodServ.Left = 1780
            cbo_tipo2.Visible = False
        End If
    End If
End If
End Sub

Private Sub CboTipCta_Click()
    VLfirma = False
End Sub

Private Sub cboTipo_Click()
 If VGTipoEjecucion% <> CGReverso% Then
        Ref.Text = ""
        Select Case Trim(CboTipo)
            Case "Identificación"
                Ref.MaxLength = 16
            Case "Código estudiante"
                Ref.MaxLength = 10
        End Select
    End If
End Sub

Private Sub CboTipo_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaENTER%
        Ref.SetFocus
    Case CGTeclaUP%, CGTeclaREPAG%
        If Servicio.Enabled = True Then 'dpereirv directv postpago
            Servicio.SetFocus
        End If
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        Ref.SetFocus
    End Select
End Sub

Private Sub CboTipoID_Click() 'ECUTEL 17-mayo-2013
    If VGTipoEjecucion% <> CGReverso% Then
        Ref.Text = ""
        Select Case Trim(cboTipoId)
            Case "C"
                Ref.MaxLength = 10
            Case "R"
                Ref.MaxLength = 13
            Case "P"
                Ref.MaxLength = 20
        End Select
    End If
End Sub

Private Sub CboTipoID_KeyDown(KeyCode As Integer, Shift As Integer)   'ECUTEL 17-mayo-2013
    Select Case KeyCode%
    Case CGTeclaENTER%
        Ref.SetFocus
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        Ref.MaxLength = 13
        Ref.SetFocus
    End Select
End Sub

Private Sub cmbTid_GotFocus()
    '/*JPM 08122204*/
    FPrincipal!pnlHelpLine.Caption = "Escoja Tipo de Identificación"
End Sub

Private Sub cmbTid_KeyPress(KeyAscii As Integer)
    '/*JPM 08122204*/
    If KeyAscii = 13 Then SendKeys "{TAB}"
End Sub

Private Sub Comision_GotFocus()
    If Servicio = 5 And Empresa = 862 Then  'GAMC - 16/05/2008
        SendKeys ("{HOME}+{END}")
    End If
End Sub

Private Sub Comprob_Change()
    VLCambio% = True
End Sub

Private Sub Comprob_GotFocus()
    FPrincipal!pnlHelpLine.Caption = "Ingrese Comprobante de la Retención"
End Sub

Private Sub Comprob_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        Comprob.Text = ""
    Case CGTeclaUP%, CGTeclaREPAG%
        SendKeys "+{TAB}"
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    End Select
End Sub

Private Sub Form_Activate()
    'TPE05/16/2006 Al Activar la forma debe colocar sumadora en Moneda de la forma
    
    If (SGMonedaTran <> VGmoneda% _
    And VGmoneda% <> 0) Then
        SGMonedaTran = VGmoneda%
        PMCargaIniSumadora VGmoneda%
        PMIniciaIngreso 1
    End If

    If Empresa.Enabled Then
        FMPasoControl Empresa
    End If
    If VGTipoEjecucion% <> CGReverso% And CCur(efe.Text) <> 0 And VGTran = "03" Then
        SGUsar = efe.Text
    End If
    VGTran = 0
    
    'LBP Inicio RECA-CC-SGC00025869 30/07/2016
    VGFormaPago = ""
    VGCom_aux = 0
    VGComision_original = 0
    VGCompensacion = 0
    VGPorcentajeComp = "0"
    VGPorcentajeIVA = "0"
    'LBP Fin 30/07/2016'Fin LBP
    
    VLCodConsultora = "" 'msilvag RECA-CC-SGC00032726
    
    End Sub



Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)
    'DoEvents   lfcm 07-dic-2006
    
    If Shift = CGTeclaCTRL% + CGTeclaALT% And KeyCode% = CGTeclaF9% Then
        PMObtenerMonedaForma "51"
        Exit Sub
    End If
    
    'ref:esma17ago2004
    If Trim(Servicio) = "1" And (Trim(Empresa) = "3" Or Trim(Empresa) = "617") Then 'hy-31-ene-2005 agregar empresa 3
        If VGDatosConexionPV.UpLoadwait = True Then
            Exit Sub
        End If
    End If
    
    If Shift = CGTeclaCTRL% And KeyCode% = CGTeclaI% Then
        PMReimpresion
        Exit Sub
    End If
    
    If Shift = CGTeclaCTRL% And KeyCode% = CGTeclaF2% Then
        If VGTipoEjecucion% = CGNormal% Then
            PMSetEjecucionReverso
            If FMSupervisor("51") = True Then
                If FMSecuencialReverso() = False Then
                    PMSetEjecucionNormal
                    Exit Sub
                End If
                PLTransmitir
            End If
            PMSetEjecucionNormal
            Exit Sub
        End If
    End If
    

    Select Case KeyCode%
    Case CGTeclaSUPR%
        If VGTipoEjecucion% = CGReverso% Then
            VGReversoLoger = "S"
            PLTransmitir
            VGReversoLoger = "N"
            Unload Me
        End If

    Case CGTeclaF1%
        'gamc - 19/04/2008 - Soat
        If Trim(Servicio.Text) = "5" And (Trim(Empresa.Text) = "862" Or Trim(Empresa.Text) = "118" Or Trim(Empresa.Text) = "115") Then
            Me.Efe_LostFocus
            If Trim(Empresa.Text) = "862" Then
                If FMCCurATX(Me.Total_Pagar) + FMCCurATX(Comision) <> Me.Pago_Val Then
                    MsgBox "Monto total a pagar no coincide con el desglose", vbExclamation, App.Title
                    Me.Total_Pagar.SetFocus
                    Exit Sub
                End If
            End If
        End If
        If Trim(Servicio.Text) = "2" And Trim(Empresa.Text) = "114" Then
            Me.Efe_LostFocus
        End If
        If Trim(Empresa.Text) = "5479" Then  'CNT MOVIL
            If FMCCurATX(Me.valor) = 0 Then
                Exit Sub
            End If
        End If

        If VGTipoEjecucion% <> CGReverso% Then
            vlOpcion = "T"
            Pago_Val.ReadOnly = True  'hy-31-ene-2005
            SGUsar = efe.ValueReal + VLEfe_com
            PLTransmitir
            Pago_Val.ReadOnly = False            'hy-31-ene-2005
        End If
    Case CGTeclaESC%
        Unload Me '
    Case CGTeclaHOME%
        PMCambiarForma Me
        
    Case CGTeclaF2%
      SGUsar = 0
      SGActivaSum = False
      SGActual = 1
      txt_fecha_emision.Visible = False 'dpereirv directvPostpago
      lblValor(13).Caption = "F. limite:"
      lblValor(13).Visible = False 'dpereirv directvPostpago
      SGEmpresa = "" 'dpereirv directvPostpago
      SGNumCuenta = ""  'msilvag RECA-CC-SGC00027715
       Me.txtFechVen.Text = "" 'smerino belcorp
      lblCol(9).Left = 1080
      lblCol(9).Caption = "Tipo:"
       cbo_tipo2.Visible = True
       txt_CodServ.Text = ""
       txt_CodServ.Visible = False
       fragua2.Visible = False
       VLInstAdq = ""            'CONECEL TVS dpereirv
       Ref.TabIndex = "3"        'ECUTEL 17-mayo-2013
       cboTipoId.TabIndex = "86" 'ECUTEL 17-mayo-2013
       Ref.Top = "525"           'ECUTEL 17-mayo-2013
       lblCobAlum.Top = "570"    'ECUTEL 17-mayo-2013
       lblCobAlum.Left = "1095"  'ECUTEL 17-mayo-2013
       cboTipoId.Enabled = False 'ECUTEL 17-mayo-2013
       cboTipoId.Visible = False 'ECUTEL 17-mayo-2013
       cboTipoId.TabIndex = "86" 'ECUTEL 17-mayo-2013
        txtCedula.Visible = False
        txt_trama.Visible = False
       lblValor(0).Visible = True
       valor.Visible = True
       lblValor(0).Left = "2115"
       lblValor(0).Top = "4440"
       valor.Left = "3060"
       valor.Top = "4380"
       valor.Width = "1395"
        SGEmpresa = "" 'smerino 02112016

        SGNumCuenta = "" 'msilvag  RECA-CC-SGC00027715
        'LBP Inicio RECA-CC-SGC00025869 30/07/2016
        VGFormaPago = ""
        VGCom_aux = 0
        VGComision_original = 0
        VGCompensacion = 0
        VGPorcentajeComp = "0"
        VGPorcentajeIVA = "0"
        'LBP Fin 30/07/2016'Fin LBP

       lblValor(8).Visible = False 'new tvcable
       lblValor(8).Caption = "Contrato:" 'new tvcable
       Empresa.Visible = True 'new tvcable
       Empresa.TabIndex = "1" 'new tvcable
       CboTipo.Visible = False 'new tvcable
       serpac.Enabled = True 'new tvcable
       lblCobAlum.Left = 1095  'DAPV CNT-MOVIL 09NOV12
       lblCol(5).Caption = "Servicio" 'new tvcable
       lblCol(5).Visible = False 'new tvcable

       VLiva = 0 'dpereirv
       VlbaseImp = 0 'dpereirv
       lblCol(6).Visible = False
       'Variables de emelgur en linea
       VLcnelCodAutoriza = ""
       '--> lfcm 06-agosto-2008
       Me.lblCol(3).Visible = True         'lfcm 06-agosto-2008 Asi es como está la forma en vista diseño
       Me.Nombre_oficina.Visible = True    'lfcm 06-agosto-2008 Asi es como está la forma en vista diseño
       Me.Fragua.Top = 1230                'lfcm 06-agosto-2008 Asi es como está la forma en vista diseño
       Me.Fragua.Height = 855              'lfcm 06-agosto-2008 Asi es como está la forma en vista diseño
       serpac.Text = ""                    'lfcm 29-julio-2008
       Me.sal_serpac.Caption = ""          'lfcm 29-julio-2008
       serpac.Visible = False
       Me.sal_serpac.Visible = False
       Me.sal_proc.Top = 230
       Me.Proceso.Top = 230
       Me.lblCol(0).Top = 275
       Me.lblCobAlum.Top = 570
       Me.Ref.Top = 525
       '--< lfcm 06-agosto-2008
    
        'gamc - 19/04/2008 - Deja los campos como al principio
        Call Empresa_SOAT("4", 0)
        
        
        VLModoTrabajo = "" 'cmeg 25Marzo2006
        VLfirma = False
        'Me.Move VGLeft%, VGTop%, 4620, 5350
        ''''Me.Height = 5300
        Me.Height = VLAltoForm '/*JPM 11112004*/
        'ref:esma04ago2004
        If Trim(Servicio) = "1" And ((Empresa) = "3" Or (Empresa) = "617") Then 'hy-31-ene-2005 agregar empresa 3
            FCC51.Enabled = True
            FCC51.Refresh
        End If
        'ref:esma04ago2004
        VLMoneda = VGmoneda%
        VLDescMonCta = ""
        
        Servicio.Text = ""
        Servicio.Enabled = True
        Empresa.Text = ""
        Empresa.Enabled = True
        Proceso.Text = ""
        VLTramaCodigos = ""  'hy-12-oct-2005
        Proceso.TableName = ""
        Proceso.Enabled = True
        Proceso.Visible = True
        sal_proc.Visible = True
        efe.Enabled = False
        CantChq.Enabled = False
        Loc.Enabled = False
        CboTipCta.Enabled = False
        Debito.Enabled = False
        Cta.Enabled = False
        Comprob.Enabled = False 'RCA 11/Sep/2001
        Reten.Enabled = False
        valor.Enabled = False
        Pago_Val.Enabled = False
        cmbTid.Enabled = False    '/*JPM 08122004*/
        txtCedula.Enabled = False '/*JPM 08122004*/
        Minimo.Enabled = False
        Ref.Enabled = True
        Ref.Text = ""
        efe.Text = "0.00"
        CantChq.Text = ""
        Loc.Text = "0.00"
        Debito.Text = "0.00"
        Reten.Text = "0.00"
        valor.Text = "0.00"
        Pago_Val.Text = "0.00"
        Minimo.Text = "0.00"
        Cta.Text = ""
        Comprob.Text = "" 'RCA 11/Sep/2001
        Nombre.Text = ""
        Fecha.Text = ""
        Nombre_oficina.Text = ""
        Forma_Pago.Caption = ""
        bitmap.Visible = False
        ImgStrech.Visible = False  'JPM Megadatos
        Fragua.Caption = ""
        Minimo.Visible = False
'        Valor.Visible = False
'        lblValor(0).Visible = False
        lblValor(2).Visible = False
        lblValor(3).Visible = False
        lblValor(4).Visible = False
        lblValor(14).Visible = False:  txtfactura.Width = 3500: Pago_Val.Tag = 0   'JPM 11/02/2016
        lblValor(5).Visible = False
        txtContrato.Visible = False
        ' TC 07172009 INICIO
        lblValor(9).Visible = False
        ValMinimo.Visible = False
        lblValor(12).Visible = False
        ValMaximo.Visible = False
        Ref.MaxLength = 15
        ValMinimo.Text = ""
        ValMaximo.Text = ""
        Me.Pago_Val.Top = 4005
        lblValor(2).Caption = "V.Minimo:"
        SGValida = ""
        ' TC 07172009 FIN
        txtContrato.Text = "" 'hy-31-ene-2005
        txtfactura.Visible = False
        txtfactura.Text = "" 'FMV 11052004
        lblValor(10).Visible = False 'ANBE 061907
        txtValFec.Visible = False 'ANBE 061907
        txtValFec.Text = "0.00"  'ANBE 061907
        lblValor(11).Visible = False 'ANBE 061907
        txtValDeu.Visible = False 'ANBE 061907
        txtValDeu.Text = "0.00"  'ANBE 061907
        Fecha.Visible = False
        lblCol(0).Visible = True
        lblCol(0).Caption = "Tipo:"
        lblCobAlum.Caption = "Codigo:"
        If VLMTop Then PLCambiaForma 1 'ANBE
        'ref:esma04ago2004
        mensaje.Text = ""
        VLRetencion = ""
        VLBaseImponible = ""
        VLEmpDir = ""
        VLEmpruc = ""
        VLEmpaut = ""
        VLEmpval = ""
        VLEmpRes = ""
        VLCodCaj = ""
        VLNombreCliente = ""
        VLValfactura = ""
        VLFecEmi = ""
        VLcategoria = ""
        VLFactImpagas = 0
        VLCedFactura = ""
        VLSubtotal = 0
        VLCicloFact = ""
        VLFecVen = ""
        VLNumRubros = 0
        VLDetRubros1 = ""
        VLDetRubros2 = ""
        VLDetRubros3 = ""
        VLrubro1 = ""
        VLrubro2 = ""
        VLrubro3 = ""
        VLrubro5 = ""
        VLrubro6 = ""
        VLrubro7 = ""
        VLrubro27 = ""
        VLrubro9992 = ""
        VLrubro9993 = ""
        VLrubro9995 = ""
        VLrubro9991 = ""
        VLrubro501 = ""
        VLrubro500 = ""
        'ref:esma04ago2004
        NomCta.Text = ""
        Comision.Text = ""    '/*JPM 11112004*/
        VLValidezAndinatel = ""   'lfcm 01-noviembre-2007
        VLFacturaAndinatel = ""   'lfcm 01-noviembre-2007
        VLValRubro9994 = ""        'lfcm 14-noviembre-2007
        VLCtaCobroTope = ""        'lfcm 18-julio-2008
        
        'Limpio las variables de Comision
        VLEfe_com = 0
        VLChq_com = 0
        VLTotal = 0
        VLTotCom = 0
        
        'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
        VLTipCta_com = ""
        VLCta_com = ""
        VLDeb_com = 0
        'msilvag Fin
        
        VLFechFac = "" 'ANBE 060607
        VLFechaVenc = "" 'ANBE 060607
        VLVMes = ""  'ANBE 060607
        VLVAcum = ""  'ANBE 060607
        VLVTotal = ""  'ANBE 060607
        
        Me.txt_fecha_emision.Text = "" 'lfcm 11-dic-2006
        
        Total.Text = ""       '/*JPM 11112004*/
        cmbTid.ListIndex = 0  '/*JPM 08122204*/
        txtCedula.Text = ""   '/*JPM 08122204*/
        VLIdEsValida = False  '/*JPM 08122004*/
        
        VLBL = ""                           'gamc 02/17/2012
        VLTipoDocumento = ""                'gamc 02/17/2012
        VLBaseImponible = ""                'gamc 02/17/2012
        VLCedula = ""                       'gamc 02/17/2012
        VLi_pfactura = ""                   'gamc 02/17/2012
        lblCol(0).Visible = True            'gamc 02/17/2012
        lblCol(3).Visible = True            'gamc 02/17/2012
        lblCol(4).Visible = True            'gamc 02/17/2012
'        lblCol(5).Visible = True            'gamc 02/17/2012
        Forma_Pago.Visible = True           'gamc 02/17/2012
        Nombre_oficina.Visible = True       'gamc 02/17/2012
        Minimo.Visible = True               'gamc 02/17/2012
        lblValor(2).Visible = True          'gamc 02/17/2012
        Proceso.Visible = True              'gamc 02/17/2012
        sal_serpac.Visible = True           'gamc 02/17/2012
        sal_proc.Visible = True             'gamc 02/17/2012
        Ref.MaxLength = 15

        'msilvag Inicio Marzo-04-2016
        VLDeudaActual = ""
        VTotal2 = 0
        VLIdentificadorDeduda = ""
        VLTipoServicio = ""
        'msilvag Fin
        
        VLCodConsultora = "" 'msilvag RECA-CC-SGC00032726
        
        If Servicio.Enabled Then
            Servicio.SetFocus
        End If
        VGAutoriza = "N"
        VGSuperAutoriza = "" 'GAMC - 19/05/2008
        PMLimpiarTransaccion "51"
        
        '------> Sumadora
        SGUsar = 0
        VGUsar15 = 0
        If Shift = 0 And VGTipoConsAutom% = 0 And VGTipoEjecucion% <> CGReverso% Then  'TPEAdiciono Validacion Por Consulta Automatica y Reverso
            SGActual = 1
            FSumIng.Hide
             FSumIng.Form_KeyDown CGTeclaF2%, 0
            Unload FSumIng
            Servicio.SetFocus
        ElseIf VGTipoEjecucion% = CGReverso% Then    'TPE Para el Caso Reversos
            SGPrimeraVezRev = 0
            SGAcumRev = 0
            FSumRev.Hide
            FSumRev.Form_KeyDown CGTeclaF2%, 0
            Unload FSumRev
        End If
        SGActivaSum = False
        '<------
        lectoraBill.Limpiar   'JPM lectora de billetes
    Case CGTeclaF3%
        If efe.Enabled = False Then
            Exit Sub
        End If
        'Sumadora ------>
        If VGTipoEjecucion% <> CGReverso% Then
            If (VGTipoConsAutom% = 1 And VGStatusCon = "A") Or VGTipoConsAutom% = 0 Then
                FSumIng.abrirAltaDenominacion = True
                PMIngresoEfectivo
                SGActual = 0
                efe.Text = SGUsar
                If efe.Enabled Then

                    efe.SetFocus
                End If
            End If
        End If
        '<------
    
    Case CGTeclaF5%
        'lfcm Tecla F5 no válida para consulta de EMELMANABI sobre el Front-End    06-diciembre-2006
        If Servicio.Text = "5" And Empresa = "5994" Then 'CONECEL TVS dpereirv
            Exit Sub
        End If
        If Servicio.Text = "5" And Empresa = "8521" Then 'ECUTEL 17-mayo-2013
            Exit Sub
        End If
        
      'belcorp smerino
         If Servicio.Text = "5" And Empresa = "7256" Then 'smerino belcorp
            Exit Sub
        End If
        
        
        If Servicio = 3 And Empresa = 1719 Then
            Exit Sub
        End If
        '-->hy-categ
        If Servicio = 3 And Empresa = 1 Then
            Exit Sub
        End If
        '<--hy-categ
        '-->hy-19-enero-2007
        If Servicio.Text = "6" And VLTvCableOnline = "S" Then
            Exit Sub
        End If
        '<--hy-19-enero-2007
        '>-- TC 12102009
        If Servicio.Text = "5" And Empresa = "118" Then
            Exit Sub
        End If
        '>-- TC 12102009
        '>-- TC 20072009
        If Servicio.Text = "5" And Empresa = "115" Then
            Exit Sub
        End If
        '>-- TC 20072009
        '>-- TC 17022010
        If Servicio.Text = "2" And Empresa = "114" Then
            Exit Sub
        End If
        '>-- TC 17022010
        If Servicio.Text = "3" And VGEmpGrupo = "S" Then 'DAPV/03262012/CNEL
            Exit Sub
        End If
        
        If Servicio.Text = "1" And VGEmpGrupo = "S" Then 'DAPV CNT-MOVIL 09NOV12
            '<Ref 20
            If VLVerde <> "S" Then
                Exit Sub
            Else
                If Servicio.Text = "1" And Proceso.Text <> "3" Then
                    Call Ref_KeyDown(CGTeclaF5%, 0)
                Else
                    Exit Sub
                End If
            End If
            'Ref 20>
        End If
        
        'msilvag Inicio ETAPA
        If Servicio.Text = "1" And Me.Empresa.Text = "1707" Then
            '<Ref 20
            If VLVerde <> "S" Then
                Exit Sub
            Else
                Call Ref_KeyDown(CGTeclaF5%, 0)
            End If
            'Ref 20>
        End If
        
        If Servicio.Text = "2" And Me.Empresa.Text = "1708" Then
            Exit Sub
        End If
        
        If Servicio.Text = "7" And Me.Empresa.Text = "6951" Then
            Exit Sub
        End If
        
        If Servicio.Text = "8" And Me.Empresa.Text = "6952" Then
            Exit Sub
        End If
        'msilvag Fin ETAPA
        '<Ref11 Empresas MEER
        If Servicio.Text = "3" And (Me.Empresa.Text = "90" Or VLEmpresaMeer = "S") Then
            Exit Sub
        End If
        'Fin Ref11>
                
        'ariofria Interagua Ini
        If Servicio.Text = "2" And Me.Empresa.Text = "361" Then
            Exit Sub
        End If
        'ariofria Interagua fin
        
        'msilvag Inicio RECM-311 RECMPS-371 Interagua TRB
        If Servicio.Text = "2" And Me.Empresa.Text = "8269" Then
            Exit Sub
        End If
        'msilvag Fin
   
        'msilvag Inicio MGLOB MARGLOBLAL
        If Servicio.Text = "9" Then
            Exit Sub
        End If
        'msilvag fin
        
        'dolayas Amagua Ini AMAGUA-AP-SGC00028642
        If Servicio.Text = "2" And Me.Empresa.Text = "6" Then
          'Verificamos si está ONLINE o OFFLINE
          FConsultarAmaguaBase (Empresa.Text)
          If VLEmpAmaBase = "S" Then
            Exit Sub
          End If
        End If
        'dolayas Amagua fin

        '-->lfcm 02-abril-2009
        If Servicio.Text = "3" And (Empresa.Text = "1127" Or Empresa.Text = "144") Then
           'Obtener estado del parametro de contingencia en la consulta al presionar F5
           Dim VLarregloParametrosE(30) As String, VLnemonico As String
            Select Case Trim$(Empresa.Text)             'JPM 11/02/2016 -->
              Case "1127":  VLnemonico = "CEMELG"
              Case "144":   VLnemonico = "CREGCS"
            End Select                                  '<-- JPM 11/02/2016
           PMChequea VGSqlConn&
           PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
           PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
           PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, VLnemonico   'JPM 11/02/2016: antes "CEMELG"
           PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
           If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
              VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametrosE())
              VLCEMELG = LTrim(RTrim(Trim(VLarregloParametrosE(4))))
           Else
              VLCEMELG = "S"  'Si no existe el parámetro entonces se considera activa la contingencia
           End If
           PMChequea VGSqlConn&
           If VLCEMELG = "N" Then      'N=En linea  S=En Contingencia
              Exit Sub
           End If
        End If
        '--<lfcm 02-abril-2009
        If Not Proceso.Enabled And Not Ref.Enabled Then Exit Sub   'ANBE 112206
        
        If VGTipoEjecucion% <> CGReverso% Then
            If Trim(Empresa) <> "" And (Trim(Proceso) <> "" Or Proceso.Enabled = False) Then
               '/*JPM 23112004*/
               '-- consultar valor de comision por el pago de servicio
               '-- previo a la consulta de datos del pago, solo para telefonía
               If Trim(Servicio.Text) = "1" And Trim$(Empresa.Text) = "617" Then 'hy-31-ene-2005 solo para 617
                 vlOpcion = "V"
                 PLTransmitir
                 VLCambio% = True
               End If
               'GAMC - 18/04/2008 - INI
                'SOAT
                If Trim(Servicio) = "5" And Trim(Empresa) = "862" Then
                    'Efe.SetFocus
                    Exit Sub
                End If
                'GAMC - 18/04/2008 - FIN
               '-- fin consulta de valor comision /*JPM 23112004*/
                vlOpcion = "C"
                PLTransmitir
            End If
        End If
          
        '<Ref 20
        If VLVerde = "S" And Servicio.Text = "2" And VGTipoEjecucion% <> CGReverso% Then
            CargaInfoadi2CV
        End If
        'Ref 20>
    
        '******** Consulta de deudas por F6 ************* 'CRR 08/08/2005
    Case CGTeclaF6%
        If VGTipoEjecucion% <> CGReverso% And Servicio.Text = "4" And (FMCCurATX((Total)) <> 0) And Total.Text <> "" Then
            If Trim(Empresa) <> "" And (Trim(Proceso) <> "" Or Proceso.Enabled = False) Then
               frm_deudas.grdDetalle.Cols = grdDetalle.Cols
               frm_deudas.grdDetalle.Rows = grdDetalle.Rows
               frm_deudas.grdDetalle.FixedRows = 1
               For i = 0 To grdDetalle.Rows - 1
                    For j = 0 To grdDetalle.Cols - 1
                        grdDetalle.Row = i
                        grdDetalle.Col = j
                        frm_deudas.grdDetalle.Row = i
                        frm_deudas.grdDetalle.Col = j
                        frm_deudas.grdDetalle.Text = grdDetalle.Text
                    Next
               Next
               frm_deudas.VLTrama = VLTramaCodigos
               frm_deudas.Show vbModal
            End If
        End If
        '*********************************************** 'CRR 08/08/2005
    Case CGTeclaF9%
        If VGTipoEjecucion% = CGNormal% Then
            If FMSupervisor("51") = True Then
                VGAutoriza = "S"
            End If
        End If
        If Servicio.Enabled Then
            Servicio.SetFocus
        End If
    End Select

End Sub

Private Sub Form_Load()
    'CGLongTramaBill = CadenaLarga   'JPM lectora de billetes
    CGLongTramaBill = CadenaCorta   'JPM lectora de billetes
    lectoraBill.Limpiar             'JPM lectora de billetes
    'Sumadora  ----->
    SGUsar = 0
    vl_trx = "" 'ref12
    SGActivaSum = False
    SGActual = 1
    '<-----
    'Inicio Moneda
    VLMoneda = VGmoneda%
    
    Call Empresa_SOAT("4", 0) 'GAMC - 29/05/2008
    
    '/*JPM 16122004: recupera valor Id para evaluar y asignar el valor corecto en el combo correpondiente*/
    lblTid.Visible = False
    '/*JPM 16122004: <--- fin valor Id para evaluar y asignar el valor corecto en el combo correpondiente*/
       
    VLfirma = False
    VLCambio% = False
    '----------------------------------------------------------------
    '/*Petición de reverso campo cedula: Ricardo Egas 20122004:
    '/*eliminar este bloque para habilitar el uso de cedula
    '/*restablecer VLAltoForm = 6700 (comentario al final del bloque
    Label1(2).Visible = False
    cmbTid.Visible = False
    txtCedula.Visible = False
    VLAltoForm = Me.Height
    '/*<--- fin peticion de reverso*/
    '----------------------------------------------------------------
    'VLAltoForm = 6700
    VTotal2 = 0 'msilvag ETAPA Marzo-03-2016
    
    Me.Move VGLeft%, VGTop%, 4620, VLAltoForm
    CboTipCta.AddItem "CTE"
    CboTipCta.AddItem "AHO"
    CboTipCta.ListIndex = 0
    efe.DecimalPlaces = FMObtenerDecimales(VGmoneda%)
    Loc.DecimalPlaces = FMObtenerDecimales(VGmoneda%)
    Debito.DecimalPlaces = FMObtenerDecimales(VGmoneda%)
    Reten.DecimalPlaces = FMObtenerDecimales(VGmoneda%)
    valor.DecimalPlaces = FMObtenerDecimales(VGmoneda%)
    Pago_Val.DecimalPlaces = FMObtenerDecimales(VGmoneda%)
    Minimo.DecimalPlaces = FMObtenerDecimales(VGmoneda%)
    valor.Enabled = False
    Pago_Val.Enabled = False
    Minimo.Enabled = False
    efe.Enabled = False
    CantChq.Enabled = False
    'CantChq.Enabled = False  'ref12 esta repetido
    Loc.Enabled = False
    Debito.Enabled = False
    Comprob.Enabled = False 'RCA 11/Sep/2001
    Reten.Enabled = False
    Cta.Enabled = False
    CboTipCta.Enabled = False
    Proceso.Enabled = False
    Comision.Enabled = False  '/*JPM 08122004*/
    txtFechVen.Visible = False   'smerino belcorp
    lblValor(13).Visible = False 'smerino belcorp
    VLEmpresaMeer = "N" 'Ref11 Indicador que es empresa MEER
    'Variables de la comision
    VLEfe_com = 0
    VLChq_com = 0
    VLTotal = 0
    VLTotCom = 0
    
    'LBP Inicio RECA-CC-SGC00025869 30/07/2016
    VGFormaPago = ""
    VGCom_aux = 0
    VGComision_original = 0
    VGCompensacion = 0
    VGPorcentajeComp = "0"
    VGPorcentajeIVA = "0"
    'LBP Fin 30/07/2016'Fin LBP


    '<Ref 20
    VLVerde = ""
    VLcodCT = ""
    VLcodTransaccion = ""
    UUID = ""
    VLcvfactura = ""
    VLtpdnidep = ""
    VLdnidep = ""
    VLnomdep = ""
    VLMail = ""
    VLTpTrans = ""
    VLfnCV = ""
    VlEjecInfoCVv = False
    Erase CVcomprobantes
    'Ref 20>
    
    '/*JPM 08122004 ---> recepción de cédula de persona que efectúa el pago del servicio*/
    cmbTid.Enabled = False
    cmbTid.Clear
    cmbTid.AddItem "Cédula"
    cmbTid.AddItem "Ruc"
    cmbTid.AddItem "Pasaporte"
    cmbTid.ListIndex = 0
    VLTramaCodigos = ""  'hy-12-oct-2005
    txtCedula.Enabled = False
    VLIdEsValida = False
    '/*JPM 08122004 <--- fin recepción de datos identificación*/
    
    
    
    VLCodConsultora = "" 'msilvag RECA-CC-SGC00032726
    
    VLMensajeVerificado = ""     'ref:esma04ago2004
    Set mensaje.AsociatedLabel = lblmensaje
        
    If VGTipoLogon% = CGNormal% Then
        Empresa.Connection = VGMap
        Set Empresa.AsociatedLabel = Sal_Emp
        Empresa.Enabled = True
        
        '-->Catalogo de Servicios de Cobros para Pacifictel lfcm 29-julio-2008
        serpac.Connection = VGMap
        Set serpac.AsociatedLabel = Me.sal_serpac
        serpac.Enabled = True
        '--<Catalogo de Servicios de Cobros para Pacifictel lfcm 29-julio-2008
        
        Proceso.Connection = VGMap
        Set Proceso.AsociatedLabel = sal_proc
        Proceso.Enabled = True
        Servicio.Connection = VGMap
        Set Servicio.AsociatedLabel = lblservicio
        Servicio.Enabled = True
    End If
    
    'Se descomento por que si entra reverso para esta transaccion
    If VGTipoEjecucion% = CGReverso% Or VGTipoEjecucion% = CGAutoriza% Then
        If VGTipoEjecucion% = CGReverso% Then
        
        PMSetValorReverso Empresa, "@i_empresa"
        PMSetValorReverso Servicio, "@i_servicio"
        PMSetValorReverso lblservicio, "@i_servname"
        
        Select Case Trim(Servicio.Text)
                        'msilvag Etapa Inicio
            Case 8
                PMSetValorReverso efe, "@i_efectivo"
                PMSetValorReverso Loc, "@i_cheque"
                If Trim(Empresa.Text) <> "1089" Then           'JPM Megadatos -->
                  PMSetValorReverso CantChq, "@i_cant_chq"
                End If                                        'JPM Megadatos
                VLDescripServicio = "Internet"
            Case 7
                PMSetValorReverso efe, "@i_efectivo"
                PMSetValorReverso Loc, "@i_cheque"
                If Trim(Empresa.Text) = "5488" Or Trim(Empresa.Text) = "8090" Then
                    PMSetValorReverso CantChq, "@i_cant_cheques"
                Else
                    PMSetValorReverso CantChq, "@i_cant_chq"
                End If
                VLDescripServicio = "Television Pagada"
            'msilvag Etapa Fin
            Case 1
                'PMSetValorReverso Efe, "@i_valor"
            If Empresa.Text <> "5482" And vl_servidor_BUS = "PSSRV1" Then 'CNT_MOVIL
                PMSetValorReverso Ref, "@i_telefono"
                If Proceso.Text = "99" Then 'wmh
                    Ref.Text = val(Ref.Text)
                End If
                If Empresa <> 1707 Then  'ANBE
                  PMSetValorReverso Proceso, "@i_area"
                  PMSetValorReverso efe, "@i_valor"
                  PMSetValorReverso Pago_Val, "@i_val" '
                End If
                PMSetValorReverso CboTipCta, "@i_producto"
                PMSetValorReverso txtContrato, "@i_contrato_telefono"
                PMSetValorReverso txtfactura, "@i_num_factura"
                If Empresa = 3 Then 'ANBE
                        PMSetValorReverso txtfactura, "@i_grupo"

                        If Trim(txtfactura) = "S" Then
                            VGEmpGrupo = "S"
                            PLCambiaForma 4
                            PMSetValorReverso Empresa, "@i_cod_grupo"
                            PMSetValorReverso Proceso, "@i_empresa"
                            PMSetValorReverso serpac, "@i_area"
                            PMSetValorReverso sal_serpac, "@i_descproc"
                            PMSetValorReverso sal_proc, "@i_poperacion2"
                            PMSetValorReverso txtfactura, "@i_poperacion"

                            VLOperacion = Trim(txtfactura)
                            If Not VLHorarioDif Then
                                VLTrn = "3194"
                            Else
                                VLTrn = "3203"
                            End If
                            VLPABOP = "S"
                        Else
                          VLPABOP = "S"
                          VGEmpGrupo = "N"
                          PLCambiaForma 3                                      'lfcm 04-agosto-2008
                          PMSetValorReverso Proceso, "@i_area"
                        End If ' If Trim(txtFactura) = "S" Then
                  PMSetValorReverso txtfactura, "@i_fechavenc"
                  VLFechaVenc = Trim(txtfactura)
                  PMSetValorReverso txtfactura, "@i_vmes"
                  PMSetValorReverso valor, "@i_valor_total"       'lfcm 18-agosto-2008

                  VLVMes = Trim(txtfactura)
                  PMSetValorReverso txtfactura, "@i_vacum"

                  VLVAcum = Trim(txtfactura)
                  PMSetValorReverso txtfactura, "@i_vtotal"


                  VLVTotal = Trim(txtfactura)
                  txtfactura = ""
                  PMSetValorReverso Comision, "@i_che_com"
                  VLChq_com = Comision.Text
                  PMSetValorReverso Comision, "@i_comision"
                  
                    '-->lfcm 14-agosto-2005
                    'Para el caso de servicios de pacifictel consultar el parametro de contingencia
                    ReDim VLarreglo(30) As String
                    If (Trim(Servicio.Text) = "1" And Trim(Empresa) = "3") Or (Trim(Servicio.Text) = "1" And Trim(Empresa) = "5479") Then
                        Me.lblValor(2).Visible = False
                        Minimo.Visible = False
                        PMChequea VGSqlConn&
                        PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
                        PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
                        PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CTGP"
                        PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
                        If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
                            VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
                            VLCTGP = LTrim(RTrim(Trim(VLarreglo(4))))
                        Else
                            VLCTGP = ""
                        End If
                        PMChequea VGSqlConn&
                    End If
                    '<--lfcm 14-agosto-2005
    
                  '-->Estos dos parametros solo se deben reversar en Linea
                  'If VLCTGP = "N" Then
                    If Trim(Servicio.Text) = 1 And Trim(VGEmpGrupo) = "N" Then  'DAPV CNT-MOVIL
                     PMSetValorReverso Me.serpac, "@i_poperacion"         'lfcm 04-agosto-2008
                     PMSetValorReverso Me.sal_serpac, "@i_poperacion2"    'lfcm 04-agosto-2008
                    End If
                  'End If
                  '--<Estos dos parametros solo se deben reversar en Linea
                  
                  VLEfe_com = Comision.Text
                  'Comision.Text = "0.00" 'gamc - 23MAR2011
                End If
             End If  'If Empresa.Text <> "5482" Then 'CNT_MOVIL
            Case 3
            'ref12 inicio, se valida si es una empresa MEER llamar a PL_Reveso_MEER, caso contrario mantener lógica existente
              Call FEsEmpresaMEER(Trim(Empresa.Text))
              If VLEmpresaMeer = "S" Then
                  Call PL_Reveso_MEER
              Else 'ref12  fin
              If Trim(Empresa.Text) <> "144" Then      'JPM CentroSur
                PMSetValorReverso Proceso, "@i_proceso"
                
                If Trim(Proceso) = 4994 Then 'DAPV/03132012/CNEL
                    PMSetValorReverso Empresa, "@i_grupo"
                    PMSetValorReverso Proceso, "@i_empresa"
                    VGEmpGrupo = "S"
                End If
                If VGEmpGrupo <> "S" Then
                '-->hy-categ
                    PMSetValorReverso Proceso, "@i_opcion"
                    If Trim$(Proceso.Text) = "P" Then
                        VLOnLineCateg = "S"
                    Else
                    VLOnLineCateg = "N"
                    End If
                End If
              End If                                'JPM Centro Sur
   
                'If VLOnLineCateg = "S" Then    'lfcm 09-abril-2009
                If VLOnLineCateg = "S" And Empresa = 1 Then     'lfcm 09-abril-2009
                    PMSetValorReverso Ref, "@i_codigo"
                    PMSetValorReverso Proceso, "@i_digver"
                    'Ref.Text = Trim$(Ref.Text) + Trim$(Proceso.Text)
                    PMSetValorReverso Proceso, "@i_pcedula"
                    VLCedula = Trim$(Proceso.Text)
                    PMSetValorReverso Proceso, "@i_pseguridad"
                    VLi_pseguridad = Trim$(Proceso.Text)
                    PMSetValorReverso Proceso, "@i_pfechaemi"
                    VLi_pfechaemi = Trim$(Proceso.Text)
                    PMSetValorReverso Proceso, "@i_pfechaven"
                    VLi_pfechaven = Trim$(Proceso.Text)
                    PMSetValorReverso Proceso, "@i_pfactura"
                    VLi_pfactura = Trim$(Proceso.Text)
                    PMSetValorReverso Proceso, "@o_pautorizacion"
                    VLo_pautorizacion = Trim$(Proceso.Text)
                    PMSetValorReverso Proceso, "@i_phoralocal"
                    VLi_phoralocal = Trim$(Proceso.Text)
                    PMSetValorReverso Proceso, "@i_pfechalocal"
                    VLi_pfechalocal = Trim$(Proceso.Text)
                    PMSetValorReverso Proceso, "@i_pnumero"
                    VLi_pnumero = Trim$(Proceso.Text)
                    Proceso.Text = ""
                ElseIf (Empresa = 1127 Or Empresa = 144) Then     'JPM 11/02/20126: 144; lfcm 09-abril-2009
                    Dim VLarregloParametro(30) As String
                    PMChequea VGSqlConn&
                    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
                    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
                    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CEMELG"
                    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
                    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
                       VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametro())
                       VLCEMELG = LTrim(RTrim(Trim(VLarregloParametro(4))))
                    Else
                       VLCEMELG = "S"  'Si no existe el parámetro entonces se considera activa la contingencia
                    End If
                    PMChequea VGSqlConn&
                    If VLCEMELG = "N" Then   'Cuando esta en contingencia
                     If Empresa.Text <> "144" Then      'JPM 11/02/2016 Centro Sur
                       PMSetValorReverso Ref, "@i_pcuenta"
                       'PMSetValorReverso Proceso, "@i_digver"
                       'Ref.Text = Trim$(Ref.Text) + Trim$(Proceso.Text)
                        'PMSetValorReverso Proceso, "@i_pcedula"
                        'VLCedula = Trim$(Proceso.Text)
                        PMSetValorReverso Proceso, "@o_codautorizador"
                        VLrevCodSeguridad = Trim$(Proceso.Text)
                        PMSetValorReverso Proceso, "@i_phoratrxlocal"
                        VLrevHoraTrxLocal = Trim$(Proceso.Text)
                        PMSetValorReverso Proceso, "@i_pfechatrxlocal"
                        VLrevFechaTrxLocal = Trim$(Proceso.Text)
                        PMSetValorReverso Proceso, "@i_pterminal"
                        VLrevTerminal = Trim$(Proceso.Text)
                        PMSetValorReverso Pago_Val, "@i_valpend"
                        PMSetValorReverso Total, "@i_valpend"
                        PMSetValorReverso valor, "@i_valpend"
                        
                        PMSetValorReverso Proceso, "@i_pifi"
                        VLCIFIEM = Trim$(Proceso.Text)
                        
                        PMSetValorReverso Proceso, "@i_proceso"
                        PMSetValorReverso CboTipCta, "@i_tipocta"
                        PMSetValorReverso Cta, "@i_cuenta"
                        
                        
'                        PMSetValorReverso Proceso, "@i_pfechaemi"
'                        VLi_pfechaemi = Trim$(Proceso.Text)
'                        PMSetValorReverso Proceso, "@i_pfechaven"
'                        VLi_pfechaven = Trim$(Proceso.Text)
'                        PMSetValorReverso Proceso, "@i_pfactura"
'                        VLi_pfactura = Trim$(Proceso.Text)
'                        PMSetValorReverso Proceso, "@o_pautorizacion"
'                        VLo_pautorizacion = Trim$(Proceso.Text)
'                        PMSetValorReverso Proceso, "@i_phoralocal"
'                        VLi_phoralocal = Trim$(Proceso.Text)
'                        PMSetValorReverso Proceso, "@i_pfechalocal"
'                        VLi_pfechalocal = Trim$(Proceso.Text)
'                        PMSetValorReverso Proceso, "@i_pnumero"
'                        VLi_pnumero = Trim$(Proceso.Text)
'                        Proceso.Text = ""
                        
                    Else 'Cuando no está en contingencia
                     If Trim(Empresa.Text) <> "144" Then                      'JPM Centro Sur
                       PMSetValorReverso Ref, "@i_pcodigo"
                      Else                                                    'JPM Centro Sur -->
                       PMSetValorReverso Ref, "@i_pcodigo"
                       PMSetValorReverso efe, "@i_val"
                       PMSetValorReverso Comision, "@i_efe_com"
                       VLEfe_com = Comision.ValueReal
                       PMSetValorReverso Comision, "@i_chq_com"
                       VLChq_com = Comision.ValueReal
                       VLTotCom = VLEfe_com + VLChq_com
                       Comision = VLTotCom
                       PMSetValorReverso Pago_Val, "@i_total"
                       Pago_Val.Tag = CCur(Pago_Val.Text)
                       PMSetValorReverso valor, "@i_subtotal"
                       PMSetValorReverso Total, "@i_totapag"
                       
                       PMSetValorReverso Loc, "@i_valch"
                       PMSetValorReverso Debito, "@i_debito"
                       PMSetValorReverso Reten, "@i_reten"
                       PMSetValorReverso CboTipCta, "@i_tipocta"
                       PMSetValorReverso Cta, "@i_cuenta"
                       PMSetValorReverso CantChq, "@i_cant_chq"
                       PMSetValorReverso Nombre, "@i_pnombres"
                       'PMSetValorReverso txthorario, "@o_horario"
                       VLDpPHorario = txthorario.Text
                       txthorario.Text = ""
                       PMSetValorReverso txthorario, "@i_phoralocal"
                       VLic_phoralocal = txthorario.Text
                       txthorario.Text = ""
                       If Trim(Empresa.Text) <> "144" Then
                         PMSetValorReverso txthorario, "@i_pfechalocal"
                       End If
                       VLic_pfechalocal = txthorario.Text
                       txthorario.Text = ""
                       If Trim(Empresa.Text) <> "144" Then
                         PMSetValorReverso txthorario, "@i_pseguridad"
                       End If
                       VLCNLSEG = txthorario.Text
                       txthorario.Text = ""
                       PMSetValorReverso txthorario, "@i_pcedula"
                       VLCedula = txthorario.Text
                       cedula = VLCedula
                       txthorario.Text = ""
                       'PMSetValorReverso txthorario, "@o_secmt"
                       VLSecMt = txthorario.Text
                       VLi_pfechaemi = ""
                       VLi_pfechaven = ""
                       txthorario.Text = ""
                       If Trim(Empresa.Text) <> "144" Then
                         PMSetValorReverso txthorario, "@i_pfactura"
                       End If
                       VLi_pfactura = txthorario.Text
                       VLCodReg = ""
                       txthorario.Text = ""
                       VLo_pautorizacion = txthorario.Text
                       txthorario.Text = ""
                       If Trim(Empresa.Text) <> "144" Then
                         PMSetValorReverso txthorario, "@i_pnumero"
                       End If
                       VLo_pnumero = txthorario.Text
                       txthorario.Text = ""                                 '<-- JPM Centro Sur
                      End If
                     End If
                    End If
                
                
                Else
                '<--hy-categ
                    PMSetValorReverso Ref, "@i_codigo"
                End If
                PMSetValorReverso efe, "@i_val"
                PMSetValorReverso CboTipCta, "@i_tipocta"
                'PMSetValorReverso Pago_Val, "@i_total"
                'lfcm
                If Empresa <> 1719 And Empresa <> 144 Then      'JPM Centro Sur
                    If VGEmpGrupo <> "S" Then 'DAPV/03122012/CNEL
                        PMSetValorReverso Pago_Val, "@i_total"
                    End If
                End If
            End If 'ref12
            Case Else
              If Trim(Servicio.Text) = "5" And Trim(Empresa.Text) = "862" Then 'GAMC - 18/04/2008
                Call Empresa_SOAT("1", 1)
              Else
                'If Not (Servicio = 2 And Empresa = 1708) And Not (Servicio = 5 And Empresa = 451) Then 'ANBE
                 If Not (Servicio = 2 And Empresa = 1708) And Not (Me.Servicio = 9) And Not (Servicio = 5 And Empresa = 7256) And Not (Servicio = 5 And Empresa = 451) And Not (Servicio = 6) And Not (Servicio = 5 And (Empresa = 8521 Or Empresa = 5994 Or Empresa = 8090 Or Empresa = 6087 Or Empresa = 1125)) Then 'msilvag MGLOB MARGLOBLAL 'UTPL 'RecaudacionEducacion 'Ref17
                  If Empresa <> 8521 Then
                        PMSetValorReverso Proceso, "@i_proceso"
                        PMSetValorReverso Ref, "@i_codigo"
                        PMSetValorReverso efe, "@i_efe"
                        PMSetValorReverso CboTipCta, "@i_tipocta"
                        PMSetValorReverso Pago_Val, "@i_val"
                    End If
                 End If
               End If
            End Select
            If VLEmpresaMeer = "S" Then Exit Sub 'ref12, se realiza estp porque ya se setearon las variables de MEER en PL_Reveso_MEER
            '-->hy-15-feb-2005
            If Trim(Servicio.Text) = "4" Then
                PMSetValorReverso Nota_Venta, "@o_nota_venta"
            End If
            '-->hy-15-feb-2005
            
                   'belcorp
           If (Trim(Servicio.Text) = "5" And Trim(Empresa.Text) = "7256") Then   ' smerino BELCORP
          
            PMSetValorReverso CboTipCta, "@i_tipo_cta"
                VLTipCta_com = CboTipCta.Text
            PMSetValorReverso Cta, "@i_cuenta"
               VLCta_com = Cta.Text

            PMSetValorReverso Debito, "@i_debito"
            PMSetValorReverso efe, "@i_efectivo"
            PMSetValorReverso NomCta, "@i_nombre_cta"
            PMSetValorReverso Sal_Emp, "@i_empname"
            PMSetValorReverso Ref, "@i_codigo"       ' "@i_cod_cliente"
            PMSetValorReverso Nombre, "@i_nombre_cliente"
            PMSetValorReverso Comision, "@i_comision_tot"
            PMSetValorReverso txthorario, "@i_comision_efe"
            txthorario.Text = ""
            PMSetValorReverso txthorario, "@i_phoralocal"
            VLic_phoralocal = txthorario.Text
            txthorario.Text = ""
            
            PMSetValorReverso Comision, "@i_comision_efe"
            VLEfe_com = Comision.ValueReal
            PMSetValorReverso Comision, "@i_comision_chq"
            VLChq_com = Comision.ValueReal
            PMSetValorReverso Comision, "@i_comision_db"
            VLDeb_com = Comision.ValueReal
            
            VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
            Comision = VLTotCom
            SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
                    
            'VLEfe_com = txthorario.Text
            PMSetValorReverso txthorario, "@o_cod_respuesta" 'smerino
            VLCodOperacion = txthorario.Text
            txthorario.Text = ""
         
            PMSetValorReverso txthorario, "@o_codigo_secuencia" 'smerino
            VLCodSecuencia = txthorario.Text
            txthorario.Text = ""
            
            PMSetValorReverso txthorario, "@o_horario" 'smerino
            VLDpPHorario = txthorario.Text
            txthorario.Text = ""
         
            PMSetValorReverso Total, "@i_totalF"
            PMSetValorReverso Pago_Val, "@i_subtotal"
            PMSetValorReverso Minimo, "@i_Valmin"
            PMSetValorReverso txtFechVen, "@i_FechaLimite"
             PMSetValorReverso valor, "@i_total"  ' aqui va el valor del servicio
            
            'msilvag Inicio RECA-CC-SGC00032726 Belcorp
            PMSetValorReverso txthorario, "@i_cod_consultora"
            VLCodConsultora = txthorario.Text
            txthorario.Text = ""
            'msilvag Fin
            
            Me.Height = 6705
            Ref.Top = "400"
            lblCobAlum.Top = "400"
            Proceso.Visible = False
            sal_serpac.Visible = False
            sal_proc.Visible = False
            lblCol(0).Visible = False
            CboTipo.Visible = False
            lblCol(0).Visible = False
            Minimo.Visible = True
            Ref.MaxLength = 15
            bitmap.Visible = True
            lblCobAlum.Caption = "Código: "
            lblCol(5).Visible = False
            txtFechVen.Visible = True
            lblValor(13).Visible = True
            'Ref.SetFocus
           End If
            
            '-->hy-19-enero-2007
            If (Servicio = 6) Then 'new tvcable smerino
            Me.CboTipo.AddItem "Identificacion"
            Me.CboTipo.AddItem "Contrato"
            Me.CboTipo.ListIndex = 0
            PMSetValorReverso CantChq, "@i_cant_cheques"
            PMSetValorReverso Loc, "@i_cheque"
            PMSetValorReverso CboTipCta, "@i_tipo_cta"
            PMSetValorReverso Cta, "@i_cuenta"
            PMSetValorReverso Debito, "@i_debito"
            PMSetValorReverso efe, "@i_efectivo"
            If Debito.Text > 0 Then 'msilvag RECA-CC-SGC00027895
                PMSetValorReverso NomCta, "@i_nombre_cta"
            End If 'msilvag RECA-CC-SGC00027895
            PMSetValorReverso Sal_Emp, "@i_empname"
            PMSetValorReverso Ref, "@i_codigo"       ' "@i_cod_cliente"
            PMSetValorReverso CboTipo, "@i_ruc_cliente"
            Me.CboTipo.Enabled = True
            txthorario.Text = ""
            PMSetValorReverso Nombre, "@i_nombre_cliente"
            PMSetValorReverso Comision, "@i_comision_tot"
            PMSetValorReverso txthorario, "@i_comision_efe"
            VLEfe_com = txthorario.Text
            'msilvag Inicio RECA-CC-SGC00027895
            PMSetValorReverso txthorario, "@i_comision_chq"
            VLChq_com = txthorario.Text
            PMSetValorReverso txthorario, "@i_comision_db"
            VLDeb_com = txthorario.Text
            'msilvag Fin
            PMSetValorReverso txthorario, "@o_cod_respuesta" 'smerino new tvcable
            VLDpCcodResp = txthorario.Text
            txthorario.Text = ""
            PMSetValorReverso txt_secuencial_tv, "@i_ssn"
            PMSetValorReverso txtfactura, "@i_pcodigo_ciudad"
            PMSetValorReverso txtContrato, "@i_pdescr_empresa"
            PMSetValorReverso Total, "@i_total"
            PMSetValorReverso Pago_Val, "@i_total"
            
           End If
                   
                   'msilvag Etapa Inicio
            If (Trim(Servicio.Text) = "8" And Trim(Empresa.Text) = "6952") Or (Trim(Servicio.Text) = "7" And Trim(Empresa.Text) = "6951") Then
                PMSetValorReverso CboTipCta, "@i_tipo_cta"
                PMSetValorReverso Cta, "@i_cta"
                PMSetValorReverso Ref, "@i_identificador_deuda"
                VLIdentificadorDeduda = Ref.Text
                VLCodDocEtapa = Ref.Text
                PMSetValorReverso Ref, "@i_codigo"
                PMSetValorReverso Debito, "@i_debito"
                'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
                If Debito.Text > 0 Then
                    PMSetValorReverso NomCta, "@i_nombre_cta"
                End If
                'msilvag Fin
                'PMSetValorReverso Comision, "@i_comision_tot"
                PMSetValorReverso Comision, "@i_efe_com"
                VLEfe_com = Comision.ValueReal
                PMSetValorReverso Comision, "@i_chq_com"
                VLChq_com = Comision.ValueReal
                'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
                PMSetValorReverso Comision, "@i_deb_com"
                VLDeb_com = Comision.ValueReal
                VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
                'msilvag Fin
                Comision = VLTotCom
                PMSetValorReverso Pago_Val, "@i_total"
                Pago1 = Pago_Val
                Total = Pago1 + VLTotCom
                
                'msilvag ETAPA Marzo-04-2016
                PMSetValorReverso txthorario, "@i_valor"
                VLDeudaActual = txthorario.Text
                txthorario.Text = ""
                'msilvag fin
                Me.lblValor(2).Visible = False
                Me.Minimo.Visible = False
                Me.lblValor(0).Visible = False
                Me.valor.Visible = False
                Reten.Enabled = False
                Me.Proceso.Visible = False  'no ver proceso
                lblCol(0).Visible = False
                sal_proc.Visible = False
                Me.sal_serpac.Visible = False
                
'            lblCol(3).Visible = False
'            lblCol(4).Visible = False
'            lblCol(5).Visible = False
'            Me.lblCol(6).Visible = False
                PMSetValorReverso Nombre, "@o_num_transaccion"
                VLNumTransaccionReverso = Nombre
                VLNumTransaccion = Nombre
                PMSetValorReverso Nombre, "@o_coddoc_Etapa"
                VLCodDocEtapaReverso = Nombre
                PMSetValorReverso Nombre, "@i_nombre_cliente"
                
                'PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, Me.Pago_Val.Text, "Total", ""  'valor total
            End If
            'msilvag Fin Etapa
                        
            '-->hy-19-enero-2007
            'GAMC - 18/04/2008 - INI
            'If Trim(Empresa.Text) <> "862" And Trim(Empresa.Text) <> "451" And Trim(Servicio.Text) <> "6" Then 'smerino new tvcable
            If Trim(Empresa.Text) <> "1708" And Trim(Empresa.Text) <> "6951" And Trim(Empresa.Text) <> "1707" And Trim(Empresa.Text) <> "6952" And Trim(Empresa.Text) <> "862" And Trim(Empresa.Text) <> "451" And Trim(Servicio.Text) <> "6" And Trim(Empresa.Text) <> "5482" And Trim(Empresa.Text) <> "8521" And Trim(Empresa.Text) <> "5994" And Trim(Empresa.Text) <> "7256" And Trim(Empresa.Text) <> "5488" _
                                                        And Trim(Empresa.Text) <> "8090" And Trim(Empresa.Text) <> "6087" And Trim(Empresa.Text) <> "1125" Then 'UTPL 'RecaudacionEducacion 'Ref17

                If Trim(Empresa.Text) <> "144" And Trim(Empresa.Text) <> "1089" Then  'JPM Megadatos
                  PMSetValorReverso Nombre, "@i_nombre"
                End If
                'PMSetValorReverso Empresa, "@i_empresa"  'ANBE
                PMSetValorReverso Sal_Emp, "@i_empname"
                If Trim(Servicio.Text) = 1 And Trim(VGEmpGrupo) = "N" Then
                PMSetValorReverso sal_proc, "@i_descproc"
                End If
                If Trim(Empresa.Text) <> "1089" Then          'JPM Megadatos
                  PMSetValorReverso CantChq, "@i_cant_chq"
                  PMSetValorReverso Loc, "@i_valch"
                Else                                          'JPM Megadatos -->
                  Fragua.Caption = "              REVERSO A " & Sal_Emp
                  Empresa_LostFocus
                  PMSetValorReverso efe, "@i_efectivo"
                  PMSetValorReverso Loc, "@i_cheque"
                  PMSetValorReverso CantChq, "@i_cant_cheques"
                  PMSetValorReverso Ref, "@i_identificacion"
                  PMSetValorReverso NomCta, "@i_nombre_cta"
                  PMSetValorReverso Nombre, "@i_nombre_cliente"
                  PMSetValorReverso valor, "@i_valor_deuda"
                  valor.Visible = True:       lblValor(0).Visible = True
                  PMSetValorReverso Total_Pagar, "@i_total":   Total_Pagar.Visible = True
                  'valor.Text = Total_Pagar.Text:               valor.Visible = True:       lblValor(0).Visible = True
                  PMSetValorReverso txtfactura, "@i_contrato"
                  PMSetValorReverso Comision, "@i_comision_efe"
                  VLEfe_com = Comision.ValueReal
                  PMSetValorReverso Comision, "@i_comision_chq"
                  VLChq_com = Comision.ValueReal
                  VLDeb_com = 0
                  VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
                  Comision = VLTotCom
                  Total.Text = CCur(valor.Text) + CCur(Comision.Text)
                  'PMSetValorReverso txtfactura, "@i_contrato":    txtfactura.Visible = True
                End If                                        '<-- JPM Megadatos
                PMSetValorReverso Cta, "@i_cuenta"
                PMSetValorReverso Debito, "@i_debito"
                If vl_servidor_BUS = "PSSRV1" Then
                    PMSetValorReverso Reten, "@i_reten"
                    If VGEmpGrupo <> "S" Then
                        PMSetValorReverso Comprob, "@i_comprob"
                    End If
                End If
                'PMSetValorReverso Comision, "@o_comisionven"  '/*JPM 11112004*/
                If Servicio = 5 And Trim(Empresa.Text) <> "118" Then       'tc 25-agosto-2009
                  If Trim(Empresa.Text) <> "115" Then
                    PMSetValorReverso Comision, "@o_comisionven"         'tc 25-agosto-2009
                  End If
                End If
            End If
            'GAMC - 18/04/2008 - INI
            'Total.Text = Pago_Val
            
            'lfcm - 30-enero-2007
            If Servicio = 3 And Empresa = 1719 Then
                'Cambios en la carga de Forma de Reverso
                FormaEmelmanabi
                PMSetValorReverso valor, "@i_val"
            'Else
            '    PMSetValorReverso Pago_Val, "@i_total"
            End If
            
            'Comision
            'Valores de Comision
          'If (Servicio = 3 And (Empresa = 1719 Or Empresa = 1)) Or (Servicio = 6) Then 'hy-19-enero-2007
          If (Servicio = 3 And (Empresa = 1719 Or Empresa = 1 Or Empresa = 1127)) Then 'hy-19-enero-2007 new tvcable smerino se comenta Or (Servicio = 6)
            PMSetValorReverso Comision, "@i_efe_com"
            VLEfe_com = Comision.ValueReal
            PMSetValorReverso Comision, "@i_chq_com"
            VLChq_com = Comision.ValueReal
            'PMSetValorReverso Comision, "@i_deb_com"
            'PMSetValorReverso Comision, "@o_costo"
            'VLDeb_com = Comision.ValueReal
            VLTotCom = VLEfe_com + VLChq_com ' + VLDeb_com
            Comision = VLTotCom
          End If
            
            '/* JPM 22122004 consideración de reverso campo cedula --->*/
            If txtCedula.Visible Then
                '/*JPM 16122004 campos identificacion --->*/
                PMSetValorReverso lblTid, "@o_tipo_id"
                PMSetValorReverso txtCedula, "@o_identificacion"
                Select Case UCase(lblTid.Caption)
                  Case "C":  cmbTid.ListIndex = 0
                  Case "R":  cmbTid.ListIndex = 1
                  Case "P":  cmbTid.ListIndex = 2
                  Case Else: cmbTid.ListIndex = -1
                End Select
                '/*JPM <--- fin campos identificacion*/
            End If
            '/*Fin consideración de reverso de cedula*/
            valor.Enabled = False
            Pago_Val.Enabled = False
            Minimo.Enabled = False
            SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com) 'por reverso sumadora
            
            'lfcm 11-dic-2006
            If (Servicio = 3 And Empresa = 1719) Or (Servicio = 6) Then 'EMELMANABI Carga de los valores a la Forma en el Reverso  hy-19-enero-2007 incluir servicio 6
            'lfcm Agregado de ultima hora por reverso 07-dic-2006
                Dim VLValor As Currency
                VLValor = FMCCurATX(efe) + FMCCurATX(Loc) + FMCCurATX(Debito)

                valor = VLValor
                Total.Text = valor + FMCCurATX(Comision.Text)
            End If
            
        'TC - 12/10/2009 - INI
        If Trim(Servicio) = "5" And Trim(Empresa) = "118" Then    'PORTA
            Me.Height = 6705
            lblValor(2).Visible = True
            lblValor(2).Caption = "Total Pagado: "
            Total_Pagar.Visible = True
            PMSetValorReverso Total_Pagar, "@i_saldo"
            PMSetValorReverso Pago_Val, "@i_val"
            PMSetValorReverso txthorario, "@o_horario"
            VLDpPHorario = txthorario.Text
            txthorario.Text = ""
            PMSetValorReverso Txtfeccontable, "@i_fecha_contable"
            VLFechaContable = Txtfeccontable.Text
            Me.Pago_Val.Top = 4365
            Minimo.Visible = False
            Ref.MaxLength = 10
            bitmap.Visible = False
            ImgStrech.Visible = False  'JPM Megadatos
            valor.Visible = False
            lblCobAlum.Caption = "No.Celular: "
            lblCol(5).Visible = False
            Proceso.Visible = False
            sal_serpac.Visible = False
            serpac.Visible = False
            sal_proc.Visible = False
            lblCol(0).Visible = False
            
            'msilvag Inicio RECA-CC-SGC00027715
            PMSetValorReverso Comision, "@i_efe_com"
            VLEfe_com = Comision.ValueReal
            PMSetValorReverso Comision, "@i_chq_com"
            VLChq_com = Comision.ValueReal
            'Debito
            PMSetValorReverso Comision, "@i_deb_com"
            VLDeb_com = Comision.ValueReal
            
            VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
            Comision = VLTotCom
            SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
            'msilvag Fin
        End If
        'TC - 12/10/2009 - FIN
        
        'TC - 17/07/2009 - INI
        If Trim(Servicio) = "5" And Trim(Empresa) = "115" Then    'De Prati
            Label1(1).Visible = False
            txtValDeu.Visible = False
            Label1(0).Visible = False
            Reten.Visible = False
            lblValor(9).Visible = True
            ValMinimo.Visible = True
            lblValor(12).Visible = True
            ValMaximo.Visible = True
            lblValor(2).Visible = False
            Minimo.Visible = False
            Ref.MaxLength = 14  '11/24/2011 7
            PMSetValorReverso ValMinimo, "@i_minimo"
            PMSetValorReverso ValMaximo, "@i_saldo"
            PMSetValorReverso Pago_Val, "@i_val"
            'PMSetValorReverso txtced, "@i_cedula"
            PMSetValorReverso txthorario, "@o_horario"
            VLDpPHorario = txthorario.Text
            txthorario.Text = ""
            PMSetValorReverso Txtfeccontable, "@i_pfecha_contable"
            VLFechaContable = Txtfeccontable.Text
            'Comision DePrati
            PMSetValorReverso Comision, "@i_efe_com"
            VLEfe_com = Comision.ValueReal
            PMSetValorReverso Comision, "@i_chq_com"
            VLChq_com = Comision.ValueReal
            PMSetValorReverso Comision, "@i_deb_com"
            VLDeb_com = Comision.ValueReal
            VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
            Comision = VLTotCom
            SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)

            
        End If
        'TC - 17/07/2009 - FIN
        
        'msilvag Inicio MGLOB MARGLOBLAL
        If Trim(Servicio) = "9" Then    'NAVIERAS Y LOGISTICA
            
            PMSetValorReverso lblservicio, "@i_servname"
            
            PMSetValorReverso txthorario, "@i_grupo"
            VLGrupo = txthorario.Text
            If VLGrupo = "451" Then
                Me.Empresa.Text = VLGrupo
                PMSetValorReverso Sal_Emp, "@i_gruponame"
                PMSetValorReverso Proceso, "@i_empresa"
                PMSetValorReverso sal_proc, "@i_empname"
            Else
                PMSetValorReverso Empresa, "@i_empresa"
                PMSetValorReverso Sal_Emp, "@i_empname"
            End If
            
            PMSetValorReverso Ref, "@i_referencia"
            PMSetValorReverso Nombre, "@i_nombre"
            PMSetValorReverso Pago_Val, "@i_total"
            PMSetValorReverso efe, "@i_efe"
            PMSetValorReverso Loc, "@i_valch"
            PMSetValorReverso Debito, "@i_debito"
            
            PMSetValorReverso Comision, "@i_efe_com"
            VLEfe_com = Comision.ValueReal
            PMSetValorReverso Comision, "@i_chq_com"
            VLChq_com = Comision.ValueReal
            PMSetValorReverso Comision, "@i_deb_com"
            VLDeb_com = Comision.ValueReal
            
            VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
            Comision = VLTotCom
            SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
            PMSetValorReverso Comision, "@i_comision"
            
            PMSetValorReverso CantChq, "@i_cant_chq"
            
            PMSetValorReverso CboTipCta, "@i_tipocta"
            PMSetValorReverso Cta, "@i_cuenta"
            VLTipCta_com = CboTipCta.Text
            VLCta_com = Cta.Text

            Total = Pago_Val.Text

            If VLGrupo = "451" Then
                lblCol(6).Visible = True
                lblCol(6).Caption = "Grupo Emp:"
                Proceso.Visible = True
                Proceso.Enabled = False
                sal_proc.Visible = True
            Else
                lblCol(6).Visible = False
                Proceso.Visible = False
                sal_proc.Visible = False
            End If
            
            
            Pago_Val.Visible = True
            lblValor(2).Visible = True
            bitmap.Visible = False
            ImgStrech.Visible = False
            lblCobAlum.Caption = "Codigo: "
            lblCol(5).Visible = False
            Minimo.Visible = True
            
            
            sal_serpac.Visible = False
            lblCol(0).Visible = False
            
            lblCol(3).Visible = False
            lblCol(4).Visible = False
            lblCol(5).Visible = False
            Forma_Pago.Visible = False
            Nombre_oficina.Visible = False
            Minimo.Visible = False
            lblValor(2).Visible = False

            Me.Height = 6500
            
            Fragua.Caption = "REVERSO EMPRESAS NAV Y LOGISTICA"
            
        End If
        'msilvag Fin
        
            If (Servicio = 1 And Empresa = 1707) Or (Servicio = 2 And Empresa = 1708) Then
              If Servicio = 2 Then
                          'msilvag ETAPA
               VLDescripServicio = "Agua"
'               PMSetValorReverso Ref, "@i_psector"
'               psector$ = Ref
'               PMSetValorReverso Ref, "@i_psubsector"
'               psubsector$ = Ref
'               PMSetValorReverso Ref, "@i_plectura"
'               plectura$ = Ref
'               Ref = psector$ & psubsector$ & plectura$
'               '@i_psector + @i_psubsector + @i_plectura

                        Else
                                VLDescripServicio = "Telefono"
                                'msilvag ETAPA
              End If
                          'msilvag Etapa Inicio
              
'              PMSetValorReverso Comision, "@i_area"
'              VLChq_com = Comision.Text
'              PMSetValorReverso Comision, "@i_comision"
'              VLEfe_com = Comision.Text
'              Comision.Text = VLEfe_com + VLChq_com
'              PMSetValorReverso Fecha, "@o_fecha_atx"
'              PMSetValorReverso efe, "@i_costo"
'              PMSetValorReverso Pago_Val, "@i_valor"
'              SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
'              Total.Text = Pago_Val + CDbl(VLChq_com) + CDbl(VLEfe_com)
                PMSetValorReverso efe, "@i_efectivo"
                PMSetValorReverso Loc, "@i_cheque"
                PMSetValorReverso CantChq, "@i_cant_chq"
                
                PMSetValorReverso CboTipCta, "@i_tipo_cta"
                PMSetValorReverso Cta, "@i_cta"
                PMSetValorReverso Ref, "@i_identificador_deuda"
                VLIdentificadorDeduda = Ref.Text
                VLCodDocEtapa = Ref.Text
                PMSetValorReverso Ref, "@i_codigo"
                PMSetValorReverso Debito, "@i_debito"
                'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
                If Me.Debito.Text > 0 Then
                    PMSetValorReverso NomCta, "@i_nombre_cta"
                End If
                'msilvag Fin
                'PMSetValorReverso Comision, "@i_comision_tot"
                PMSetValorReverso Comision, "@i_efe_com"
                VLEfe_com = Comision.ValueReal
                PMSetValorReverso Comision, "@i_chq_com"
                VLChq_com = Comision.ValueReal
                'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
                PMSetValorReverso Comision, "@i_deb_com"
                VLDeb_com = Comision.ValueReal
                VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
                'msilvag Fin
                Comision = VLTotCom
                PMSetValorReverso Pago_Val, "@i_total"
                Pago1 = Pago_Val
                Total = Pago1 + VLTotCom
                Me.lblValor(2).Visible = False
                Me.Minimo.Visible = False
                Me.lblValor(0).Visible = False
                Me.valor.Visible = False
                Reten.Enabled = False
                Me.Proceso.Visible = False  'no ver proceso
                lblCol(0).Visible = False
                sal_proc.Visible = False
                Me.lblCol(6).Visible = False
                
                'msilvag ETAPA Marzo-04-2016
                PMSetValorReverso txthorario, "@i_valor"
                VLDeudaActual = txthorario.Text
                txthorario.Text = ""
                'msilvag fin

                PMSetValorReverso Nombre, "@o_num_transaccion"
                VLNumTransaccionReverso = Nombre
                VLNumTransaccion = Nombre
                PMSetValorReverso Nombre, "@o_coddoc_Etapa"
                VLCodDocEtapaReverso = Nombre
                PMSetValorReverso Nombre, "@i_nombre_cliente"
                SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com) 'por reverso sumadora
                'msilvag Etapa Fin
            End If
            
            'TPE Recupero servicio para Reverso.
            If Trim(Empresa) <> "118" And Trim(Empresa) <> "451" And Trim(Empresa) <> "7256" And Trim(Empresa.Text) <> "1708" And Trim(Empresa.Text) <> "6951" And Trim(Empresa.Text) <> "1707" And Trim(Empresa.Text) <> "6952" And Trim(Empresa.Text) <> "5488" _
                                                  And Trim(Empresa.Text) <> "8090" Then    'UTPL
                Servicio_LostFocus
            End If
            
            'TC - 22/02/2010 - INI
            If Trim(Servicio) = "2" And Trim(Empresa) = "114" Then    'TRIPLE ORO
                Me.Height = 6705
                lblValor(2).Visible = True
                lblValor(2).Caption = "Total Pagado: "
                Total_Pagar.Visible = True
                Me.Pago_Val.Top = 4365
                Minimo.Visible = False
                valor.Visible = False
                bitmap.Visible = False
                ImgStrech.Visible = False  'JPM Megadatos
                lblCobAlum.Caption = "Codigo: "
                lblCol(5).Visible = False
                Proceso.Visible = False
                sal_serpac.Visible = False
                serpac.Visible = False
                sal_proc.Visible = False
                lblCol(0).Visible = False
                PMSetValorReverso Total_Pagar, "@o_saldo"
                VLDpPValorPendienteCobro = Total_Pagar.Text
                PMSetValorReverso Total_Pagar, "@i_saldo"
                PMSetValorReverso Pago_Val, "@i_val"
                PMSetValorReverso txthorario, "@o_horario"
                VLDpPHorario = txthorario.Text
                txthorario.Text = ""
                PMSetValorReverso Comision, "@i_efe_com"
                VLEfe_com = Comision.ValueReal
                PMSetValorReverso Comision, "@i_chq_com"
                VLChq_com = Comision.ValueReal
                VLTotCom = VLEfe_com + VLChq_com
                Comision = VLTotCom
                SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
                Total.Text = Pago_Val + CDbl(VLChq_com) + CDbl(VLEfe_com)
                End If
            'TC - 22/02/2010- FIN
            
            If Trim(Servicio) = "3" And Trim(VGEmpGrupo) = "S" Then  'DAPV/03062012/CNEL
                    Me.Height = 6000
                    lblCol(6).Visible = True
                    Pago_Val.Visible = True
                    bitmap.Visible = False
                    ImgStrech.Visible = False  'JPM Megadatos
                    lblCobAlum.Caption = "Codigo: "
                    lblCol(5).Visible = False
                    Minimo.Visible = False
                    Proceso.Visible = True
                    sal_proc.Visible = True
                    lblCol(0).Visible = False
                    Empresa.Enabled = False
                    Servicio.Enabled = False
                    Proceso.Enabled = False
                    Ref.Enabled = False
                    Fragua.Caption = "              PAGO A " + "CNEL"

                    valor.Visible = True
                    lblValor(0).Visible = True
                    Minimo.Visible = True
                    
                    Consulta_parametro_OSB 'msilvag Bus Fase 2 CNEL
                    
                    PMSetValorReverso valor, "@i_pvalorpag"
                    vl_total = CDbl(valor) / 100
                    PMSetValorReverso valor, "@i_ptotal_pendiente"
                    'msilvag SOA Fase 2 Inicio CNEL
                    'vl_total = vl_total + (CDbl(Valor) / 100)
                    If vl_servidor_BUS = "PSSRV1" Then
                        vl_total = vl_total + (CDbl(valor) / 100)
                    Else
                        vl_total = (CDbl(valor) / 100)
                    End If
                    'msilvag SOA Fase 2 Fin
                    valor.Text = vl_total
                    PMSetValorReverso efe, "@i_val"
                    PMSetValorReverso Loc, "@i_valch"
                    PMSetValorReverso Debito, "@i_debito"
                    PMSetValorReverso Reten, "@i_reten"
                    PMSetValorReverso CboTipCta, "@i_tipocta"
                    PMSetValorReverso Cta, "@i_cuenta"
                    PMSetValorReverso CantChq, "@i_cant_chq"
                    PMSetValorReverso Nombre, "@i_nombre"
                    PMSetValorReverso Cta, "@i_cuenta"
                    PMSetValorReverso txthorario, "@o_horario"
                    VLDpPHorario = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_phoralocal"
                    VLic_phoralocal = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_pfechalocal"
                    VLic_pfechalocal = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_pseguridad"
                    VLCNLSEG = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_pcedula"
                    VLCedula = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@o_secmt"
                    VLSecMt = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_pfechaemi"
                    VLi_pfechaemi = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_pfechaven"
                    VLi_pfechaven = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_pfactura"
                    VLi_pfactura = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_pregional"
                    VLCodReg = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@o_codautorizador"
                    VLo_pautorizacion = txthorario.Text
                    VLo_pautorizacion = Right(txthorario.Text, 6)
                    VLo_pautorizacion = Mid("000000", 1, 6 - Len(VLo_pautorizacion)) + VLo_pautorizacion
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_pnumero"
                    VLo_pnumero = txthorario.Text
                    txthorario.Text = ""
                    
                    
                    PMSetValorReverso Comision, "@i_efe_com"
                    VLEfe_com = Comision.ValueReal
                    PMSetValorReverso Comision, "@i_chq_com"
                    VLChq_com = Comision.ValueReal
                    VLTotCom = VLEfe_com + VLChq_com
                    Comision = VLTotCom
                    SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
                    Total.Text = Pago_Val + CDbl(VLChq_com) + CDbl(VLEfe_com)
                    
                End If
            
            If Servicio = 2 And (Trim(Empresa.Text) = "361" Or Trim(Empresa.Text) = "8269") Then 'dpereirv 'JPM IWS TRB 8269
                    PMSetValorReverso Comision, "@i_efe_com"
                    VLEfe_com = Comision.ValueReal
                    PMSetValorReverso Comision, "@i_chq_com"
                    VLChq_com = Comision.ValueReal
                    'If Trim(Empresa.Text) = "361" Then
                        PMSetValorReverso Comision, "@i_deb_com" 'REF 13
                        VLDeb_com = Comision.ValueReal 'REF 13
                        VLTotCom = VLEfe_com + VLChq_com + VLDeb_com  'REF 13
                    'Else
                    '     VLTotCom = VLEfe_com + VLChq_com
                    'End If
                    Comision = VLTotCom
                    SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
                    If Trim(Empresa.Text) = "8269" Then
                        Total.Text = Pago_Val + CDbl(VLChq_com) + CDbl(VLEfe_com) + CDbl(VLDeb_com)  'msilvag RECM-311 RECMPS-373
                        'PMSetValorReverso lblAux, "@o_horario"
                        'VLHorario = lblAux.Caption
                        'VLHorarioBK = VLHorario
                                           Me.valor.Text = Pago_Val.Text 'msilvag REMCPS-373
                    Else
                        Total.Text = Pago_Val + CDbl(VLChq_com) + CDbl(VLEfe_com) + CDbl(VLDeb_com) 'REF 13
                    End If
             End If
    
            'msilvag Inicio SGC00007024
            If Servicio = 3 And Trim(Empresa.Text) = "1371" Then
                    PMSetValorReverso Comision, "@i_efe_com"
                    VLEfe_com = Comision.ValueReal
                    PMSetValorReverso Comision, "@i_chq_com"
                    VLChq_com = Comision.ValueReal
                    VLTotCom = VLEfe_com + VLChq_com
                    Comision = VLTotCom
                    SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
                    Total.Text = Pago_Val + CDbl(VLChq_com) + CDbl(VLEfe_com)
                     PMSetValorReverso valor, "@i_total"
                     total1 = valor.ValueReal
                     valor.Text = CDbl(total1) - CDbl(Comision.Text)
                     Pago_Val.Text = total1
                    'Me.Total_Pagar.Text = Total_Pagar.Text + Comision.Text
             End If
             'msilvag Fin
            
            'msilvag Inicio Abril-4-2013 reverso comision de agua
            If Trim(Servicio) = "2" And (Trim(Empresa) = "360" Or Trim(Empresa) = "6" Or Trim(Empresa) = "4") Then
                PMSetValorReverso Ref, "@i_codigo"
                PMSetValorReverso Comision, "@i_efe_com"
                VLEfe_com = Comision.ValueReal
                PMSetValorReverso Comision, "@i_chq_com"
                VLChq_com = Comision.ValueReal
                'dolaya 05-29-2018 Ini
                PMSetValorReverso Comision, "@i_deb_com"
                VLDeb_com = Comision.ValueReal
                VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
                'dolaya 05-29-2018 Fin
                Comision = VLTotCom
                SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
                FConsultarAmaguaBase (Empresa) 'AMAGUA-AP-SGC00028642 Ini
                If VLEmpAmaBase = "N" Then
                PMSetValorReverso Minimo, "@o_minimo"
                  PMSetValorReverso valor, "@o_saldo"
                  Total.Text = Pago_Val.ValueReal + valor.ValueReal
                Else
                  PMSetValorReverso valor, "@i_saldo"
                  PMSetValorReverso txtCodPago, "@o_cod_pago"
                  Total.Text = Comision + valor.ValueReal
                  Total_Pagar = valor
                  'Ocultamos la caja de texto V. Minimo cuando sea reverso
                   If VGTipoEjecucion% = CGReverso% Then
                      Me.Minimo.Visible = False
                      lblValor(2).Visible = False
                   End If
                End If
                PMSetValorReverso Debito, "@i_debito"
                PMSetValorReverso Loc, "@i_valch"
                If Empresa <> "6" Then
                  Total.Text = Pago_Val.ValueReal + valor.ValueReal
            End If
                If Empresa = "360" Then
                  PMSetValorReverso valor, "@o_minimo"
                End If
                'AMAGUA-AP-SGC00028642 Fin
            End If
            'msilvag Fin
            
'            If Trim(Servicio) = "1" And Trim(Empresa) = "5482" Then    'CNT MOVIL
'                    PMSetValorReverso txthorario, "@o_pid_pago"
'                    VLIdPagoRev = txthorario.Text
'                    txthorario.Text = ""
'                    PMSetValorReverso txthorario, "@o_ssn" '@i_psecadq
'                    VLDpCSecAdqRev = txthorario.Text
'                    txthorario.Text = ""
'                    PMSetValorReverso txthorario, "@i_grupo"
'                    VGEmpGrupo = txthorario.Text
'                    txthorario.Text = ""
'                    Servicio_LostFocus
'                    PMSetValorReverso Empresa, "@i_cod_grupo"
'                    Empresa_LostFocus
'                    PMSetValorReverso Proceso, "@i_empresa"
'                    Proceso_LostFocus
'                    PMSetValorReverso CantChq, "@i_cant_cheques"
'                    PMSetValorReverso Loc, "@i_cheque"
'                    PMSetValorReverso CboTipCta, "@i_tipo_cta"
'                    PMSetValorReverso Cta, "@i_cuenta"
'                    PMSetValorReverso Debito, "@i_debito"
'                    PMSetValorReverso Efe, "@i_efectivo"
'                    PMSetValorReverso NomCta, "@i_nombre_cta"
'                    PMSetValorReverso Sal_Emp, "@i_empname"
'                    PMSetValorReverso sal_proc, "@i_descproc"
'                    PMSetValorReverso Ref, "@i_cod_cliente"
'                    PMSetValorReverso txthorario, "@i_ruc_cliente"
'                    VLCedula = txthorario.Text
'                    txthorario.Text = ""
'                    PMSetValorReverso Nombre, "@i_nombre_cliente"
'                    txthorario.Text = ""
'                    PMSetValorReverso txthorario, "@i_cod_respuesta"
'                    VLDpCcodResp = txthorario.Text
'                    txthorario.Text = ""
'                    PMSetValorReverso Total, "@i_totapag"
'                    PMSetValorReverso Valor, "@i_total"
'                    PMSetValorReverso Pago_Val, "@i_totval"
'                    PMSetValorReverso Comision, "@i_comision_efe"
'                    VLEfe_com = Comision.ValueReal
'                    PMSetValorReverso Comision, "@i_comision_chq"
'                    VLChq_com = Comision.ValueReal
'                    VLTotCom = VLEfe_com + VLChq_com
'                    Comision = VLTotCom
'                    SGUsar = CDbl(Efe.Text) + CDbl(VLEfe_com)
'                    Fragua.Caption = "              REVERSO A " & Sal_Emp
'            End If



            
            If Trim(Servicio) = "5" And Trim(Empresa) = "5994" Then    'CONECEL TVS dpereirv
                    Me.Height = 6705
                    lblValor(2).Visible = True
                    lblValor(2).Caption = "Total Pagado: "
                    Total_Pagar.Visible = True
                    Me.Pago_Val.Top = 4365
                    Minimo.Visible = False
                    bitmap.Visible = False
                    ImgStrech.Visible = False  'JPM Megadatos
                    lblCol(5).Visible = False
                    Proceso.Visible = False
                    sal_serpac.Visible = False
                    sal_proc.Visible = False
                    lblCol(0).Visible = False
                    lblCobAlum.Caption = "Identificación: "
                    lblCobAlum.Top = 450
                    lblCobAlum.Left = 750
                    Ref.Top = 400
                    Ref.Enabled = False

                    PMSetValorReverso Total_Pagar, "@i_total"
                    PMSetValorReverso Pago_Val, "@i_totval"
                    PMSetValorReverso txthorario, "@o_horario"
                    VLDpPHorario = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso Txtfeccontable, "@i_pfecha_cont"
                    VLFechaContable = Txtfeccontable.Text
                    PMSetValorReverso CantChq, "@i_cant_cheques"
                    PMSetValorReverso Loc, "@i_cheque"
                    PMSetValorReverso CboTipCta, "@i_tipo_cta"
                    PMSetValorReverso Cta, "@i_cuenta"
                    PMSetValorReverso Debito, "@i_debito"
                    PMSetValorReverso efe, "@i_efectivo"
                    'msilvag Inicio RECA-CC-SGC00027715
                    If Me.Debito.Text > 0 Then
                        PMSetValorReverso NomCta, "@i_nombre_cta"
                    End If
                    'msilvag Fin
                    PMSetValorReverso Sal_Emp, "@i_empname"
                    PMSetValorReverso txthorario, "@i_ruc_cliente"
                    VLCedula = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso Nombre, "@i_nombre_cliente"
                    PMSetValorReverso Total, "@i_totapag"
                    PMSetValorReverso Ref, "@i_cod_cliente"
                    PMSetValorReverso Comision, "@i_comision_efe"
                    VLEfe_com = Comision.ValueReal
                    PMSetValorReverso Comision, "@i_comision_chq"
                    VLChq_com = Comision.ValueReal
                    
                    'msilvag Inicio RECA-CC-SGC00027715
                    PMSetValorReverso txthorario, "@i_comision_db"
                    VLDeb_com = txthorario.Text
                    txthorario.Text = ""
                    'msilvag Fin
                    
                    VLTotCom = VLEfe_com + VLChq_com + VLDeb_com 'msilvag RECA-CC-SGC00027715
                    Comision = VLTotCom
                    SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
                    Me.Pago_Val.Top = 4365
                    Minimo.Visible = False
                    bitmap.Visible = False
                    ImgStrech.Visible = False  'JPM Megadatos
                    valor.Visible = False
                    lblCol(5).Visible = False
                    Proceso.Visible = False
                    sal_serpac.Visible = False
                    serpac.Visible = False
                    sal_proc.Visible = False
                    lblCol(0).Visible = False
                    txthorario.Text = ""
                    Select Case VLTipoDocumento
                    Case "002":

                           cboTipoId.AddItem "C"
                    Case "008":

                           cboTipoId.AddItem "R"
                    Case "007":

                          cboTipoId.AddItem "P"
                    End Select
                    PMSetValorReverso txthorario, "@i_pid_banco"
                    VLInstAdq = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_pcanal"
                    VLCanalEcut = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_psec_banco"
                    VLSsn = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@o_pid_pago"
                    VLIdPagoRev = txthorario.Text
                    VLDpsececutel = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@o_fecha_contable"
                    VLFechaCorte = txthorario.Text
                    txthorario.Text = ""
                    
            End If

            If Trim(Servicio) = "5" And Trim(Empresa) = "8521" Then    'ECUTEL
                Ref.Enabled = False
                Me.Height = 6705
                lblValor(2).Visible = True
                lblValor(2).Caption = "Total Pagado: "
                Total_Pagar.Visible = True
                PMSetValorReverso Total_Pagar, "@e_total"
                PMSetValorReverso Pago_Val, "@i_totval"
                'PMSetValorReverso Txtfeccontable, "@i_pfecha_cont"
                VLFechaContable = Format$(Date, "yyyymmdd")
                PMSetValorReverso CantChq, "@e_cant_cheques"
                PMSetValorReverso Loc, "@e_cheque"
                PMSetValorReverso Debito, "@e_debito"
                If Debito <> "0.00" Then
                    PMSetValorReverso CboTipCta, "@i_tipo_cta"
                End If
                PMSetValorReverso Cta, "@e_cuenta"
                PMSetValorReverso efe, "@e_efectivo"
                PMSetValorReverso Sal_Emp, "@i_empname"
                PMSetValorReverso txthorario, "@e_identificacion"
                VLCedula = txthorario.Text
                txthorario.Text = ""
                PMSetValorReverso Nombre, "@e_nombre"
                PMSetValorReverso Total, "@e_total"
                PMSetValorReverso Ref, "@e_identificacion"
                PMSetValorReverso Comision, "@e_comision_efe"
                VLEfe_com = Comision.ValueReal
                PMSetValorReverso Comision, "@e_comision_chq"
                VLChq_com = Comision.ValueReal
                PMSetValorReverso txthorario, "@e_comision_db"
                VLDeb_com = txthorario.Text
                txthorario.Text = ""
                VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
                Comision = VLTotCom
                SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
                PMSetValorReverso Debito, "@e_debito"
                If Me.Debito.Text > 0 Then
                    PMSetValorReverso NomCta, "@e_nombre_cta"
                End If
                PMSetValorReverso Loc, "@e_cheque"
                Me.Pago_Val.Top = 4365
                Minimo.Visible = False
                bitmap.Visible = False
                ImgStrech.Visible = False
                valor.Visible = False
                lblCol(5).Visible = False
                Proceso.Visible = False
                sal_serpac.Visible = False
                serpac.Visible = False
                sal_proc.Visible = False
                lblCol(0).Visible = False
                cboTipoId.Visible = True
                cboTipoId.Enabled = False
                cboTipoId.Clear
                cboTipoId.Top = "380"
                cboTipoId.Left = "1100"
                Ref.Top = "400"
                lblCobAlum.Caption = "Codigo:"
                lblCobAlum.Top = "450"
                lblCobAlum.Left = "350"
                
                cboTipoId.TabIndex = "3"
                PMSetValorReverso txthorario, "@i_ptipo_doc"
                VLTipoDocumento = txthorario.Text
                txthorario.Text = ""
                Select Case VLTipoDocumento
                Case "002":
                       cboTipoId.AddItem "C"
                Case "008":
                       cboTipoId.AddItem "R"
                Case "007":
                      cboTipoId.AddItem "P"
                End Select
                cboTipoId.ListIndex = 0
                Forma_Pago.Visible = False
            End If
            
                If Trim(Servicio) = "1" And vl_servidor_BUS <> "PSSRV1" And Empresa <> 1707 Then  'msilvag Mayo/09/2016    'CNT Migracion
                   
                    PMSetValorReverso Servicio, "@i_servicio"
                    Servicio_LostFocus
                    
                    PMSetValorReverso Empresa, "@i_emp"
                    PMSetValorReverso Sal_Emp, "@i_empname"
                    Empresa_LostFocus
     
                    PMSetValorReverso Proceso, "@i_empresa"
                    Proceso_LostFocus
                    PMSetValorReverso serpac, "@i_area"
                    serpac_LostFocus
                    
                    PMSetValorReverso txthorario, "@i_tipo_serv"
                    Vl_tipo_serv = txthorario
                    
                    If Trim(Vl_tipo_serv) = "000" Then
                        cbo_tipo2.ListIndex = 2
                        lblCol(9).Left = 150
                        lblCol(9).Caption = "Codigo de Servicio"
                        txt_CodServ.Visible = True
                        txt_CodServ.Top = 540
                        txt_CodServ.Left = 1780
                        cbo_tipo2.Visible = False
                        fragua2.Caption = "              REVERSO A " & Sal_Emp
                        PMSetValorReverso txt_CodServ, "@i_referencia"
                    Else
                        cbo_tipo2.ListIndex = 1
                        fragua2.Visible = False
                        Fragua.Caption = "              REVERSO A " & Sal_Emp
                        PMSetValorReverso Ref, "@i_referencia"
                        If Trim(Vl_tipo_serv) = "001" Then
                            Ref = Mid(Ref, 3, 15)
                        End If
                    End If
                    

                    PMSetValorReverso sal_proc, "@i_descproc"
                    PMSetValorReverso CantChq, "@i_cant_chq"
                    PMSetValorReverso Loc, "@i_valch"
                    PMSetValorReverso Debito, "@i_debito"
                    PMSetValorReverso Nombre, "@i_nombre"
                    PMSetValorReverso efe, "@i_valor"
                    PMSetValorReverso valor, "@i_valor_serv"
                    
                    PMSetValorReverso Cta, "@i_cuenta"
                    PMSetValorReverso CboTipCta, "@i_producto"
                    'msilvag Inicio RECA-CC-SGC00030409 - Facturacion OffLine Debitos
                    If Me.Debito > 0 Then
                        PMSetValorReverso NomCta, "@i_nombre_cta"
                    End If
                    'msilvag Fin
                    PMSetValorReverso Comision, "@i_comision"
                    VLEfe_com = Comision.ValueReal
                    PMSetValorReverso txtfactura, "@i_num_factura"
                    PMSetValorReverso Comision, "@i_che_com"
                    VLChq_com = Comision.ValueReal
                    'msilvag Inicio RECA-CC-SGC00030409 - Facturacion OffLine Debitos
                    PMSetValorReverso Comision, "@i_costo"
                    VLDeb_com = Comision.ValueReal
                    VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
                    'msilvag Fin
                    Comision = VLTotCom
                    SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
                    PMSetValorReverso Pago_Val, "@i_pago_val"
                    PMSetValorReverso Total, "@i_total"
                    PMSetValorReverso txthorario, "@o_pid_pago"
                    vl_idpago = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_categoria"
                    VLcategoria = txthorario.Text
                    txthorario.Text = ""
                    PMSetValorReverso txthorario, "@i_mes_impago"
                    Vl_Mes_Impago = txthorario.Text
                    txthorario.Text = ""
            End If
            
            If Trim(Servicio) = "7" And Trim(Empresa) = "5488" Then    'Directv postpago
              Me.Height = 6705
              lblValor(2).Visible = True
              lblValor(2).Caption = "Total Pagado: "
              Total_Pagar.Visible = True
               Me.Pago_Val.Top = 4365
              Minimo.Visible = False
              Ref.MaxLength = 13
              Ref.Width = "1700"
              Ref.Enabled = False
              bitmap.Visible = False
              ImgStrech.Visible = False  'JPM Megadatos
              valor.Visible = False
              Proceso.Visible = False
              sal_serpac.Visible = False
              serpac.Visible = False
              sal_proc.Visible = False
              txt_fecha_emision.Visible = True
              lblValor(13).Visible = True
              lblValor(13).Caption = "Dirección:"
              If VGTipoEjecucion% = CGReverso% Then
                  Me.CboTipo.Clear
                  Me.CboTipo.AddItem "Identificacion"
                  Me.CboTipo.AddItem "Contrato"
                  Me.CboTipo.ListIndex = 0
                  CboTipo.TabIndex = 1
              End If
              CboTipo.Visible = True
              CboTipo.Width = "1700"
              CboTipo.Top = "180"
              CboTipo.Enabled = False
              PMSetValorReverso Sal_Emp, "@i_empname"
              Fragua.Caption = "              PAGO A " & Sal_Emp
              PMSetValorReverso CboTipo, "@i_tipo_cons"
              PMSetValorReverso Ref, "@i_identificacion"
              PMSetValorReverso Total_Pagar, "@i_saldo"
              PMSetValorReverso txthorario, "@i_comision_chq"
              VLChq_com = txthorario.Text
              txthorario.Text = ""
              PMSetValorReverso Debito, "@i_debito"
              PMSetValorReverso txthorario, "@i_comision_efe"
              VLEfe_com = txthorario.Text
              txthorario.Text = ""
              'msilvag Inicio RECA-CC-SGC00030409 - Facturacion OffLine Debitos
              PMSetValorReverso txthorario, "@i_comision_db"
              VLDeb_com = txthorario.Text
              txthorario.Text = ""
              'msilvag Fin
              PMSetValorReverso Comision, "@i_comision_tot"
              PMSetValorReverso Pago_Val, "@i_total"
              PMSetValorReverso Cta, "@i_cuenta"
              PMSetValorReverso CboTipCta, "@i_tipo_cta"
              PMSetValorReverso valor, "@i_subtotal"
              PMSetValorReverso txtregional, "@i_codigo"
              PMSetValorReverso Total, "@i_total_val"
              PMSetValorReverso Nombre, "@i_nombre_suscrip"
              PMSetValorReverso txthorario, "@o_pid_pago"
              VLSsn = txthorario
              txthorario.Text = ""
              SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
          End If
            
            If Trim(Servicio) = "5" And Trim(Empresa) = "8090" Then    'UTPL
                Me.Height = 6705
                lblValor(2).Visible = True
                lblValor(2).Caption = "Total Pagado: "
                Total_Pagar.Visible = True
                Me.Pago_Val.Top = 4365
                Minimo.Visible = False
                Ref.MaxLength = 10
                Ref.Width = "1700"
                Ref.Enabled = False
                bitmap.Visible = False
                ImgStrech.Visible = False  'JPM Megadatos
                valor.Visible = False
                Proceso.Visible = False
                sal_serpac.Visible = False
                serpac.Visible = False
                sal_proc.Visible = False
                txt_fecha_emision.Visible = True
                txt_fecha_emision.Width = "3200"
                txt_fecha_emision.Left = "1250"
                lblValor(13).Visible = True
                lblValor(13).Caption = "Referencia:"
                If VGTipoEjecucion% = CGReverso% Then
                    Me.CboTipo.Clear
                    Me.CboTipo.AddItem "Identificacion"
                    Me.CboTipo.AddItem "Código estudiante"
                    Me.CboTipo.ListIndex = 0
                    CboTipo.TabIndex = 1
                End If
                CboTipo.Visible = True
                CboTipo.Width = "1700"
                CboTipo.Top = "180"
                CboTipo.Enabled = False
                PMSetValorReverso Sal_Emp, "@i_empname"
                Fragua.Caption = "              PAGO A " & Sal_Emp
                PMSetValorReverso txthorario, "@i_tipoConsulta"
                If Trim(txthorario) = 1 Then
                    CboTipo.ListIndex = 0
                Else
                    CboTipo.ListIndex = 1
                End If
                txthorario.Text = ""
                PMSetValorReverso Ref, "@i_codigo"
                PMSetValorReverso Total_Pagar, "@i_saldo"
                PMSetValorReverso txthorario, "@i_comision_chq"
                VLChq_com = txthorario.Text
                txthorario.Text = ""
                PMSetValorReverso Debito, "@i_debito"
                PMSetValorReverso txthorario, "@i_comision_efe"
                VLEfe_com = txthorario.Text
                txthorario.Text = ""
                'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
                PMSetValorReverso txthorario, "@i_comision_db"
                VLDeb_com = txthorario.Text
                txthorario.Text = ""
                'msilvag Fin
                PMSetValorReverso Comision, "@i_comision_tot"
                PMSetValorReverso CantChq, "@i_cant_cheques"
                PMSetValorReverso Loc, "@i_cheque"
                PMSetValorReverso efe, "@i_efectivo"
                PMSetValorReverso Pago_Val, "@i_total"
                PMSetValorReverso Cta, "@i_cuenta"
                PMSetValorReverso CboTipCta, "@i_tipo_cta"
                PMSetValorReverso valor, "@i_subtotal"
                PMSetValorReverso txtregional, "@i_referencia_aux"
                PMSetValorReverso Total, "@i_total_val"
                PMSetValorReverso Nombre, "@i_nombre_suscrip"
                PMSetValorReverso txt_fecha_emision, "@i_referencia"
                PMSetValorReverso txthorario, "@i_cuenta_utpl"
                VLCta_com = txthorario
                txthorario.Text = ""
                PMSetValorReverso txthorario, "@i_codigo_bco"
                VLCodBanco = txthorario
                txthorario.Text = ""
'                PMSetValorReverso txthorario, "@o_pid_pago"
'                VLSsn = txthorario
'                txthorario.Text = ""
                SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
            End If
            If Trim(Servicio) = "5" And (Trim(Empresa) = "6087" Or Trim(Empresa) = "1125") Then   'RecaudacionEducacion 'Ref17
                Me.Height = 6705
                lblValor(2).Visible = True
                lblValor(2).Caption = "Total Pagado: "
                Total_Pagar.Visible = True
                Pago_Val.Enabled = False 'Ref17
                Me.Pago_Val.Top = 4365
                Minimo.Visible = False
                Ref.MaxLength = 10
                Ref.Width = "1700"
                Ref.Enabled = False
                bitmap.Visible = False
                ImgStrech.Visible = False
                valor.Visible = False
                Proceso.Visible = False
                sal_serpac.Visible = False
                serpac.Visible = False
                sal_proc.Visible = False
                txt_fecha_emision.Visible = True
                txt_fecha_emision.Width = "3200"
                txt_fecha_emision.Left = "1250"
                lblValor(13).Visible = True
                lblValor(13).Caption = "Referencia:"
                If VGTipoEjecucion% = CGReverso% Then
                    Me.CboTipo.Clear
                    Me.CboTipo.AddItem "Identificacion"
                    Me.CboTipo.AddItem "Código estudiante"
                    Me.CboTipo.ListIndex = 0
                    CboTipo.TabIndex = 1
                End If
                CboTipo.Visible = True
                CboTipo.Width = "1700"
                CboTipo.Top = "180"
                CboTipo.Enabled = False
                PMSetValorReverso Sal_Emp, "@i_empname"
                Fragua.Caption = "              PAGO A " & Sal_Emp
                PMSetValorReverso txthorario, "@i_tipoConsulta"
                If Trim(txthorario) = 1 Then
                    CboTipo.ListIndex = 0
                Else
                    CboTipo.ListIndex = 1
            End If
                txthorario.Text = ""
                PMSetValorReverso Ref, "@i_codigo"
                PMSetValorReverso Total_Pagar, "@i_saldo"
                PMSetValorReverso txthorario, "@i_comision_efe"
                VLEfe_com = txthorario.Text
                txthorario.Text = ""
                PMSetValorReverso txthorario, "@i_comision_chq"
                VLChq_com = txthorario.Text
                txthorario.Text = ""
                PMSetValorReverso Debito, "@i_debito"
                PMSetValorReverso txthorario, "@i_comision_db"
                VLDeb_com = txthorario.Text
                txthorario.Text = ""
                VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
                Comision = VLTotCom
                PMSetValorReverso Comision, "@i_comision_tot"
                PMSetValorReverso CantChq, "@i_cant_cheques"
                PMSetValorReverso Loc, "@i_cheque"
                PMSetValorReverso efe, "@i_efectivo"
                PMSetValorReverso Pago_Val, "@i_total"
                PMSetValorReverso Cta, "@i_cuenta"
                PMSetValorReverso CboTipCta, "@i_tipo_cta"
                PMSetValorReverso valor, "@i_subtotal"
                PMSetValorReverso txtregional, "@i_referencia_aux"
                PMSetValorReverso Total, "@i_total_val"
                PMSetValorReverso Nombre, "@i_nombre_suscrip"
                PMSetValorReverso txt_fecha_emision, "@i_referencia"
                VLCta_com = txthorario
                txthorario.Text = ""
                PMSetValorReverso txthorario, "@i_codigo_bco"
                VLCodBanco = txthorario
                txthorario.Text = ""
                VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
                Comision = VLTotCom
                SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com)
                
                'PMSetValorReverso CboTipCta, "@i_tipo_cta"
                VLTipCta_com = CboTipCta.Text
                'PMSetValorReverso Cta, "@i_cuenta"
                VLCta_com = Cta.Text
            End If
            

            If (Servicio = 1 And Empresa = 1707) Or (Servicio = 2 And Empresa = 1708) Then 'ANBE
              VLMTop = True
              PLCambiaForma 2
            End If
            If Servicio.Text = "8" And Trim(Empresa.Text) = "1089" Then          'JPM Megadatos
              lblCol(0).Visible = False:    Proceso.Visible = False:   sal_proc.Visible = False
              PMSetValorReverso txtfactura, "@o_codautorizador"

              txtfactura.Tag = txtfactura.Text
              PMSetValorReverso txtfactura, "@i_contrato"
              txtfactura.Visible = True:    txtfactura.Left = 960:
              lblValor(14).Top = txt_fecha_emision.Top:       lblValor(14).Left = lblValor(4).Left:       lblValor(14).Visible = True
              txtfactura.Top = txt_fecha_emision.Top + 25:    txtfactura.Width = Comision.Width:          txtfactura.Visible = True
              lblValor(14).Caption = "Contrato:":             lblCol(0).Visible = False:                  Proceso.Visible = False:   sal_proc.Visible = False
            End If                                        '<-- JPM Megadatos
            vlOpcion = "P"
        End If
    End If
End Sub

Sub FormaEmelmanabi()
    If Empresa = 1719 And Servicio = 3 Then
        'Para empresa EMELMANABI oculto los siguiente controles
        'Campos de Comprob Ret  & Valor Ret
        Label1(0).Visible = False
        Comprob.Visible = False
        Label1(1).Visible = False
        Reten.Visible = False
        
        'Campo Total a Pagar
        ValPago.Visible = False
        Pago_Val.Visible = False
        
        'Campo Servicio
        Me.lblValor(0).Visible = True
        Me.valor.Visible = True
        Me.lblValor(0).Top = 3720
        Me.lblValor(0).Left = 75
        Me.lblValor(0).Height = 195
        Me.lblValor(0).Width = 1230
        Me.valor.Top = 3675
        Me.valor.Left = 1365
        Me.valor.Height = 285
        Me.valor.Width = 3090
        
        'Campo Comision
        Me.lblValor(6).Top = 4050
        Me.lblValor(6).Left = 75
        Me.lblValor(6).Height = 195
        Me.lblValor(6).Width = 1230
        Me.Comision.Top = 4005
        Me.Comision.Left = 1365
        Me.Comision.Height = 285
        Me.Comision.Width = 3090
        
        'Campo Total a Pagar
        Me.lblValor(7).Top = 4440
        Me.lblValor(7).Left = 75
        Me.lblValor(7).Height = 195
        Me.lblValor(7).Width = 840
        Me.Total.Top = 4395
        Me.Total.Left = 1365
        Me.Total.Height = 285
        Me.Total.Width = 3090
        Me.lblValor(7).Caption = "Total a Pagar: "
        
        'Campo Fecha Emision
        Me.lblValor(8).Visible = True
        Me.txt_fecha_emision.Visible = True
        Me.txt_fecha_emision.Left = 1365
        
        'Campo Nombre
        Me.Nombre.Left = 1365
        
    Else
        'Dejo los controles de la forma standard
        'Campos de Comprob Ret  & Valor Ret
        Label1(0).Visible = True
        Comprob.Visible = True
        Label1(1).Visible = True
        Reten.Visible = True
        
        'Campo Total a Pagar
        ValPago.Visible = True
        Pago_Val.Visible = True
        
        'Campo Servicio
        Me.lblValor(0).Visible = False
        Me.valor.Visible = False
        Me.lblValor(0).Top = 4440
        Me.lblValor(0).Left = 2115
        Me.lblValor(0).Height = 195
        Me.lblValor(0).Width = 960
        Me.valor.Top = 4395
        Me.valor.Left = 3060
        Me.valor.Height = 285
        Me.valor.Width = 1395
        
        'Campo Comision
        Me.lblValor(6).Top = 4740
        Me.lblValor(6).Left = 75
        Me.lblValor(6).Height = 195
        Me.lblValor(6).Width = 825
        Me.Comision.Top = 4695
        Me.Comision.Left = 960
        Me.Comision.Height = 285
        Me.Comision.Width = 1110
        
        'Campo Total a Pagar
        Me.lblValor(7).Top = 4740
        Me.lblValor(7).Left = 2115
        Me.lblValor(7).Height = 195
        Me.lblValor(7).Width = 510
        Me.Total.Top = 4695
        Me.Total.Left = 3075
        Me.Total.Height = 285
        Me.Total.Width = 1395
        Me.lblValor(7).Caption = "Total : "
        
        'Campo Fecha Emision
        Me.lblValor(8).Visible = False
        Me.txt_fecha_emision.Visible = False
        
        'Campo Nombre
        Me.Nombre.Left = 960
    End If
    
End Sub

Private Sub Form_Unload(Cancel As Integer)
    SGEmpresa = "" 'ref14 vmirandt
    PMCerrarForma "51"
    lectoraBill.Limpiar     'JPM lectora de billetes
End Sub

Sub Efe_Change()
    VLCambio% = True
    'GAMC - 18/04/2008 - INI
    'SOAT
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "862" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'GAMC - 18/04/2008 - FIN
    'TC - 07/10/2009 - INI
    'PORTA
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "118" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'TC - 07/10/2009 - FIN
    If Trim(Servicio.Text) = "7" And Trim$(Empresa.Text) = "5488" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "8090" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'TC 01/21/2010 DEPRATI
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "115" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'TC 01/21/2010 DEPRATI
    'TRIPLE ORO
    If Trim(Servicio.Text) = "2" And Trim$(Empresa.Text) = "114" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'TC - 17/02/2010 - FIN
    
    'GAMC - 02/16/2012 - MARGLOBAL - INI
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "451" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'GAMC - 02/16/2012 - MARGLOBAL - INI
    
    'DAPV/03022012/CNEL -INI
    If Trim(Servicio.Text) = "3" And Trim$(VGEmpGrupo) = "S" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text 'ref15 'ref16
    End If
    'DAPV/03022012/CNEL -FIN
 
    'msilvag Inicio SGC00007024
    If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1371" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin
    
    'msilvag Inicio SGC00007264 Abril-3-2013
    '(Trim(Empresa) = "1" Or Trim(Empresa) = "2" Or Trim(Empresa) = "1127" Or Trim(Empresa) = "1330")
    If Trim(Servicio.Text) = "2" And (Trim$(Empresa.Text) = "360" Or Trim$(Empresa.Text) = "6" Or Trim$(Empresa.Text) = "4") Then
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin SGC00007264
    
'    'DAPV/02182013/CNTMOVIL -INI
'    If Trim(Servicio.Text) = "1" And Trim(Proceso.Text) = "5482" Then
'        Total.Text = FMCCurATX(Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
'        Pago_Val.Text = FMCCurATX(Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
'    End If
'      'DAPV/02182013/CNTMOVIL -FIN

    If Trim(Servicio.Text) = "5" And (Trim$(Empresa.Text) = "8521" Or Trim$(Empresa.Text) = "5994") Then   'CONECEL TVS dpereirv  'ECUTEL dpereirv
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'JPM Megadatos -->
    If Trim(Servicio.Text) = "8" And Trim$(Empresa.Text) = "1089" Then
        Total_Pagar.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text)
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    '<-- JPM Megadatos
    '<Ref11 Empresas MEER
    If Trim(Servicio.Text) = "3" And VLEmpresaMeer = "S" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text 'ref15 'ref16
    End If
    '<Fin Ref11 Empresas MEER
    
    'ariofria Interagua Ini
    If Trim(Servicio.Text) = "2" And Trim$(Empresa.Text) = "361" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) 'dpereirv 08312017
    End If
    'ariofria Interagua finw

        '<-- RecaudacionEducacion
    If Trim(Servicio.Text) = "5" And (Trim$(Empresa.Text) = "6087" Or Trim$(Empresa.Text) = "1125") Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) 'Ref17
    End If
    'RecaudacionEducacion -->
    
    'msilvag Belcorp RECA-CC-SGC00032726
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "7256" Then
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Debito.Text)
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Debito.Text) + CCur(Comision.Text)
    End If
    'msilvag Fin

    'msilvag Inicio MGLOB MARGLOBLAL
    If Trim(Servicio.Text) = "9" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) '+ Comision.Text
    End If
    'msilvag Fin

End Sub

Sub Loc_Change()
    VLCambio% = True
    'GAMC - 18/04/2008 - INI
    'SOAT
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "862" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'GAMC - 18/04/2008 - FIN
   'TC - 07/10/2009 - INI
    'PORTA
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "118" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    If Trim(Servicio.Text) = "7" And Trim$(Empresa.Text) = "5488" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "8090" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'TC - 07/10/2009 - FIN
    'TC 01/21/2010 DEPRATI
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "115" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'TC 01/21/2010 DEPRATI
    'TRIPLE ORO
    If Trim(Servicio.Text) = "2" And Trim$(Empresa.Text) = "114" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'TC - 17/02/2010 - FIN
    'GAMC - 02/16/2012 - MARGLOBAL - INI
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "451" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'GAMC - 02/16/2012 - MARGLOBAL - INI
    
    'DAPV/03022012/CNEL - INI
    If Trim(Servicio.Text) = "3" And Trim$(VGEmpGrupo) = "S" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'DAPV/03022012/CNEL - FIN
    'Ref11 Empresas MEER
    If Trim(Servicio.Text) = "3" And VLEmpresaMeer = "S" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text 'ref15 'ref16
    End If
    'Fin Ref11>
    
    'msilvag Inicio SGC00007024
    If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1371" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin
    
    'msilvag Inicio SGC00007264 Abril-3-2013
    If Trim(Servicio.Text) = "2" And (Trim$(Empresa.Text) = "360" Or Trim$(Empresa.Text) = "6" Or Trim$(Empresa.Text) = "4") Then
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin SGC00007264
    
    'DAPV/02182013/CNTMOVIL -INI
'    If Trim(Servicio.Text) = "1" And Trim(Proceso.Text) = "5482" Then
'        Total.Text = FMCCurATX(Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
'        Pago_Val.Text = FMCCurATX(Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
'    End If
    'DAPV/02182013/CNTMOVIL -FIN

    If Trim(Servicio.Text) = "5" And (Trim$(Empresa.Text) = "8521" Or Trim$(Empresa.Text) = "5994") Then   'CONECEL TVS dpereirv  'ECUTEL dpereirv
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'JPM Megadatos -->
    If Trim(Servicio.Text) = "8" And Trim$(Empresa.Text) = "1089" Then
        Total_Pagar.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text)
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    '<-- JPM Megadatos
     'ariofria Interagua Ini
    If Trim(Servicio.Text) = "2" And Trim$(Empresa.Text) = "361" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
         Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) 'dpereirv 08312017
    End If
    'ariofria Interagua fin
    
    'msilvag Inicio MGLOB MARGLOBLAL
    If Trim(Servicio.Text) = "9" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) '+ Comision.Text
    End If
    'msilvag Fin
    
        'RecaudacionEducacion -->
    If Trim(Servicio.Text) = "5" And (Trim$(Empresa.Text) = "6087" Or Trim$(Empresa.Text) = "1125") Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) 'Ref17
    End If
    'RecaudacionEducacion -->

End Sub

'-->hy-categ
Private Sub Pago_Val_Change()
    If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1" Then
        Total.Text = FMCCurATX(Pago_Val.Text) + FMCCurATX(Comision.Text)
    End If
End Sub
'<--hy-categ

Private Sub Pago_Val_KeyPress(KeyAscii As Integer)
    '/*JPM 08122204*/
    If KeyAscii = 13 Then SendKeys "{TAB}"
End Sub

Private Sub Proceso_KeyPress(KeyAscii As Integer)
 'DAPV/03012012/CNEL
    If (Trim(Servicio) = "3" Or Trim(Servicio) = "1") And Trim(VGEmpGrupo) = "S" Then
        If Not (KeyAscii >= 48 And KeyAscii <= 57 Or KeyAscii = 8) Then
            KeyAscii = 0
        End If
    End If
    'DAPV/03012012/CNEL
End Sub

Private Sub Proceso_LostFocus()
'ini cmeg 09Nov2005
If Trim(Servicio.Text) = "4" Then
    PLTraeNombreProceso
End If
'fin cmeg 09Nov2005

If Trim(Empresa.Text) = "5479" And Trim(Proceso.Text) <> "" Then  'CNT MOVIL
    Proceso.Text = CInt(Proceso.Text)
End If

If Trim(Proceso.Text) <> "" And Me.cbo_tipo2.ListIndex <> 0 Then    'DAPV/02092012/CNEL
    'If Trim(Servicio.Text) = "3" Then
    If Trim(Servicio.Text) = "3" Or Trim(Servicio.Text) = "1" Then 'DAPV CNT-MOVIL 09NOV2012
        If Trim(VGEmpGrupo) = "S" And VLCambio% = True And (VGTipoEjecucion% <> CGReverso%) Then
            VLCodReg = "0"
            VLRucCNEL = ""
            Comision = 0
            
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "43291", "Trn", ""
            PMPasoValoresATX VGSqlConn, "@i_modo", 0, SQLINT2, "1", "Modo", ""
            PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Trim(Proceso.Text), "Empresa", ""
            PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
            
            If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_regionales_grp", True, "Consulta Ok", "S", "N", "N", "51", "S", "S") = True Then
                
                ReDim VTArreglo2(30) As String
                vtr% = FMMapeaArreglo(VGSqlConn&, VTArreglo2())
                sal_proc = VTArreglo2(1)
                VLCodReg = VTArreglo2(2)
                VLRubroCNEL = VTArreglo2(3)
                Comision = VTArreglo2(4)
                VLRucCNEL = VTArreglo2(5)
                VLFechaContEmp = VTArreglo2(6)
                VlbaseImp = VTArreglo2(8) 'dpereirv
                VLiva = VTArreglo2(9) 'dpereirv
                PMChequeaATX VGSqlConn
                
                 'LBP Inicio RECA-CC-SGC00025869
                 If Comision.Text > 0 Then
                    VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
                    If VGCom_aux <> CDbl(Comision.Text) Then
                        VGComision_original = Comision.Text
                        Comision.Text = VGCom_aux
                    Else
                        VGComision_original = Comision.Text
                    End If
                 End If
                'LBP Fin RECA-CC-SGC00025869
                
                If CCur(Comision.Text) > 0 Then
                    Comision.Enabled = True
                    Total.Text = FMCCurATX(Comision.Text)
                End If
                VLCambio% = False
                
                If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
                    If Trim(Proceso.Text) = "5482" Then
                        lblCobAlum.Caption = "Nro. Celular:"
                        serpac.Text = ""
                        serpac.Visible = False
                        sal_serpac.Visible = False
                        lblCol(5).Visible = False
                        Ref.Top = 650
                        Me.lblCobAlum.Top = 650
                        Me.Fragua.Height = 1100
                        Ref.SetFocus
                    Else
                        lblCobAlum.Caption = "Telefono:"
                        serpac.Visible = True
                        sal_serpac.Visible = True
                        lblCol(5).Visible = True
                        Ref.Top = 820
                        Me.lblCobAlum.Top = 870
                        Me.Fragua.Height = 1200
                        serpac.SetFocus
                    End If
                End If
             Else
                PMChequeaATX VGSqlConn
                VLCodReg = "0"
                VLRubroCNEL = ""
                VLRucCNEL = ""
                VLFechaContEmp = Format$(Date, "yyyymmdd")
                Proceso.SetFocus
             End If
             PMFinTransaccion
        End If
    End If
End If

 If (VGTipoEjecucion% = CGReverso%) Then
    If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
       If Trim(Proceso.Text) = "5482" Then
           lblCobAlum.Caption = "Nro. Celular:"
           serpac.Text = ""
           serpac.Visible = False
           sal_serpac.Visible = False
           lblCol(5).Visible = False
           Ref.Top = 650
           Me.lblCobAlum.Top = 650
           Me.Fragua.Height = 1100
'           Ref.SetFocus
       Else
           lblCobAlum.Caption = "Telefono:"
           serpac.Visible = True
           sal_serpac.Visible = True
           lblCol(5).Visible = True
           Ref.Top = 820
           Me.lblCobAlum.Top = 870
           Me.Fragua.Height = 1200
'           serpac.SetFocus
       End If
    End If
  End If
End Sub

Sub Ref_Change()
    VLCambio% = True
End Sub

Sub Debito_Change()
    VLCambio% = True
    'GAMC - 18/04/2008 - INI
    'SOAT
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "862" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'GAMC - 18/04/2008 - FIN
   'TC - 07/10/2009 - INI
    'PORTA
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "118" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    If Trim(Servicio.Text) = "7" And Trim$(Empresa.Text) = "5488" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
   'TC - 07/10/2009 - FIN
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "8090" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'TC 01/21/2010 DEPRATI
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "115" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'TC 01/21/2010 DEPRATI
    'TRIPLE ORO
    If Trim(Servicio.Text) = "2" And Trim$(Empresa.Text) = "114" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'TC - 17/02/2010 - FIN
    'GAMC - 02/16/2012 - MARGLOBAL - INI
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "451" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'GAMC - 02/16/2012 - MARGLOBAL - INI

        'DAPV/03022012/CNEL
    If Trim(Servicio.Text) = "3" And Trim$(VGEmpGrupo) = "S" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'DAPV/03022012/CNEL
    'GAMC - 18/04/2008 - INI
    'SOAT
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "862" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    
    'msilvag Inicio SGC00007024
    If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1371" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin
    
    'msilvag Inicio SGC00007264 Abril-3-2013 Comision de Agua
    If Trim(Servicio.Text) = "2" And (Trim$(Empresa.Text) = "360" Or Trim$(Empresa.Text) = "6" Or Trim$(Empresa.Text) = "4") Then
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin SGC00007264
    
    'DAPV/02182013/CNTMOVIL -INI
'    If Trim(Servicio.Text) = "1" And Trim(Proceso.Text) = "5482" Then
'        Total.Text = FMCCurATX(Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
'        Pago_Val.Text = FMCCurATX(Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
'    End If
    'DAPV/02182013/CNTMOVIL -FIN
    
    If Trim(Servicio.Text) = "5" And (Trim$(Empresa.Text) = "8521" Or Trim$(Empresa.Text) = "5994") Then   'CONECEL TVS dpereirv  'ECUTEL dpereirv
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'JPM Megadatos -->
    If Trim(Servicio.Text) = "8" And Trim$(Empresa.Text) = "1089" Then
        Total_Pagar.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text)
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    '<-- JPM Megadatos
    'ariofria Interagua Ini
    If Trim(Servicio.Text) = "2" And Trim$(Empresa.Text) = "361" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
         Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) 'dpereirv 08312017
    End If
    'ariofria Interagua fin

        'RecaudacionEducacion -->
    If Trim(Servicio.Text) = "5" And (Trim$(Empresa.Text) = "6087" Or Trim$(Empresa.Text) = "1125") Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) 'Ref17
    End If
    'RecaudacionEducacion -->
    
     'ref15 Ini
    If Trim(Servicio.Text) = "3" And VLEmpresaMeer = "S" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text 'ref16
    End If
    'ref15 Fin
    
    'msilvag Belcorp RECA-CC-SGC00032726
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "7256" Then
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Debito.Text)
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Debito.Text) + CCur(Comision.Text)
    End If
    'msilvag Fin
    
    'msilvag Inicio MGLOB MARGLOBLAL
    If Trim(Servicio.Text) = "9" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) '+ Comision.Text
    End If
    'msilvag Fin
    
End Sub



Private Sub Ref_KeyPress(KeyAscii As Integer)
    'lfcm 03-enero-2008
    If Me.Servicio.Text = "6" Then
        If Not (KeyAscii >= 48 And KeyAscii <= 57 Or KeyAscii = 8) Then
            KeyAscii = 0
        End If
    End If
    'lfcm 03-enero-2008
    'tc 12-octubre-2009
    If Trim(Servicio) = "5" And Trim(Empresa) = "118" Then
        If Not (KeyAscii >= 48 And KeyAscii <= 57 Or KeyAscii = 8) Then
            KeyAscii = 0
        End If
    End If
    'tc 12-octubre-2009
    
    If Trim(Servicio) = "7" And Trim(Empresa) = "5488" Then
        If Not (KeyAscii >= 48 And KeyAscii <= 57 Or KeyAscii = 8) Then
            KeyAscii = 0
        End If
    End If
    
    If Trim(Servicio) = "5" And Trim(Empresa) = "8090" Then
        If Not (KeyAscii >= 48 And KeyAscii <= 57 Or KeyAscii = 8) Then
            KeyAscii = 0
        End If
    End If

    ' SMERINO BELCORP  RECA-CC-SGC00032726
    If Trim(Servicio) = "5" And Trim(Empresa) = "7256" Then
'        If Not (KeyAscii >= 48 And KeyAscii <= 57 Or KeyAscii = 8) Then
'                KeyAscii = 0
'        End If
        If (KeyAscii <> 8) And ((KeyAscii < 65) Or (KeyAscii > 90)) Then
            If (KeyAscii <> 8) And ((KeyAscii < 48) Or (KeyAscii > 57)) Then
                KeyAscii = 0
            End If
        End If
        KeyAscii = Asc(UCase$(Chr$(KeyAscii)))
    End If
    
    
    'DAPV/03012012/CNEL
    If Trim(Servicio) = "3" And Trim(VGEmpGrupo) = "S" Then
        If Not (KeyAscii >= 48 And KeyAscii <= 57 Or KeyAscii = 8) Then
            KeyAscii = 0
        End If
    End If
    'DAPV/03012012/CNEL

     'ariofria
     If Trim(Servicio) = "2" And Trim(Empresa) = "361" Then
        If Not (KeyAscii >= 48 And KeyAscii <= 57 Or KeyAscii = 8) Then
            KeyAscii = 0
        End If
    End If

        'RecaudacionEducacion
    If Trim(Servicio) = "5" And (Trim(Empresa) = "6087" Or Trim$(Empresa.Text) = "1125") Then
        If Not (KeyAscii >= 48 And KeyAscii <= 57 Or KeyAscii = 8) Then
            KeyAscii = 0
        End If
    End If

        'dolayas AMAGUA INI AMAGUA-AP-SGC00028642
     If Trim(Servicio) = "2" And Trim(Empresa) = "6" Then
        If Not (KeyAscii >= 48 And KeyAscii <= 57 Or KeyAscii = 8) Then
            KeyAscii = 0
        End If
    End If
    'dolayas AMAGUA FIN AMAGUA-AP-SGC00028642

End Sub

Private Sub Ref_LostFocus()
    If Servicio <> "6" Then 'smerino new tvcable
      If Empresa.Text = "" Then
        Ref.Clear
        If Servicio.Enabled Then
            Servicio.SetFocus
        End If
    End If
    End If
    
End Sub

Sub Reten_Change()
    VLCambio% = True
End Sub

Private Sub Cta_Change()
    VLCambio% = True
    VLfirma = False
End Sub

Private Sub Pago_Val_GotFocus()
    FPrincipal!pnlHelpLine.Caption = "Ingrese el Valor Total del pago"
End Sub

Private Sub Efe_GotFocus()
If VLVerde <> "S" Then
    FPrincipal!pnlHelpLine.Caption = "Ingrese el Valor en Efectivo"
    'Sumadora ----->
    If SGActivaSum = False Then
'        'JPM lectora de billetes -->
'        If txtCedula.Text <> "" Then
'          VGDatPersBillAltDen.nIdDep = txtCedula.Text
'          If cboTipoId.ListIndex = 0 Then
'            VGDatPersBillAltDen.tIdDep = "C"
'          ElseIf cboTipoId.ListIndex = 1 Then
'            VGDatPersBillAltDen.tIdDep = "R"
'          End If
'          VGDatPersBillAltDen.tIdDep = Mid(cboTipoId.Text, 1, 1)
'          VGDatPersBillAltDen.nomDep = Nombre.Text
'        End If
'        '<-- JPM lectora de billetes
FSumIng.abrirAltaDenominacion = True
        PMIngresoEfectivo
'        'JPM lectora de billetes -->
'        If VGDatPersBillAltDen.nIdDep <> "" Then
'          Select Case VGDatPersBillAltDen.tIdDep
'            Case "C":  cboTipoId.ListIndex = 0
'            Case "R":  cboTipoId.ListIndex = 1
'          End Select
'          txtCedula.Text = VGDatPersBillAltDen.nIdDep
'          'Nombre.Text = VGDatPersBillAltDen.nomDep
'          Txtcedula_LostFocus
'        Else
'          cedula.Text = "":   Nombre.Caption = ""
'        End If
'        '<-- JPM lectora de billetes
        efe.Text = Format$(SGUsar, "####,###,##0.00")
        SGActual = 0
    Else
        SGActivaSum = False
    End If
    '<-------
    End If
End Sub

Sub Loc_GotFocus()
    FPrincipal!pnlHelpLine.Caption = "Ingrese el Valor en Cheque"
End Sub

Sub Ref_GotFocus()
    FPrincipal!pnlHelpLine.Caption = "Ingrese la Referencia"
End Sub

Sub Debito_GotFocus()
    FPrincipal!pnlHelpLine.Caption = "Ingrese el Valor del Debito"
End Sub

Sub Reten_GotFocus()
    FPrincipal!pnlHelpLine.Caption = "Ingrese el Valor de la Retencion"
End Sub

Private Sub CboTipCta_GotFocus()
    FPrincipal!pnlHelpLine.Caption = "CTE|Cta Corrientes,  AHO|Cta de Ahorros"
End Sub

Private Sub Cta_GotFocus()
    FPrincipal!pnlHelpLine.Caption = Cta.HelpLine
End Sub

Private Sub Empresa_GotFocus()
    'ini cmeg 09Nov2005
    Set Empresa.Connection = VGMap
    If Trim(Me.Servicio.Text) <> "4" Then
        Set Proceso.Connection = VGMap
    Else
        Set Proceso.Connection = Nothing
    End If
    'fin cmeg 09Nov2005
    FPrincipal!pnlHelpLine.Caption = "Ingrese el Codigo de Empresa"
End Sub

Sub Efe_KeyPress(KeyAscii As Integer)
    KeyAscii = FMValidarNumero((efe.Text), VGLongitudMoney, KeyAscii, "51")
End Sub

Sub Loc_KeyPress(KeyAscii As Integer)
    KeyAscii = FMValidarNumero((Loc.Text), VGLongitudMoney, KeyAscii, "51")
End Sub

Sub Debito_KeyPress(KeyAscii As Integer)
    KeyAscii = FMValidarNumero((Debito.Text), VGLongitudMoney, KeyAscii, "51")
End Sub

Sub Reten_KeyPress(KeyAscii As Integer)
    KeyAscii = FMValidarNumero((Reten.Text), VGLongitudMoney, KeyAscii, "51")
End Sub

Private Sub Pago_Val_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    'Case CGTeclaENTER%
        'SendKeys "{TAB}"
    Case CGTeclaUP%, CGTeclaREPAG%
        SendKeys "+{TAB}"
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    Case CGTeclaSUPR%
        If Pago_Val.Enabled Then
            Pago_Val.Text = ""
        End If
    
    End Select
End Sub

Private Sub CboTipCta_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaENTER%
        SendKeys "{TAB}"
    Case CGTeclaUP%, CGTeclaREPAG%
        SendKeys "+{TAB}"
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        'SendKeys "{TAB}"
        Cta.SetFocus
    End Select
End Sub

Private Sub Cta_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        If Cta.Enabled Then
            Cta.Clear
        End If
    Case CGTeclaUP%, CGTeclaREPAG%
        SendKeys "+{TAB}"
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    End Select
End Sub

Private Sub Efe_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        efe.Text = ""
    Case CGTeclaENTER%
    
     If Trim(Empresa) = "7256" Then  'belcorp
         Me.CboTipCta.SetFocus
        Else
        CantChq.SetFocus
      End If
        
    Case CGTeclaHOME%
        PMCambiarForma Me
    Case CGTeclaUP%, CGTeclaREPAG%
        SendKeys "+{TAB}"
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    End Select
End Sub

Sub Efe_LostFocus()
    'EAS: Evita procesar el lostfocus cuando se carga Sumadora
    
    If SGActivaSum = True Then
        Exit Sub
    End If
    
    If VGDecimales$ = "S" And (FMObtenerDecimales(FMObtenerMonedaForma("51")) > 0) Then
        efe.Text = str(FMCCurATX((efe.Text)) / FMObtenerFactorDecimal(FMObtenerMonedaForma("51")))
    End If
    
    'Sumadora ------>
    If CDbl(efe.Text) <> SGUsar And VLVerde <> "S" Then
        MsgBox "El Monto Efetivo No coincide con el Monto desglosado para el Deposito. Verificar", vbCritical, "Mensaje del Sistema"
        PMIngresoEfectivo
        efe.Text = Format$(SGUsar, "####,###,##0.00")
        SGActual = 0
    End If
    SGActivaSum = False
    '<------
    
    'GAMC - 18/04/2008 - INI
    'SOAT
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "862" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'GAMC - 18/04/2008 - FIN
    
    'DAPV/03022012/CNEL
    If Trim(Servicio.Text) = "3" And Trim$(VGEmpGrupo) = "S" Then
        'Total.Text = FMCCurATX(Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'DAPV/03022012/CNEL
    
    'msilvag Inicio SGC00007024
    If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1371" Then
        'Total.Text = FMCCurATX(Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin
    
    'msilvag Inicio SGC00007264 Abril-3-2013
    If Trim(Servicio.Text) = "2" And (Trim$(Empresa.Text) = "360" Or Trim$(Empresa.Text) = "6" Or Trim$(Empresa.Text) = "4") Then
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin SGC00007264
    
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "8521" Then  'ECUTEL dpereirv
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    
    'msilvag Belcorp RECA-CC-SGC00032726
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "7256" Then
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Debito.Text)
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Debito.Text) + CCur(Comision.Text)
    End If
    'msilvag Fin
    
    'msilvag Inicio MGLOB MARGLOBLAL
    If Trim(Servicio.Text) = "9" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) '+ Comision.Text
    End If
    'msilvag Fin
    
End Sub

Sub Loc_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        Loc.Text = ""
    Case CGTeclaENTER%
        SendKeys "{TAB}"
    Case CGTeclaHOME%
        PMCambiarForma Me
    Case CGTeclaUP%, CGTeclaREPAG%
        SendKeys "+{TAB}"
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    End Select
End Sub

Sub Loc_LostFocus()
    If VGDecimales$ = "S" And (FMObtenerDecimales(FMObtenerMonedaForma("51")) > 0) Then
        Loc.Text = str(FMCCurATX((Loc.Text)) / FMObtenerFactorDecimal(FMObtenerMonedaForma("51")))
    End If
    'GAMC - 18/04/2008 - INI
    'SOAT
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "862" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'GAMC - 18/04/2008 - FIN
    
    'DAPV/03022012/CNEL
    If Trim(Servicio.Text) = "3" And Trim$(VGEmpGrupo) = "S" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text 'ref15
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'DAPV/03022012/CNEL
    
    'msilvag Inicio SGC00007024
    If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1371" Then
        'Total.Text = FMCCurATX(Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin
    
    'msilvag Inicio SGC00007264 Abril-3-2013
    If Trim(Servicio.Text) = "2" And (Trim$(Empresa.Text) = "360" Or Trim$(Empresa.Text) = "6" Or Trim$(Empresa.Text) = "4") Then
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin SGC00007264
    
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "8521" Then  'ECUTEL dpereirv
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    
    'ref15 Ini
    If Trim(Servicio.Text) = "3" And VLEmpresaMeer = "S" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text 'ref16
    End If
    'ref15 Fin
    
    'msilvag Inicio MGLOB MARGLOBLAL
    If Trim(Servicio.Text) = "9" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) '+ Comision.Text
    End If
    'msilvag Fin
    
End Sub

Sub Debito_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        Debito.Text = ""
    Case CGTeclaENTER%
        SendKeys "{TAB}"
    Case CGTeclaHOME%
        PMCambiarForma Me
    Case CGTeclaUP%, CGTeclaREPAG%
        SendKeys "+{TAB}"
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    End Select
End Sub

Sub Debito_LostFocus()
    If VGDecimales$ = "S" And (FMObtenerDecimales(FMObtenerMonedaForma("51")) > 0) Then
        Debito.Text = str(FMCCurATX((Debito.Text)) / FMObtenerFactorDecimal(FMObtenerMonedaForma("51")))
    End If
    'GAMC - 18/04/2008 - INI
    'SOAT
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "862" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        'Me.Total_Pagar.SetFocus
    End If
    'GAMC - 18/04/2008 - FIN
    
    'DAPV/03022012/CNEL
    If Trim(Servicio.Text) = "3" And Trim$(VGEmpGrupo) = "S" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'DAPV/03022012/CNEL
    
    'msilvag inicio SGC0007024
    If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1371" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin
    
     'msilvag Inicio SGC00007264 Abril-3-2013
    If Trim(Servicio.Text) = "2" And (Trim$(Empresa.Text) = "360" Or Trim$(Empresa.Text) = "6" Or Trim$(Empresa.Text) = "4") Then
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    'msilvag Fin SGC00007264
    
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "8521" Then  'ECUTEL dpereirv
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
    End If
    
    'ref15 Ini
    If Trim(Servicio.Text) = "3" And VLEmpresaMeer = "S" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) + Comision.Text 'ref16
    End If
    'ref15 Fin
    
    'msilvag Belcorp RECA-CC-SGC00032726
    If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "7256" Then
        Pago_Val.Text = FMCCurATX(efe.Text) + FMCCurATX(Debito.Text)
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Debito.Text) + CCur(Comision.Text)
    End If
    'msilvag Fin
    
    'msilvag Inicio MGLOB MARGLOBLAL
    If Trim(Servicio.Text) = "9" Then
        Total.Text = FMCCurATX(efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Debito.Text) '+ Comision.Text
    End If
    'msilvag Fin
    
End Sub

Sub Reten_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        Reten.Text = ""
    Case CGTeclaENTER%
        SendKeys "{TAB}"
    Case CGTeclaHOME%
        PMCambiarForma Me
    Case CGTeclaUP%, CGTeclaREPAG%
        SendKeys "+{TAB}"
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    End Select
End Sub
    
Sub Reten_LostFocus()
    If VGDecimales$ = "S" And (FMObtenerDecimales(FMObtenerMonedaForma("51")) > 0) Then
        Reten.Text = str(FMCCurATX((Reten.Text)) / FMObtenerFactorDecimal(FMObtenerMonedaForma("51")))
    End If
End Sub

Private Sub Empresa_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        If Empresa.Enabled Then
            Empresa.Clear
        End If
            
    Case CGTeclaHOME%
        PMCambiarForma Me
    Case CGTeclaUP%, CGTeclaREPAG%
        KeyCode = 0
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    'ini cmeg 09Nov2005
    Case vbKeyF5
        If Trim(Servicio.Text) = "4" Then
            Dim vtbusquesaCole As New FCC51BusCol
            vtbusquesaCole.VLTipo = "C"
            vtbusquesaCole.Show vbModal
        End If
    'fin cmeg 09Nov2005
    End Select
End Sub

'ini cmeg 09Nov2005
Public Sub PLTraeNombreColegio()
Dim vtmatrix() As String
Dim vtr As Single
If Trim(Me.Empresa.Text) = "" Then
    Exit Sub
End If
PMInicioTransaccion
PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3232", "Trn", ""
PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "N", "", ""
PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, Trim(Me.Empresa.Text), "Empresa", ""
PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, "0", "Codigo", ""


If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_colegio_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
    'PMMapeaObjetoATX VGSqlConn, Me.Sal_Emp comentado x cmeg 25Marzo2006
    ReDim vtmatrix(2) As String
    vtr = FMMapeaArregloATX(VGSqlConn, vtmatrix())
    
    Me.Sal_Emp.Caption = vtmatrix(1)
    VLModoTrabajo = vtmatrix(2)
    PMChequeaATX VGSqlConn
Else
    Me.Empresa.Text = ""
    Me.Empresa.Enabled = True
    Me.Sal_Emp.Caption = ""
    Me.Empresa.SetFocus
End If
PMFinTransaccion

End Sub
'fin cmeg 09Nov2005

'ini cmeg 09Nov2005
Public Sub PLTraeNombreProceso()
If Trim(Me.Proceso.Text) = "" Then
    Exit Sub
End If
PMInicioTransaccion
PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3232", "Trn", ""
PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "P", "", ""
PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, Trim(Me.Proceso.Text), "Proceso", ""
PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, "1", "Empresa", ""
PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, "0", "Codigo", ""

If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_colegio_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
    PMMapeaObjetoATX VGSqlConn, Me.sal_proc
    PMChequeaATX VGSqlConn
    
Else
    Me.Proceso.Text = ""
    Me.Proceso.Enabled = True
    Me.sal_proc.Caption = ""
    Me.Proceso.SetFocus
End If
PMFinTransaccion

End Sub
'fin cmeg 09Nov2005
Sub PLFactura()
    'ame 08/03/2010
                                    

        '**************************************
    'GAMC - 02AGO10 - GUARDAR FACTURA - INI
    '**************************************
    If Comision.Text > 0 And VLDeb_com = 0# Then     'smerino belcorp cuando la comisión es con debito a cuenta se debe reportar en factura resumen
    Dim fr_secuencia As Long, fr_ssn As Long
    Dim fr_ced_ruc As String, fr_nombre As String, fr_fact_elect As String, fr_pto_estab As String, fr_pto_emis As String, _
        fr_fecha_validez As String, fr_nautorizacion As String, fr_valor As String, fr_iva As String, _
        fr_referencia As String, fr_servicio As String, nro_factura As String, fr_baseImp As String, fr_impresa As String, fr_fecha_ini_vig As String, fr_fecha_fin_vig As String 'SMERINO
    Dim fr_descuento As String, fr_forma_pag As String, fr_porc_compensa As String, fr_porc_iva As String 'LBP RECA-CC-SGC00025869 30/07/2016
    
    fr_ced_ruc = Replace(SGCedula, "_", "")     'Se obtiene de la pantalla de Comision
    fr_nombre = Trim(SGNombre)                  'Se obtiene de la pantalla de Comision
    fr_fact_elect = "S"
    fr_impresa = "S" 'dpereirv
'    fr_valor = Comision.Text
    
    'LBP Inicio RECA-CC-SGC00025869 30/07/2016
    fr_descuento = VGCompensacion
    If fr_descuento > 0 Then
        fr_valor = VGComision_original
        If fr_valor = "0.00" Then
            fr_valor = Comision.Text
        End If
    Else
        fr_valor = Comision.Text 'LBP
    End If
    fr_porc_iva = VGPorcentajeIVA
    fr_forma_pag = VGFormaPago
    fr_porc_compensa = VGPorcentajeComp
    'LBP Fin 30/07/2016'Fin LBP
    
    fr_iva = VLiva    'smerino"0" cambios iva
    fr_baseImp = VlbaseImp 'smerino
    fr_referencia = (Trim(Ref))
    If Trim(Servicio.Text) = "2" And Trim(Empresa.Text) = "8269" Then   'JPM TRB IWS -->
      'fr_servicio = lblAux.Caption
      fr_servicio = "SERVICIOS VARIOS" 'msilvag RECM-311 RECMPS-373
    Else                                                                '<-- JPM TRB IWS
      fr_servicio = Trim(lblservicio.Caption)
    End If                                                              'JPM IWS
    If VGTipoEjecucion% <> CGReverso% Then
       fr_ssn = CLng(SGSecTrn$)
            If FMFacturaRecaudacion("1", fr_secuencia, fr_ssn, fr_ced_ruc, fr_nombre, fr_fact_elect, _
                fr_pto_estab, fr_pto_emis, fr_fecha_validez, fr_nautorizacion, fr_valor, fr_iva, _
                fr_baseImp, fr_impresa, fr_referencia, fr_servicio, nro_factura, fr_fecha_ini_vig, fr_fecha_fin_vig, _
                fr_descuento, fr_forma_pag, fr_porc_compensa, fr_porc_iva) Then    'LBP RECA-CC-SGC00025869 30/07/2016
                'VLautoriSri = fr_nautorizacion
                VLclave_acceso = fr_nautorizacion '--ref14 vmirandt
                VLFecvenSRI = fr_fecha_validez
                VLSerie_Secuencia = nro_factura
                VLfact_elect = fr_fact_elect
                VLFecinivig = fr_fecha_ini_vig  'SMERINO
                VLFecfinvig = fr_fecha_fin_vig  'SMERINO
            End If
    Else
       fr_ssn = CLng(VGSSNCorr)
        VGTipoEjecucion% = CGNormal
        If Not FMFacturaRecaudacion("2", fr_secuencia, fr_ssn, fr_ced_ruc, fr_nombre, fr_fact_elect, _
            fr_pto_estab, fr_pto_emis, fr_fecha_validez, fr_nautorizacion, fr_valor, fr_iva, _
            fr_baseImp, fr_impresa, fr_referencia, fr_servicio, nro_factura, fr_fecha_ini_vig, fr_fecha_fin_vig) Then 'smerino
            MsgBox "ERROR: En reverso de factura: " & CStr(fr_ssn)
        Else
            VLclave_acceso = fr_nautorizacion '--ref14 vmirandt
        End If
        VGTipoEjecucion% = CGReverso
    End If
    End If
    '**************************************
    'GAMC - 02AGO10 - GUARDAR FACTURA - FIN
    '**************************************
End Sub

Private Sub Empresa_LostFocus()
    DoEvents
    If VGTipoEjecucion% <> CGReverso% Then
        VGEmpGrupo = "N" 'DAPV/03232012/CNEL
    End If
    
    
    lblCol(6).Visible = False
    
    If Trim(Empresa.Text) = "" Then 'CNT-MOVIL
        lblCol(1).Visible = True
        Me.Sal_Emp.Visible = True
    Else 'Ref11 Se valida si es empresa MEER
       FEsEmpresaMEER (Empresa.Text)
    End If
    
    'ini cmeg 09Nov2005
    If Trim(Servicio.Text) = "4" Then
        PLTraeNombreColegio
    End If
    'fin cmeg 09Nov2005
    If Trim(Empresa.Text) = "3" Then PLAbonoPacifAct  'ANBE 062207
    '-->hy-19-enero-2007
    If Trim(Servicio) = "6" And Trim(Empresa) <> "" Then
        PMChequea VGSqlConn&
        PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_tvcable_online"
        PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
        PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, Trim$(Empresa.Text)
        If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "") Then
            PMMapeaVariableATX VGSqlConn&, VTDetalles$
            PMChequea VGSqlConn&
            VLTvCableOnline = VTDetalles$
            PMChequea VGSqlConn&
        Else
            VLTvCableOnline = ""
            PMChequea VGSqlConn&
            Exit Sub
        End If
    End If
    '<--hy-19-enero-2007
    
    If Trim(Empresa) <> "" And Trim(Servicio) = "5" And (Trim(Empresa) = "13" Or Trim(Empresa) = "14") Then
        Servicio.Enabled = False
        Empresa.Enabled = False
    
        bitmap.Visible = False
        ImgStrech.Visible = False  'JPM Megadatos
        Fragua.Caption = ""
        efe.Enabled = True      ' habilito controles
        CantChq.Enabled = True
        Loc.Enabled = True
        Reten.Enabled = False
        CboTipCta.Enabled = False
        Cta.Enabled = False
        Comprob.Enabled = False 'RCA 11/Sep/2001
        Debito.Enabled = False
        Ref.Enabled = True
        If SGEmpresa = "1125" Or SGEmpresa = "6087" Then 'Ref17
                Pago_Val.Enabled = False
        Else
                Pago_Val.Enabled = True
        End If
    
        Proceso.TableName = ""
        valor.Enabled = False
        Minimo.Visible = False
        valor.Visible = False
        lblValor(0).Visible = False
        lblValor(2).Visible = False
    ElseIf Trim(Empresa) <> "" Then
        'If Trim(Servicio) = "3" And (Trim(Empresa) = "1" Or Trim(Empresa) = "2" Or Trim(Empresa) = "1127" Or Trim(Empresa) = "1330") Then 'DGA 07SEP2005
        If Trim(Servicio) = "3" Or Trim(Servicio) = "9" Then 'msilvag MGLOB Marglobal '<--- DGA 07/Oct/2005
            Proceso.Enabled = False
            PSEmpGrupo   'DAPV/02102012/CNEL
        End If
        
        Servicio.Enabled = False
        Empresa.Enabled = False
        efe.Enabled = False
        Loc.Enabled = False
        CboTipCta.Enabled = False
        Debito.Enabled = False
        Cta.Enabled = False
        Comprob.Enabled = False 'RCA 11/Sep/2001
        Reten.Enabled = False
        Pago_Val.Enabled = False
        Ref.Enabled = True
    
        Minimo.Enabled = False
        valor.Enabled = False
        
        Ref.Text = ""
        efe.Text = "0.00"
        Loc.Text = "0.00"
        Debito.Text = "0.00"
        Reten.Text = "0.00"
        Pago_Val.Text = "0.00"
        Cta.Text = ""
        Comprob.Text = "" 'RCA 11/Sep/2001
        Nombre.Text = ""
        bitmap.Visible = False
        ImgStrech.Visible = False  'JPM Megadatos
        
        valor.Text = "0.00"
        Minimo.Text = "0.00"
        Fragua.Caption = ""
        lblCol(6).Visible = False 'DAPV/02092012/CNEL
        
        If Trim(Servicio) = "3" And Trim(VGEmpGrupo) = "S" Then  'DAPV/02102012/CNEL
            Me.Height = 6000
            lblCol(6).Visible = True
            Pago_Val.Visible = True
            lblValor(2).Visible = True
            bitmap.Visible = False
            ImgStrech.Visible = False  'JPM Megadatos
            lblCobAlum.Caption = "Codigo: "
            lblCol(5).Visible = False
            Minimo.Visible = True
            Proceso.Visible = True
            Proceso.Enabled = True
            sal_proc.Visible = True
            sal_serpac.Visible = False
            lblCol(0).Visible = False
            DoEvents
            Proceso.SetFocus
            Fragua.Caption = "                          PAGO A " + "CNEL"
        End If
        
        'msilvag Inicio MGLOB Marglobal
        If Trim(Servicio) = "9" And Trim(VGEmpGrupo) = "S" Then
            'Me.Height = 6000
            
            If Trim(VGEmpGrupo) = "S" Then
                lblCol(6).Visible = True
                lblCol(6).Caption = "Grupo Emp:"
                Proceso.Visible = True
                Proceso.Enabled = True
                sal_proc.Visible = True
                Proceso.TableName = "sv_emp_grupo_margl"
            Else
                lblCol(6).Visible = False
                Proceso.Visible = False
                sal_proc.Visible = False
            End If
            
            
            Pago_Val.Visible = True
            lblValor(2).Visible = True
            bitmap.Visible = False
            ImgStrech.Visible = False
            lblCobAlum.Caption = "Codigo: "
            lblCol(5).Visible = False
            Minimo.Visible = True
            
            
            sal_serpac.Visible = False
            lblCol(0).Visible = False
            
            lblCol(3).Visible = False
            lblCol(4).Visible = False
            lblCol(5).Visible = False
            Forma_Pago.Visible = False
            Nombre_oficina.Visible = False
            Minimo.Visible = False
            lblValor(2).Visible = False

            Me.Height = 6500
            Fragua.Caption = "   EMPRESAS GRUPO NAVIERA Y LOGISTICA "
            
            Ref.MaxLength = 15

            
        
            DoEvents
            Proceso.SetFocus
            
        End If
        'msilvag Fin
        
        If Empresa = 1719 And Servicio = 3 Then
            'Para empresa EMELMANABI oculto los siguiente controles
            'Campos de Comprob Ret  & Valor Ret
            Label1(0).Visible = False
            Comprob.Visible = False
            Label1(1).Visible = False
            Reten.Visible = False
            
            'Campo Total a Pagar
            ValPago.Visible = False
            Pago_Val.Visible = False
            
            'Campo Servicio
            Me.lblValor(0).Visible = True
            Me.valor.Visible = True
            Me.lblValor(0).Top = 3720
            Me.lblValor(0).Left = 75
            Me.lblValor(0).Height = 195
            Me.lblValor(0).Width = 1230
            Me.valor.Top = 3675
            Me.valor.Left = 1365
            Me.valor.Height = 285
            Me.valor.Width = 3090
            
            'Campo Comision
            Me.lblValor(6).Top = 4050
            Me.lblValor(6).Left = 75
            Me.lblValor(6).Height = 195
            Me.lblValor(6).Width = 1230
            Me.Comision.Top = 4005
            Me.Comision.Left = 1365
            Me.Comision.Height = 285
            Me.Comision.Width = 3090
            
            'Campo Total a Pagar
            Me.lblValor(7).Top = 4440
            Me.lblValor(7).Left = 75
            Me.lblValor(7).Height = 195
            Me.lblValor(7).Width = 840
            Me.Total.Top = 4395
            Me.Total.Left = 1365
            Me.Total.Height = 285
            Me.Total.Width = 3090
            Me.lblValor(7).Caption = "Total a Pagar: "
            
            'Campo Fecha Emision
            Me.lblValor(8).Visible = True
            Me.txt_fecha_emision.Visible = True
            Me.txt_fecha_emision.Left = 1365
            
            'Campo Nombre
            Me.Nombre.Left = 1365
        ElseIf (Trim(Servicio) = "1" And Trim(Empresa) = "1707") _
        Or (Trim(Servicio) = "2" And Trim(Empresa) = "1708") Then 'ANBE 112406
          VLMTop = True
          PLCambiaForma 2
        'ElseIf (Trim(Servicio) = "1" And Trim(Empresa) = "3" And VLPABOP = "S") Then 'ANBE 062407
        ElseIf (Trim(Servicio) = "1" And Trim(Empresa) = "3" And VLPABOP = "S") Or (Trim(Servicio) = "1" And Trim(Empresa) = "5479") Then     'DAPV CNT-MOVIL 09NOV12
          VLMTop = True  'PACIFICTEL ABONO
                    Select Case Trim(Empresa) 'INI - 'DAPV CNT-MOVIL 09NOV12
            Case 3:
                PLCambiaForma 3
            Case 5479:
                PLAbonoPacifAct
                If (VGTipoEjecucion% <> CGReverso%) Then
                    PSEmpGrupo
                End If
                PLCambiaForma 4
          End Select 'FIN - 'DAPV CNT-MOVIL 09NOV12
          Me.lblValor(2).Visible = False
          Minimo.Visible = False
        'JPM 11/02/2016 -->
        'ElseIf Servicio = "3" And Trim(Empresa) = "144" Then 'ref12 comentado
        ElseIf Servicio = "3" And (Me.Empresa.Text = "90" Or VLEmpresaMeer = "S") Then 'ref12 agregado
          lblValor(14).Top = txt_fecha_emision.Top:       lblValor(14).Left = lblValor(4).Left:       lblValor(14).Visible = True
          txtfactura.Top = txt_fecha_emision.Top + 25:    txtfactura.Width = Comision.Width:          txtfactura.Visible = True
          lblValor(0).Visible = False:                    valor.Visible = False
        '<-- JPM 11/02/2016
        'JPM 14/09/2016 (megadatos) -->
          lblValor(14).Caption = "Facturas pendient.:"
        ElseIf Servicio = "8" And Trim(Empresa) = "1089" Then
           If Trim(parametros("MEGAD", "CTE")) = "N" Or Trim(parametros("MEGAD", "CTE")) = "" Then
            MsgBox ("Servicio no disponible")
            Empresa.Text = ""
            Servicio = ""
            If Servicio.Enabled = True Then Servicio.SetFocus
                Exit Sub
            End If
          lblValor(14).Top = txt_fecha_emision.Top:       lblValor(14).Left = lblValor(4).Left:       lblValor(14).Visible = True
          txtfactura.Top = txt_fecha_emision.Top + 25:    txtfactura.Width = Comision.Width:          txtfactura.Visible = True
          lblValor(0).Visible = False:                    valor.Visible = False:                      sal_serpac.Visible = False
          lblValor(14).Caption = "Contrato:":             lblCol(0).Visible = False:                  Proceso.Visible = False:   sal_proc.Visible = False
        '<-- JPM 14/09/2016 (megadatos)
        Else
            txtfactura.Width = 3500                 'JPM 11/02/2016
            'Dejo los controles de la forma standard
            'Campos de Comprob Ret  & Valor Ret
            Label1(0).Visible = True
            Comprob.Visible = True
            Label1(1).Visible = True
            Reten.Visible = True
            
            'Campo Total a Pagar
            ValPago.Visible = True
            Pago_Val.Visible = True
            
            'Campo Servicio
            If Servicio = "2" And Empresa.Text = "8269" Then      'JPM Interagua TRB -->
              Me.lblValor(0).Visible = True
              Me.valor.Visible = True
            Else                                                  '<-- JPM Interagua TRB
              Me.lblValor(0).Visible = False
              Me.valor.Visible = False
            End If
            Me.lblValor(0).Top = 4440
            Me.lblValor(0).Left = 2115
            Me.lblValor(0).Height = 195
            Me.lblValor(0).Width = 960
            Me.valor.Top = 4395
            Me.valor.Left = 3060
            Me.valor.Height = 285
            Me.valor.Width = 1395
            
            'Campo Comision
            Me.lblValor(6).Top = 4740
            Me.lblValor(6).Left = 75
            Me.lblValor(6).Height = 195
            Me.lblValor(6).Width = 825
            Me.Comision.Top = 4695
            Me.Comision.Left = 960
            Me.Comision.Height = 285
            Me.Comision.Width = 1110
            
            'Campo Total a Pagar
            Me.lblValor(7).Top = 4740
            Me.lblValor(7).Left = 2115
            Me.lblValor(7).Height = 195
            Me.lblValor(7).Width = 510
            Me.Total.Top = 4695
            Me.Total.Left = 3075
            Me.Total.Height = 285
            Me.Total.Width = 1395
            Me.lblValor(7).Caption = "Total : "
            
            'Campo Fecha Emision
            Me.lblValor(8).Visible = False
            Me.txt_fecha_emision.Visible = False
            
            'Campo Nombre
            Me.Nombre.Left = 960
            
        End If
        If Trim(Servicio) <> "3" And Trim(VGEmpGrupo) <> "S" Then  'DAPV/02102012/CNEL
        If bitmap.Visible = False Then
            bitmap.Visible = True
            ImgStrech.Visible = False  'JPM Megadatos
        End If
        End If
        'GAMC - 18/04/2008 - INI
        If Trim(Servicio) = "5" And Trim(Empresa) = "862" Then
            Call Empresa_SOAT("1", 0)
            Call Empresa_SOAT("5", 0)
        End If
        'GAMC - 18/04/2008 - FIN

        If Trim(Servicio) = "5" And (Trim(Empresa) = "118" Or Trim(Empresa) = "8521") Then
            Me.Height = 6705
            lblValor(2).Visible = True
            lblValor(2).Caption = "Total Pagado: "
            Total_Pagar.Visible = True
            Me.Pago_Val.Top = 4365
            Minimo.Visible = False
            Ref.MaxLength = 10 'DAPV
            bitmap.Visible = False
            ImgStrech.Visible = False  'JPM Megadatos
            lblCobAlum.Caption = "No.Celular: "
            lblCol(5).Visible = False
            Proceso.Visible = False
            sal_serpac.Visible = False
            sal_proc.Visible = False
            lblCol(0).Visible = False
            Me.CantChq.MaxLength = 4 'msilvag RECA-CC-SGC00027715
            DoEvents
            'SendKeys "{TAB}"
            Ref.SetFocus
        End If
        'smerino belcorp
        If Trim(Servicio) = "5" And (Trim(Empresa) = "7256") Then
          Me.Height = 6705
          Ref.Top = "400"
           lblCobAlum.Top = "400"
           Proceso.Visible = False
            sal_serpac.Visible = False
            sal_proc.Visible = False
            lblCol(0).Visible = False
            CboTipo.Visible = False
            lblCol(0).Visible = False
            Minimo.Visible = True
            Ref.MaxLength = 15
            bitmap.Visible = False
            ImgStrech.Visible = False  'JPM Megadatos
            lblCobAlum.Caption = "Código: "
            lblCol(5).Visible = False
            txtFechVen.Visible = True
            lblValor(13).Visible = True
            Ref.SetFocus
          End If
        'TC - 17/07/2009 - INI
        If Trim(Servicio) = "5" And Trim(Empresa) = "115" Then       'De Prati lfcm 24-agosto-2009
            Me.Height = 6705
            Label1(1).Visible = False
            txtValDeu.Visible = False
            Label1(0).Visible = False
            Reten.Visible = False
            lblValor(9).Visible = True
            ValMinimo.Visible = True
            lblValor(12).Visible = True
            ValMaximo.Visible = True
            lblValor(2).Visible = False
            Minimo.Visible = False
            Ref.MaxLength = 14 'ame 11/24/2011  7
            DoEvents
            Proceso.SetFocus
        End If
        'TC - 17/07/2009 - FIN
        If Trim(Servicio) = "2" And Trim(Empresa) = "114" Then       'TRIPLEORO tc 12-febrero-2010
            Me.Height = 6705
            lblValor(2).Visible = True
            lblValor(2).Caption = "Total Pagado: "
            Total_Pagar.Visible = True
            Me.Pago_Val.Top = 4365
            Minimo.Visible = False
            bitmap.Visible = False
            ImgStrech.Visible = False  'JPM Megadatos
            lblCobAlum.Caption = "Codigo: "
            lblCol(5).Visible = False
            
            Proceso.Visible = False
            sal_serpac.Visible = False
            sal_proc.Visible = False
            lblCol(0).Visible = False
            DoEvents
            Ref.SetFocus
        End If
        
        
        'If Trim(Empresa) <> "118" Then    'PORTA tc 07-octubre-2009
        If Trim(Empresa) <> "118" And Trim(VGEmpGrupo) <> "S" Then 'DAPV/02102012/CNEL
            Dim VlEmpName() As String, VlFile As String                                       'JPM TRB IWS -->
        
            If Trim(Empresa) = "8269" Or Trim(Empresa) = "1089" Then    'JPM Megadatos
              VlEmpName = Split(Sal_Emp, " ")
              If UBound(VlEmpName) > 0 Then
                VlFile = VlEmpName(0)
              End If
              'JPM Megadatos -->
              If Trim(Empresa) = "1089" Then
                If FMFileExist(VGDirBitmaps$ & "\" & Trim(VlFile) & ".bmp") Then 'RCA 10 SEP. 2001      '    JPM .. antes Sal_Emp, ahora: VlFile
                  ImgStrech.Picture = LoadPicture(VGDirBitmaps$ & "\" & Trim(VlFile) & ".bmp")
                End If
                ImgStrech.Top = bitmap.Top
                ImgStrech.Left = bitmap.Left
                ImgStrech.Height = bitmap.Height
                ImgStrech.Width = bitmap.Width
                ImgStrech.Visible = True
                bitmap.Visible = False
                ImgStrech.Visible = True
              Else
                ImgStrech.Visible = False
                bitmap.Visible = True
              End If
              '<-- JPM Megadatos
            Else
              VlFile = Sal_Emp
            End If
            If FMFileExist(VGDirBitmaps$ & "\" & Trim(VlFile) & ".bmp") Then 'RCA 10 SEP. 2001      '    JPM .. antes Sal_Emp, ahora: VlFile
                bitmap.Picture = LoadPicture(VGDirBitmaps$ & "\" & Trim(VlFile) & ".bmp")           '<-- JPM Interagua TRB.. antes Sal_Emp, ahora: VlFile
            Else
                bitmap.Picture = LoadPicture()
            End If ' RCA 10 SEP. 2001
            Fragua.Caption = "              PAGO A " & Sal_Emp
        End If
        
        
        
        
        If Trim(Servicio) = "5" And Trim(Empresa) = "8521" Then  'ECUTEL 17-mayo-2013
          cboTipoId.Visible = True
          cboTipoId.Enabled = True

          cboTipoId.Clear
          cboTipoId.AddItem "C"
          cboTipoId.AddItem "R"
          cboTipoId.AddItem "P"
          cboTipoId.ListIndex = 0

          cboTipoId.Top = "450"
          cboTipoId.Left = "1100"
          Ref.Top = "400"
          lblCobAlum.Caption = "Codigo:"
          lblCobAlum.Top = "450"
          lblCobAlum.Left = "350"
          cboTipoId.TabIndex = "3"

          cboTipoId.SetFocus
        End If
        
                
                
                
                'msilvag Inicio ETAPA-AP-SGC00018437-SGC00018451
        If (Trim(Servicio) = "1" And Trim(Empresa) = "1707") Or (Trim(Servicio) = "2" And Trim(Empresa) = "1708") Or (Trim(Servicio) = "7" And Trim(Empresa) = "6951") Or (Trim(Servicio) = "8" And Trim(Empresa) = "6952") Then
            Me.Proceso.Enabled = False
            Me.Proceso.Visible = False  'no ver proceso
            lblCol(0).Visible = False
            sal_proc.Visible = False
            'lblCol(3).Visible = False
            'lblCol(4).Visible = False
            'lblCol(5).Visible = False
            'Me.lblCol(6).Visible = False ' descripcion de regional o tipo
            'Me.lblCol(5).Visible = False
            Me.sal_serpac.Visible = False
            Me.lblmensaje.Visible = False
            Me.lblTid.Visible = False
            Me.Minimo.Visible = False
            Me.lblValor(2).Visible = False
            Me.valor.Visible = False
            If FMFileExist(VGDirBitmaps$ & "\" & "ETAPA.jpg") Then 'RCA 10 SEP. 2001
                bitmap.Picture = LoadPicture(VGDirBitmaps$ & "\" & "ETAPA.jpg")
            Else
                bitmap.Picture = LoadPicture()
            End If ' RCA 10 SEP. 2001
            Fragua.Caption = "              PAGO A " & Sal_Emp
        End If
        'msilvag Fin
                
        If Trim(Servicio) = "5" And Trim(Empresa) = "5994" Then  'CONECEL TVS dpereirv
            Me.Height = 6705
            lblValor(2).Visible = True
            lblValor(2).Caption = "Total Pagado: "
            Total_Pagar.Visible = True
            Me.Pago_Val.Top = 4365
            Minimo.Visible = False
            Ref.MaxLength = 20
            bitmap.Visible = False
            ImgStrech.Visible = False     'JPM Megadatos

            lblCol(5).Visible = False
            Proceso.Visible = False
            Proceso.Enabled = False
            sal_serpac.Visible = False
            sal_proc.Visible = False
            lblCol(0).Visible = False
            lblCobAlum.Caption = "Identificación: "
            lblCobAlum.Top = 450
            lblCobAlum.Left = 750
            Ref.Top = 400
            Me.CantChq.MaxLength = 4 'msilvag RECA-CC-SGC00027715
            DoEvents
            Ref.SetFocus
        End If
        If Trim(Servicio) = "7" And Trim(Empresa) = "5488" Then  'dpereirv Directv Postpago
            Proceso.Visible = False
            sal_proc.Visible = False
            sal_serpac.Visible = False
            lblValor(2).Visible = True
            lblValor(2).Caption = "Total Pagado: "
            Total_Pagar.Visible = True
            Me.Pago_Val.Top = 4365
            Minimo.Visible = False
            Ref.Width = "1700"
            txt_fecha_emision.Visible = True
            lblValor(13).Visible = True
            lblValor(13).Caption = "Dirección:"
            CboTipo.Visible = True
            CboTipo.TabIndex = 2
            If VGTipoEjecucion% = CGNormal% Then
                Me.CboTipo.Clear
                Me.CboTipo.AddItem "Identificacion"
                Me.CboTipo.AddItem "Contrato"
                Me.CboTipo.ListIndex = 0
                CboTipo.TabIndex = 1
                CboTipo.SetFocus
            Else
                Me.CboTipo.Enabled = False
            End If
            CboTipo.Width = "1700"
            CboTipo.Top = "180"
        End If
        
                If Trim(Servicio) = "5" And Trim(Empresa) = "8090" Then  'dpereirv UTPL
            Proceso.Visible = False
            sal_proc.Visible = False
            sal_serpac.Visible = False
            lblValor(2).Visible = True
            lblValor(2).Caption = "Total Pagado: "
            Total_Pagar.Visible = True
            Me.Pago_Val.Top = 4365
            Minimo.Visible = False
            Ref.MaxLength = 10
            Ref.Width = "1700"
            txt_fecha_emision.Visible = True
            txt_fecha_emision.Width = "3200"
            txt_fecha_emision.Left = "1250"
            lblValor(13).Visible = True
            lblValor(13).Caption = "Referencia:"
            CboTipo.Visible = True
            CboTipo.TabIndex = 2
            If VGTipoEjecucion% = CGNormal% Then
                Me.CboTipo.Clear
                Me.CboTipo.AddItem "Identificación"
                Me.CboTipo.AddItem "Código estudiante"
                Me.CboTipo.ListIndex = 0
                CboTipo.TabIndex = 1
                CboTipo.SetFocus
            Else
                Me.CboTipo.Enabled = False
            End If
            CboTipo.Width = "1700"
            CboTipo.Top = "180"
        End If
        'JPM 13/Jul/2016 Interaggu TRB -->
        If Trim(Servicio) = "2" And Trim(Empresa) = "8269" Then
            Me.Height = 6705
            lblValor(2).Visible = True
            lblValor(2).Caption = "V.Mínimo: "
            Total_Pagar.Visible = False
            Minimo.Visible = True
            lblCobAlum.Caption = "Código: "
            lblCol(5).Visible = False
            Proceso.Visible = False
            Proceso.Enabled = False
            sal_serpac.Visible = False
            sal_proc.Visible = False
            lblCol(0).Visible = False
            Me.Refresh
            DoEvents
            Ref.SetFocus
        End If
        '<-- JPM 13/Jul/2016 Interagua TRB
      'ariofria Ini
        If Trim(Servicio) = "2" And Trim(Empresa) = "361" Then
            Proceso.TableName = "sv_tipo_proceso"
        End If
        'ariofria Fin
        'DOLAYA RECAUDACIONEDUCACION INI Ref17
        If Trim(Servicio) = "5" And (Trim(Empresa) = "6087" Or Trim$(Empresa.Text) = "1125") Then
            Proceso.Visible = False
            sal_proc.Visible = False
            sal_serpac.Visible = False
            lblValor(2).Visible = True
            lblValor(2).Caption = "Total Pagado: "
            Total_Pagar.Visible = True
            Me.Pago_Val.Top = 4365
            Minimo.Visible = False
            Ref.MaxLength = 10
            Ref.Width = "1700"
            txt_fecha_emision.Visible = True
            txt_fecha_emision.Width = "3200"
            txt_fecha_emision.Left = "1250"
            lblValor(13).Visible = True
            lblValor(13).Caption = "Referencia:"
            CboTipo.Visible = True
            CboTipo.TabIndex = 2
            If VGTipoEjecucion% = CGNormal% Then
                Me.CboTipo.Clear
                Me.CboTipo.AddItem "Identificación"
                Me.CboTipo.AddItem "Código estudiante"
                Me.CboTipo.ListIndex = 0
                CboTipo.TabIndex = 1
                CboTipo.SetFocus
            Else
                Me.CboTipo.Enabled = False

    End If
            CboTipo.Width = "1700"
            CboTipo.Top = "180"

    End If
        'DOLAYA RECAUDACIONEDUCACION FIN
    End If
 
'lgusnayc ref019
    If Trim(Empresa.Text) = "115" Then
      Me.Proceso.Text = "O"
          lblCol(0).Visible = False
      Proceso.Visible = False
      sal_proc.Visible = False
      lblCobAlum.Left = 700
      bitmap.Left = -225
      lblCobAlum.Caption = "Cédula/Tarjeta:"
    Else
      lblCol(0).Visible = True
      Proceso.Visible = True
      sal_proc.Visible = True
      lblCobAlum.Left = 1100
      bitmap.Left = 120
      lblCobAlum.Caption = "Codigo:"
    End If

'lgusnayc ref019

  '<Ref 20
  If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
        CargaInfoadiCV
  End If
  'Ref 20>
End Sub
Private Function parametros(Nemonico As String, Producto As String) As String
Dim VLarregloParametro(30) As String
PMInicioTransaccion
PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, Nemonico
PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, Producto
If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
    VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametro())
    parametros = LTrim(RTrim(Trim(VLarregloParametro(4))))
Else
    parametros = ""
End If
PMChequea VGSqlConn&
PMFinTransaccion
End Function



Sub Ref_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        Ref.Text = ""
    Case CGTeclaENTER%
        'GAMC - 18/04/2008 - INI
        'SOAT
        If Trim(Servicio) = "5" And Trim(Empresa) = "862" Then
            efe.SetFocus
            Exit Sub
        End If
        'GAMC - 18/04/2008 - FIN
        If Empresa.Text <> "" Then
            SendKeys "{TAB}"
        Else
            If Servicio.Enabled Then
                Servicio.SetFocus
                Exit Sub
            End If
        End If
    Case CGTeclaUP%, CGTeclaREPAG%
       If Me.Servicio = 1 And Empresa = 3 Then    'lfcm 29-julio-2008
          If Me.Proceso.Enabled = False Then
             Me.serpac.SetFocus
          Else
             Me.Proceso.SetFocus
          End If
       Else
         ' If Me.Servicio = 6 Then  'smerino new tvcable
        If Me.Servicio = 6 Or (Servicio = 7 And Empresa = 5488) Or (Servicio = 5 And Empresa = 8090) Or (Servicio = 5 And Empresa = 6087) Or (Servicio = 5 And Empresa = 1125) Then 'dpereirv directv postpago/UTPL 'dolayas RecaudacionEducacion
             Me.CboTipo.SetFocus
        Else
        If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
            If Trim(Proceso.Text) = "3" Then
                serpac.SetFocus
            Else
                Proceso.SetFocus
            End If
        Else
        If Trim(Servicio) = "5" And Trim(Empresa) = "8521" Then 'ECUTEL 17-Mayo-2013
             Me.cboTipoId.SetFocus
        Else
        If Proceso.Enabled And Proceso.Visible Then
            Proceso.SetFocus
        End If
       End If
      End If
    End If
   End If
       
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        If efe.Enabled Then
            efe.SetFocus
        End If
    Case CGTeclaF5%
        'GAMC - 18/04/2008 - INI
        'SOAT
        If Trim(Servicio) = "5" And Trim(Empresa) = "862" Then
            efe.SetFocus
            'Exit Sub
        End If
        'GAMC - 18/04/2008 - FIN
        'Consulta para el caso de EMELMANABI
        If Servicio = 3 And Empresa = 1719 Then
            If VGTipoEjecucion% <> CGReverso% Then
                If Trim(Empresa) <> "" And (Trim(Proceso) <> "" Or Proceso.Enabled = False) Then
                   '/*JPM 23112004*/
                   '-- consultar valor de comision por el pago de servicio
                   '-- previo a la consulta de datos del pago, solo para telefonía
                   If Trim(Servicio.Text) = "1" And Trim$(Empresa.Text) = "617" Then 'hy-31-ene-2005 solo para 617
                     vlOpcion = "V"
                     PLTransmitir
                     VLCambio% = True
                   End If
                   '-- fin consulta de valor comision /*JPM 23112004*/
                    vlOpcion = "C"
                    PLTransmitir
                End If
            End If
        End If
        
        
        '-->hy-categ
        If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1" Then
            Dim VLarregloParametro(30) As String
            PMChequea VGSqlConn&
            PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
            PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
            PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CCATEG"
            'PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "ADM"
            PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"   '19-marzo-2008
            If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
                VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametro())
                VLCCATEG = LTrim(RTrim(Trim(VLarregloParametro(4))))
            Else
                VLCCATEG = "S"  'Si no existe el parámetro entonces se considera activa la contingencia
            End If
            PMChequea VGSqlConn&
            If VLCCATEG = "N" Then
                If Not FLTransmitir_CPS_CATEG_consulta() Then
                    Exit Sub
                End If
                DoEvents
                'LECTURA DE LA COMISION Y DATA DEL SRI
                PMInicioTransaccion
                PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3173, "Trn", ""
                PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
                PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
                PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "B", "Opcion", ""
                PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
                PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
                PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
                PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "AutorizacionSRI", ""
                PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "fevensri", ""
                PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, Space(15), "Nota_venta", ""
                'INI - dpereirv
                PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
                PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
                PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
                'FIN - dpereirv
                If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_luz_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                    Comision = FMRetParamATX(VGSqlConn, 1)
                    VLautoriSri = FMRetParamATX(VGSqlConn, 2)
                    VLFecvenSRI = FMRetParamATX(VGSqlConn, 3)
                    VLSerie_Secuencia = FMRetParamATX(VGSqlConn, 4)
                    VlbaseImp = FMRetParamATX(VGSqlConn, 6) 'dpereirv
                    VLiva = FMRetParamATX(VGSqlConn, 7) 'dpereirv
                    PMChequeaATX VGSqlConn ' LBP se mueve cierre conexion
                    PMFinTransaccion ' LBP se mueve fin transaccion
                    'LBP Inicio RECA-CC-SGC00025869
                    If Comision.Text > 0 Then
                       VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
                       If VGCom_aux <> CDbl(Comision.Text) Then
                           VGComision_original = Comision.Text
                           Comision.Text = VGCom_aux
                       Else
                           VGComision_original = Comision.Text
                       End If
                    End If
                    'LBP Fin RECA-CC-SGC00025869
                    If CCur(Comision.Text) > 0 Then
                        Comision.Enabled = True
                        'Total.Text = FMCCurATX(Valor.Text) + FMCCurATX(Comision.Text)
                        Total.Text = FMCCurATX(Comision.Text)
                    End If
                Else
                    MsgBox "Error no se pudo obtener la comisión", vbCritical, "Aviso"
                    PMChequeaATX VGSqlConn ' LBP se mueve cierre conexion
                    PMFinTransaccion       ' LBP se mueve fin transaccion
                End If
            Else
                If VGTipoEjecucion% <> CGReverso% Then
                    If Trim(Empresa) <> "" And (Trim(Proceso) <> "" Or Proceso.Enabled = False) Then
                       '/*JPM 23112004*/
                       '-- consultar valor de comision por el pago de servicio
                       '-- previo a la consulta de datos del pago, solo para telefonía
                       If Trim(Servicio.Text) = "1" And Trim$(Empresa.Text) = "617" Then 'hy-31-ene-2005 solo para 617
                         vlOpcion = "V"
                         PLTransmitir
                         VLCambio% = True
                       End If
                       '-- fin consulta de valor comision /*JPM 23112004*/
                        vlOpcion = "C"
                        PLTransmitir
                    End If
                End If
                DoEvents
                'LECTURA DE LA COMISION Y DATA DEL SRI
                PMInicioTransaccion
                PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3173, "Trn", ""
                PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
                PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
                PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "B", "Opcion", ""
                PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
                PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
                PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
                PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "AutorizacionSRI", ""
                PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "fevensri", ""
                PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, Space(15), "Nota_venta", ""
                If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_luz_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                    Comision = FMRetParamATX(VGSqlConn, 1)
                    VLautoriSri = FMRetParamATX(VGSqlConn, 2)
                    VLFecvenSRI = FMRetParamATX(VGSqlConn, 3)
                    VLSerie_Secuencia = FMRetParamATX(VGSqlConn, 4)
                    PMChequeaATX VGSqlConn
                    PMFinTransaccion
                    'LBP Inicio RECA-CC-SGC00025869
                    If Comision.Text > 0 Then
                       VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
                       If VGCom_aux <> CDbl(Comision.Text) Then
                           VGComision_original = Comision.Text
                           Comision.Text = VGCom_aux
                       Else
                           VGComision_original = Comision.Text
                       End If
                    End If
                    'LBP Fin RECA-CC-SGC00025869
                    If CCur(Comision.Text) > 0 Then
                        Comision.Enabled = True
                        'Total.Text = FMCCurATX(Valor.Text) + FMCCurATX(Comision.Text)
                        Total.Text = FMCCurATX(Comision.Text)
                    End If
                Else
                    MsgBox "Error no se pudo obtener la comisión", vbCritical, "Aviso"
                    PMChequeaATX VGSqlConn
                    PMFinTransaccion
                End If
            End If
            Exit Sub
        End If
        '<--hy-categ
        
        '-->lfcm 30-marzo-2009
        If Trim(Servicio.Text) = "3" And (Trim$(Empresa.Text) = "1127") Then
            Dim VLarregloParametros(30) As String, VLnemonico As String
            Select Case Trim$(Empresa.Text)             'JPM 11/02/2016 -->
              Case "1127":  VLnemonico = "CEMELG"
              'Case "144":   VLnemonico = "CREGCS"
            End Select                                  '<-- JPM 11/02/2016
            PMChequea VGSqlConn&
            PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
            PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
            PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, VLnemonico      'JPM 11/02/2016: antes : "CEMELG"
            PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
            If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
                VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametro())
                VLCEMELG = LTrim(RTrim(Trim(VLarregloParametro(4))))
            Else
                VLCEMELG = "S"  'Si no existe el parámetro entonces se considera activa la contingencia
            End If
            PMChequea VGSqlConn&
            If VLCEMELG = "N" Then
                If Trim$(Empresa.Text) = "1127" Then
                  If Not FLTransmitir_CPS_EMELGUR_consulta() Then
                      Exit Sub
                  End If
                End If
                DoEvents
                'LECTURA DE LA COMISION Y DATA DEL SRI
                PMInicioTransaccion
                PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3173, "Trn", ""
                PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
                PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
                PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "B", "Opcion", ""
                PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
                PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
                PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
                PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "AutorizacionSRI", ""
                PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "fevensri", ""
                PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, Space(15), "Nota_venta", ""
                If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_luz_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                    Comision = FMRetParamATX(VGSqlConn, 1)
                    VLautoriSri = FMRetParamATX(VGSqlConn, 2)
                    VLFecvenSRI = FMRetParamATX(VGSqlConn, 3)
                    VLSerie_Secuencia = FMRetParamATX(VGSqlConn, 4)
                    PMChequeaATX VGSqlConn
                    PMFinTransaccion
                    'LBP Inicio RECA-CC-SGC00025869
                    If Comision.Text > 0 Then
                       VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
                       If VGCom_aux <> CDbl(Comision.Text) Then
                           VGComision_original = Comision.Text
                           Comision.Text = VGCom_aux
                       Else
                           VGComision_original = Comision.Text
                       End If
                    End If
                    'LBP Fin RECA-CC-SGC00025869
                    If CCur(Comision.Text) > 0 Then
                        Comision.Enabled = True
                        'Total.Text = FMCCurATX(Valor.Text) + FMCCurATX(Comision.Text)
                        'Total.Text = FMCCurATX(Comision.Text)
                        Total.Text = Total.Text + FMCCurATX(Comision.Text)
                    End If
                Else
                    MsgBox "Error no se pudo obtener la comisión", vbCritical, "Aviso"
                    PMChequeaATX VGSqlConn
                    PMFinTransaccion
                End If

            Else
                If VGTipoEjecucion% <> CGReverso% Then
                    If Trim(Empresa) <> "" And (Trim(Proceso) <> "" Or Proceso.Enabled = False) Then
                       '/*JPM 23112004*/
                       '-- consultar valor de comision por el pago de servicio
                       '-- previo a la consulta de datos del pago, solo para telefonía
                       If Trim(Servicio.Text) = "1" And Trim$(Empresa.Text) = "617" Then 'hy-31-ene-2005 solo para 617
                         vlOpcion = "V"
                         PLTransmitir
                         VLCambio% = True
                       End If
                       '-- fin consulta de valor comision /*JPM 23112004*/
                        vlOpcion = "C"
                        PLTransmitir
                    End If
                End If
                DoEvents
                'LECTURA DE LA COMISION Y DATA DEL SRI
                PMInicioTransaccion
                PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3173, "Trn", ""
                PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
                PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
                PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "B", "Opcion", ""
                PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
                PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
                PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
                PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "AutorizacionSRI", ""
                PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "fevensri", ""
                PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, Space(15), "Nota_venta", ""
                If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_luz_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                    Comision = FMRetParamATX(VGSqlConn, 1)
                    VLautoriSri = FMRetParamATX(VGSqlConn, 2)
                    VLFecvenSRI = FMRetParamATX(VGSqlConn, 3)
                    VLSerie_Secuencia = FMRetParamATX(VGSqlConn, 4)
                    PMChequeaATX VGSqlConn
                    PMFinTransaccion
                    'LBP Inicio RECA-CC-SGC00025869
                    If Comision.Text > 0 Then
                       VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
                       If VGCom_aux <> CDbl(Comision.Text) Then
                           VGComision_original = Comision.Text
                           Comision.Text = VGCom_aux
                       Else
                           VGComision_original = Comision.Text
                       End If
                    End If
                    'LBP Fin RECA-CC-SGC00025869
                    If CCur(Comision.Text) > 0 Then
                        Comision.Enabled = True
                        'Total.Text = FMCCurATX(Valor.Text) + FMCCurATX(Comision.Text)
                        'Total.Text = FMCCurATX(Comision.Text)
                        If Me.Empresa.Text = 1127 And Servicio = 3 Then
                           'Total.Text = FMCCurATX(Comision.Text)
                           Total.Text = Total.Text + FMCCurATX(Comision.Text)
                        Else
                           Total.Text = FMCCurATX(Comision.Text)
                        End If
                    End If
                Else
                    MsgBox "Error no se pudo obtener la comisión", vbCritical, "Aviso"
                    PMChequeaATX VGSqlConn
                    PMFinTransaccion
                End If
            End If
            Exit Sub

        End If
        '--<lfcm 30-marzo-2009
        
        '-->hy-19-enero-2007 smerino new tvcable
        If Trim(Servicio.Text) = "6" Then
        'And VLTvCableOnline = "S" Then
            If Not FLTransmitir_MIG_TVCABLE_consulta() Then 'FLTransmitir_CPS_TVCABLE_consulta()
                Exit Sub
            End If
            
            SGActivaSum = True 'smerino para que no muetsre la sumadora
       
            FCC51_grid.txtCedula = Ref.Text
            FCC51_grid.txtContribuyente = Nombre.Text
             FCC51_grid.grdDetalle.Rows = Me.grddato.Rows
            FCC51_grid.grdDetalle.Cols = grddato.Cols
        
        If grddato.Rows <> 0 Then
           
           For i = 1 To grddato.Rows - 1
                 grddato.Row = i
                 grddato.Col = 0
                 FCC51_grid.grdDetalle.Row = i
                 FCC51_grid.grdDetalle.Col = 0
                 FCC51_grid.grdDetalle.Text = Trim$(str$(i))
                 For j = 1 To grddato.Cols - 1
                     grddato.Col = j
                     FCC51_grid.grdDetalle.Row = i
                     FCC51_grid.grdDetalle.Col = j
                     FCC51_grid.grdDetalle.Text = grddato.Text
                 Next
            Next
            FCC51_grid.grdDetalle.Row = 1
            FCC51_grid.grdDetalle.Col = 1
            FCC51_grid.Show vbModal
            End If

'Para que no muestre los mensajes al ejecutar el  FMTransmitirRPC
FPrincipal.Map.PMMapConfig "SHOWMESSAGE"  'msilvag RECA-CC-SGC00027895

    'CONSULTA DE COMISION
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    'PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Proceso.Text, "Codigo de empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, "334", "Codigo de empresa", "" 'msilvag RECA-CC-SGC00027895
    PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, "1", "Indica Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, "CSPR", "Servicio Person", ""  '"CSBA" SMERINO RUBRO DE TVCABLE
    PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, "PGTV", "Rubro Person", ""  '"CNMP" SMERINO RUBRO DE TVCABLE
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Rubro Person", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'IVA
    'Variables de salida
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        Comision = FMRetParamATX(VGSqlConn, 1)
        VlbaseImp = FMRetParamATX(VGSqlConn, 3) 'IVA
        VLiva = FMRetParamATX(VGSqlConn, 4) 'IVA
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        'LBP Inicio RECA-CC-SGC00025869
        If Comision.Text > 0 Then
            VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
            If VGCom_aux <> CDbl(Comision.Text) Then
                VGComision_original = Comision.Text
                Comision.Text = VGCom_aux
            Else
                VGComision_original = Comision.Text
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        If CCur(Comision.Text) > 0 Then
            Comision.Enabled = True
            Total.Text = FMCCurATX(valor.Text) + FMCCurATX(Comision.Text)
        End If
    Else
        MsgBox "Error no se pudo obtener la comisión", vbCritical, "Aviso"
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        Comision = 0#
    End If
    
    'Para que si muestre los mensajes al ejecutar el FMTransmitirRPC
FMInitMap FPrincipal!pnlHelpLine, FPrincipal!pnlTransaccionLine, FPrincipal!Focos(0), FPrincipal!Focos(1), FPrincipal!Focos(2), FPrincipal!Focos(3), VGLogTransacciones$ 'msilvag RECA-CC-SGC00027895
        SGActivaSum = False 'smerino para que muetsre la sumador

   End If
'FIN SMERINO PILAS
'belcorp smerinom
   If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "7256" Then
            If Not FLTransmitir_consulta_Servicios() Then
                Exit Sub
            End If
            
'   CONSULTA DE COMISION
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Proceso.Text, "Codigo de empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, "1", "Indica Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, "CSPR", "Servicio Person", ""  '"CSBA" SMERINO RUBRO DE belcorp
    PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, "BELC", "Rubro Person", ""  '"BELC" SMERINO RUBRO DE belcorp
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Rubro Person", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'IVA
   ' Variables de salida
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        Comision = FMRetParamATX(VGSqlConn, 1)
        VlbaseImp = FMRetParamATX(VGSqlConn, 3) 'IVA
        VLiva = FMRetParamATX(VGSqlConn, 4) 'IVA
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        'LBP Inicio RECA-CC-SGC00025869
        If Comision.Text > 0 Then
            VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
            If VGCom_aux <> CDbl(Comision.Text) Then
                VGComision_original = Comision.Text
                Comision.Text = VGCom_aux
            Else
                VGComision_original = Comision.Text
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        If CCur(Comision.Text) > 0 Then
            Comision.Enabled = True
            Total.Text = FMCCurATX(valor.Text) + FMCCurATX(Comision.Text)
        End If
    Else
        MsgBox "Error no se pudo obtener la comisión", vbCritical, "Aviso"
        Comision = 0#
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
    End If
        SGActivaSum = False 'smerino para que muetsre la sumador

End If
'fin becorp




        '<--hy-19-enero-2007
        '-->tc-12-octubre-2009
        If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "118" Then
            If Not FLTransmitir_CPS_PORTA_consulta() Then
                Exit Sub
            End If
        End If
        '-->tc-12-octubre-2009
        '-->tc-20-julio-2009
        If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "115" Then
            'Validar que se escoja la opción O del Catálogo de Tipo
            If Me.Proceso.Text <> "O" Then
               MsgBox "Tipo de Proceso debe ser O", vbCritical + vbOKOnly, "ERROR"
               Proceso.SetFocus
               Exit Sub
            End If
        
            If Not FLTransmitir_CPS_DEPRATI_consulta() Then
                Exit Sub
            End If
        End If
        '-->tc-20-julio-2009
        '-->tc-17-FEBRERO-2010
        If Trim(Servicio.Text) = "2" And Trim$(Empresa.Text) = "114" Then
            If Not FLTransmitir_TRIPLEORO_consulta() Then
                Exit Sub
            End If
        End If
        '-->tc-17-FEBRERO-2010
        
        'gamc 16FEB2012
        If Trim(Servicio.Text) = "9" Then 'And Trim$(Empresa.Text) = "451" Then 'msilvag Marglobal
            If Not FLTransmitir_MARGLOBAL_consulta() Then
                Exit Sub
            End If
        End If

        If Trim(Servicio.Text) = "3" And Trim(VGEmpGrupo) = "S" Then   'DAPV/02102012/CNEL
            If Not FLTransmitir_CPS_CNEL_consulta() Then
                Exit Sub
            End If
        End If
        '<Ref11 (Empresas MEER)
        'Se comenta porque ahora la conexion es por BANRED
        'If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "144" Then
        '   If Not FLTransmitir_CPS_CentroSur_consulta() Then
        '     Exit Sub
        '   End If
        'End If
        If Trim(Servicio.Text) = "3" And (Trim$(Empresa.Text) = "90" Or VLEmpresaMeer = "S") Then
           If Not FLTransmitir_CPS_MEER_consulta() Then
             Exit Sub
           End If
        End If
        'Fin Ref11>
        
        If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
            Consulta_parametro_OSB
            If vl_servidor_BUS = "PSSRV1" Then
                Select Case Proceso.Text
                    Case "3":
                        If Not FLConsPacifictelNuevo() Then
                            Exit Sub
                        End If
                    Case "5482":
                        If Not FLTransmitir_CNTMOVIL_consulta() Then
                            Exit Sub
                        End If
                End Select
            Else
                FLConsultaCNT_MIG
            End If
        End If

        If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "8521" Then 'ECUTEL 17-Mayo-2013
            
            If Not FLTransmitir_MS_ECUTEL_consulta() Then
            'If Not FLTransmitir_WS_ECUTEL_consulta() Then
                Exit Sub
            End If
        End If
        
        If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "5994" Then 'CONECEL TVS dpereirv
            If Not FLTransmitir_CONECEL_consultaTVS() Then
                Exit Sub
            End If
        End If
                
                
                'msilvag Inicio ETAPA
        If (Trim(Servicio.Text) = "1" And Trim$(Me.Empresa.Text) = "1707") Or (Trim(Servicio.Text) = "2" And Trim$(Me.Empresa.Text) = "1708") _
                Or (Trim(Servicio.Text) = "7" And Trim$(Me.Empresa.Text) = "6951") Or (Trim(Servicio.Text) = "8" And Trim$(Me.Empresa.Text) = "6952") Then
            If Not FLTransmitir_Etapa_consulta() Then
                Exit Sub
            End If
        End If
        'msilvag Fin ETAPA
        If Trim(Servicio.Text) = "7" And Trim$(Empresa.Text) = "5488" Then 'Directv Postpago
            If Not FLTransmitir_DirectvPostpago_consulta() Then
                Exit Sub
            End If
        End If
        
        If Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "8090" Then 'UTPL
            If Not FLTransmitir_UTPL_consulta() Then
                Exit Sub
            End If
        End If
        'JPM 09/14/2016 Megadatos -->
        If Trim(Servicio) = "8" And Trim(Empresa) = "1089" Then
          If Not FLTransmitir_Megadatos_consulta Then
            Exit Sub
          End If
        End If
        '<-- JPM 09/14/2016 Megadatos

                 '--ariofria Interagua
        If Trim(Servicio.Text) = "2" And (Trim$(Empresa.Text) = "361") Then
           If Not FLTransmitir_Interagua_consulta() Then
             Exit Sub
           End If
        End If
        '--ariofria  Interagua
        
        'msilvag Inicio RECM-311 RECMPS-371 Interagua TRB
        If Trim(Servicio.Text) = "2" And (Trim$(Empresa.Text) = "8269") Then
           If Not FLTransmitir_Interagua_consulta() Then
             Exit Sub
           End If
        End If
        'msilvag Fin
        
        'DOS 06/21/2017 RECAUDACIONEDUCACION ECOTEC - DOS 09/24/2018 RECAUDACIONEDUCACION UEES -->
        If Trim(Servicio) = "5" And (Trim(Empresa) = "6087" Or Trim(Empresa) = "1125") Then
          If Not FLTransmitir_RECAUDAEDU_consulta Then
            Exit Sub
          End If
        End If
        '<-- DOS 06/21/2017

        'dolaya 08-30-2017 AMAGUA Ini AMAGUA-AP-SGC00028642
        If Trim(Servicio.Text) = "2" And (Trim$(Empresa.Text) = "6") Then
          FConsultarAmaguaBase (Empresa.Text)
          If VLEmpAmaBase = "S" Then
            Minimo.Visible = False
            lblValor(2).Visible = False
            If Not FLTransmitir_AMAGUA_consulta() Then
              Exit Sub
            End If
          End If
        End If
        'dolaya 08-30-2017 AMAGUA Fin AMAGUA-AP-SGC00028642

    End Select
    '<Ref 20
    If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
        CargaInfoadi2CV
    End If
    'Ref 20>
End Sub

Private Sub Cta_LostFocus()
    ' jlf traer nombre de la cta.
    Dim VTipoDatoCta As StructDatoCta
    '{PHV  04AGO2006
    'Se agrega esta condición para que si no ha ingresado
    'la cuenta este no la consulte
    If Cta.ClipText <> "" Then
       'VLfirma = FMValidaFirma(VLfirma, CboTipCta.Text, Cta, "51", Nombre, VLMoneda, VLDescMonCta)
       VLfirma = FMValidaFirma(VLfirma, CboTipCta.Text, Cta, "51", NomCta, VLMoneda, VLDescMonCta)
       VTipoDatoCta = LoNombreCta(CboTipCta.Text, Cta.ClipText, "51")
       NomCta.Text = VTipoDatoCta.NombreCta
       If VLfirma = False Then
          Debito.Text = ""
          Debito.Enabled = False
       Else
          Debito.Enabled = True
          Debito.SetFocus
       End If
    End If
    '}PHV  04AGO2006
    'GAMC - 15/05/2008
    If Empresa.Text = "862" And Cta.ClipText = "" Then
        Debito.Text = "0.00"
        Me.Debito.Enabled = False
    End If
End Sub

Function FLChequeos() As Integer
    On Error GoTo ManejoErrores:    'ref:esma05ago2004
    
    FLChequeos = True
    
    If Fragua.Enabled = True Then
        If Proceso.Enabled Then
            If Trim(Proceso) = "" Then
                MsgBox "El campo de Tipo de Proceso es Mandatorio"
                FLChequeos = False
                If Proceso.Enabled Then
                    Proceso.SetFocus
                End If
                Exit Function
            End If
            If Trim(Servicio.Text) <> 3 Then 'CRR  08/03/2005 ------------->
                If Trim(sal_proc) = "" Then
                    MsgBox "El campo de Tipo de Proceso es Mandatorio"
                    FLChequeos = False
                Exit Function
                End If
            End If
            '------------------------------<-- CRR 08/03/2005
        End If
        If Trim(Ref) = "" Then
            MsgBox "El campo de Código es Mandatorio"
            FLChequeos = False
            If Ref.Enabled Then
                Ref.SetFocus
            End If
            Exit Function
        End If
    End If

    If vlOpcion = "T" And Trim(Empresa) <> "" Then
        '<Ref 20
        If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
            If (VLdnidep = "0999999999") Then
                FSupervisor.txtCampo(0).Text = ""
                FSupervisor.txtCampo(1).Text = ""

                FSupervisor.Show 1
                If FSupervisor.optSupervisor.Value = False Then
                    MsgBox "No se pudo procesar la transacción, ingrese clave supervisor", vbCritical, "Mensaje de Error"
                    FLChequeos = False
                    Exit Function
                End If
                MsgBox "Supervisor ok " & FSupervisor.txtCampo(0).Text
            End If
        End If
        'Ref 20>
        If efe.Enabled Then
            'If (FMCCurATX(Pago_Val.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((Efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
            If Servicio = 6 Then  'hy-15-marzo-2007
                If (FMCCurATX(Total.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
                    MsgBox " Formas de pago no coinciden con Valor a Pagar"
                    FLChequeos = False
                    If efe.Enabled Then

                        efe.SetFocus
                    End If
                    Exit Function
                End If
            Else
                If Empresa = 1719 And Servicio = 3 Then
                    'Validacion solo para Emelmanabi
                    'lfcm 02-enero-2007 Se comenta esta validacion para permitir pagos parciales.
                    'If (FMCCurATX(Total.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((Efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text) - FMCCurATX(Comision.Text)) Then '/*JPM 11112004*/
                    'If (FMCCurATX(Total.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((Efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then '/*JPM 11112004*/
                    '    MsgBox " Formas de pago no coinciden con Valor a Pagar"
                    '    FLChequeos = False
                    '    If Efe.Enabled Then
                    '        Efe.SetFocus
                    '    End If
                    '    Exit Function
                    'End If
                ElseIf Empresa = 862 And Servicio = 5 Then 'GAMC - 16/05/2008 - SOAT
                    'Validacion normal para las empresas distintas a EMELMANABI
                    If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
                        MsgBox " Formas de pago no coinciden con Valor a Pagar"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                ElseIf Empresa = 1127 And Servicio = 3 Then 'lfcm 25-abril-2009
                    'Validacion normal para las empresas distintas a EMELGUR(LUZ)
                    'If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((Efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
                    If (FMCCurATX(Pago_Val.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
                        MsgBox " Formas de pago no coinciden con Valor a Pagar"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
'                ElseIf Proceso = 5482 And Servicio = 1 Then 'CNT_MOVIL dpereirv
'                    If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((Efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
'                        MsgBox " Formas de pago no coinciden con Valor a Pagar"
'                        FLChequeos = False
'                        If Efe.Enabled Then
'                            Efe.SetFocus
'                        End If
'                        Exit Function
'                    End If
                                 'msilvag Inicio Etapa
                ElseIf (Trim(Servicio) = "8" And Trim(Empresa) = "6952") Or (Trim(Servicio) = "1" And Trim(Empresa) = "1707") Or (Trim(Servicio) = "2" And Trim(Empresa) = "1708") Or (Trim(Servicio) = "7" And Trim(Empresa) = "6951") Then 'VLTipoServicio = "TLF" Or VLTipoServicio = "AGP" Or VLTipoServicio = "INT" Or VLTipoServicio = "RDD" Or VLTipoServicio = "TVD" Then
                    If ((FMCCurATX(Me.Pago_Val.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text))) And (FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) <> VTotal2) Then 'msilvag Marzo-03-2016 ETAPA
                        MsgBox " Formas de pago no coinciden con Valor a Pagar"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                'msilvag Fin Etapa
                ElseIf VGEmpGrupo = "S" And Servicio = 3 Then 'lfcm 25-abril-2009
                    'Validacion normal para las empresas distintas a EMELGUR(LUZ)
                    'If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((Efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
                    If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
                        MsgBox " Formas de pago no coinciden con Valor a Pagar"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                        If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) > FMCCurATX(valor.Text) Then
                        MsgBox "Valor a Pagar es mayor al adeudado"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                 '<Ref11 Empresas MEER
                 ElseIf VLEmpresaMeer = "S" And Servicio = 3 Then
                    If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
                        MsgBox " Formas de pago no coinciden con Valor a Pagar"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                    If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) > FMCCurATX(valor.Text) Then
                        MsgBox "Valor a Pagar es mayor al adeudado"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                    ' DOLAYAS, REF 13, 05/15/2017 INICIO
'                    If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX(Valor.Text) Then
'                        MsgBox "El Monto a pagar es diferente al monto de la deuda"
'                        FLChequeos = False
'                        Exit Function
'                    End If
                    ' DOLAYAS, REF 13, 05/15/2017 FIN
                 'Fin Ref11>
                    
                 ElseIf Empresa = 1371 And Servicio = 3 Then 'msilvag
                    If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
                        MsgBox " Formas de pago no coinciden con Valor a Pagar"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                ElseIf Servicio = 2 And (Empresa = 360 Or Empresa = 4 Or Empresa = 6) Then 'msilvag
                    If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
                        MsgBox " Formas de pago no coinciden con Valor a Pagar"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                    If Empresa = 6 And VLEmpAmaBase = "S" And (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) > FMCCurATX(valor.Text) Then ' Validacion AMAGUA EN LINEA Pagos Mayores dolayas AMAGUA AMAGUA-AP-SGC00028642
                        MsgBox "Valor a Pagar es mayor al adeudado"
                        FLChequeos = False
                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                ElseIf Servicio = 2 And Empresa = 8269 Then                               'JPM IWS TRB -->
                    If (FMCCurATX(Pago_Val.Text) < CCur(Minimo.Text)) Or (FMCCurATX(Pago_Val.Text) > CCur(valor.Text)) Then
                      MsgBox "Valor a Pagar debe estar entre el valor mínimo y valor a pagar"
                      FLChequeos = False
                      If efe.Enabled Then
                          efe.SetFocus
                      End If
                      Exit Function
                    End If                                                                '<-- JPM IWS TRB
                    
                    'msilvag validar que formas de pago se encuentren ingresadas
                    If FMCCurATX(Pago_Val.Text) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
                        MsgBox "Formas de pago no coinciden con Valor a Pagar"
                        FLChequeos = False
                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                    'msilvag Fin
                    
                Else
                    'Validacion normal para las empresas distintas a EMELMANABI
                    If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text) - FMCCurATX(Comision.Text)) Then '/*JPM 11112004*/
                        MsgBox " Formas de pago no coinciden con Valor a Pagar"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                End If
            End If
            If valor.Visible = True And Minimo.Visible = True Then
                If (FMCCurATX((valor.Text)) + FMCCurATX((Minimo.Text))) < 0 Then
                    MsgBox " Cliente con saldo a favor"
                    FLChequeos = False
                    If efe.Enabled Then

                        efe.SetFocus
                    End If
                    Exit Function
                End If
                If (FMCCurATX((valor.Text)) + FMCCurATX((Minimo.Text))) = 0 And Trim(Nombre) <> "" Then
                    MsgBox " Cliente no adeuda valores"
                    FLChequeos = False
                    If efe.Enabled Then

                        efe.SetFocus
                    End If
                    Exit Function
                End If
            End If
            
         '--> CRR Valida que el monto a pagar no sea mayor que la deuda
         If Trim(Servicio.Text) = "4" And VGTipoEjecucion% <> CGReverso% Then
            If Trim$(Nombre.Text) <> "ESTE COLEGIO NO TIENE BASE" And FMCCurATX(Total.Text) = FMCCurATX(0) Then
                MsgBox "No hay monto que cancelar"
                FLChequeos = False
                Exit Function
            End If
            If FMCCurATX(Me.Pago_Val.Text) > FMCCurATX(Me.Total.Text) And FMCCurATX(Me.Total.Text) <> FMCCurATX(0) Then
                MsgBox "El Monto a pagar es mayor que el valor de la deuda"
                FLChequeos = False
                Exit Function
            End If
         End If
        '-----------------------------<-- CRR
            '/*JPM 02122004*/
            'lfcm 08-dic-2006
            If Empresa = 1719 And Servicio = 3 Then
                If FMCCurATX(Total.Text) - FMCCurATX(Comision.Text) <= 0 Then
                    If FMCCurATX(Comision.Text) > 0 Then
                    MsgBox " Total a pagar debe ser mayor a la comisión"
                Else
                    MsgBox " Total a pagar debe ser mayor a cero"
                End If
                FLChequeos = False
                If efe.Enabled Then

                   efe.SetFocus
                End If
                Exit Function
                End If
            Else
                'INI - DAPV 07/17/2012 CNT
                If (Empresa = 3 And Servicio = 1) Or (Empresa = 8521) Or (Empresa = 5994) Or (Empresa = 5479) Or (Empresa = 361) Then 'dpereirv 08312017 'CONOCEL TVS dpereirv
                    If FMCCurATX(Pago_Val.Text) <= 0 Then
                        MsgBox " Total a pagar debe ser mayor a cero"
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                'Else
                'FIN - DAPV 07/17/2012 CNT
                                'msilvag Etapa Inicio
                ElseIf (Trim(Servicio) = "8" And Trim(Empresa) = "6952") Or (Trim(Servicio) = "1" And Trim(Empresa) = "1707") Or (Trim(Servicio) = "2" And Trim(Empresa) = "1708") Or (Trim(Servicio) = "7" And Trim(Empresa) = "6951") Then 'msilvag ETAPA Marzo-04-2016
                    'VLTipoServicio = "TLF" Or VLTipoServicio = "AGP" Or VLTipoServicio = "INT" Or VLTipoServicio = "RDD" Or VLTipoServicio = "TVD" Then
                    If FMCCurATX(Total.Text) - FMCCurATX(Comision.Text) <= 0 Then
                        If FMCCurATX(Comision.Text) > 0 Then
                        MsgBox " Total a pagar debe ser mayor a la comisión"
                    Else
                        MsgBox " Total a pagar debe ser mayor a la comisión"
                    End If
                    FLChequeos = False
                    If efe.Enabled Then

                        efe.SetFocus
                    End If
                    Exit Function
                    End If
                Else
                'msilvag Etapa Fin
                If (Empresa <> 7256 And Empresa <> 6087 And Empresa <> 1125) Then   'belcorp Ref17
                    If FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text) <= 0 Then
                        If FMCCurATX(Comision.Text) > 0 Then
                            MsgBox " Total a pagar debe ser mayor a la comisión"
                        Else
                            MsgBox " Total a pagar debe ser mayor a cero"
                        End If
                        FLChequeos = False


                        If efe.Enabled Then
                            efe.SetFocus
                        End If
                        Exit Function
                    End If
                End If 'If Empresa = 3 Then
            End If
         End If 'belcorp
         
            '/*JPM fin validaciones 02122004*/
        Else
            If (FMCCurATX((valor.Text)) + FMCCurATX((Minimo.Text))) = 0 And Trim(Nombre) = "" Then
                MsgBox " F5 consulta de saldo de cliente"
                FLChequeos = False
                If Ref.Enabled Then
                    Ref.SetFocus
                End If
                Exit Function
            End If
        End If
    End If

    'RCA 11/Sep/2001 Modifica

    If (FMCCurATX(Reten.Text)) > 0 And Trim(Comprob) = "" Then
        MsgBox "Debe ingresar comprobante de la Retención"
        FLChequeos = False
        If Comprob.Enabled Then
            Comprob.SetFocus
        End If
        Exit Function
    End If
          
    'RCA 11/Sep/2001 Fin Modifica
    If Trim(Empresa) = "" Then
        If (FMCCurATX(Pago_Val.Text)) <= 0 Then
            MsgBox " DEBE INGRESAR EL VALOR A PAGAR"
            FLChequeos = False
            If Pago_Val.Enabled Then
                Pago_Val.SetFocus
            End If
            Exit Function
        End If
        If (FMCCurATX(Pago_Val.Text)) <> FMCCurATX((Loc.Text)) + FMCCurATX((efe.Text)) + FMCCurATX((Debito.Text)) + FMCCurATX((Reten.Text)) Then
            MsgBox " TOTAL DE FORMAS DE PAGO NO COINCIDEN CON VALOR A PAGAR"
            FLChequeos = False
            If Pago_Val.Enabled Then
                Pago_Val.SetFocus
            End If
            Exit Function
        End If
    End If
    
  'msilvag Inicio Abril-4-2013
  If Servicio = 2 And (Empresa = 360 Or Empresa = 4 Or Empresa = 6) Then
        If (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)) < FMCCurATX(Me.Minimo.Text) Then
            MsgBox "EL VALOR A PAGAR MENOS LA COMISION NO ES IGUAL AL PAGO MINIMO DE LA PLANILLA"
            FLChequeos = False
            If efe.Enabled Then

                efe.SetFocus
            End If
            Exit Function
        End If
  End If
  'msilvag Fin

    'TPE Validacion para servicio de Recaudacion.
    If Trim(Servicio.Text) = "" Then
        MsgBox " Debe ingresar un tipo de recaudacion para el pago"
        FLChequeos = False
        If Servicio.Enabled Then
            Servicio.SetFocus
        End If
        Exit Function
    End If
    If val(CantChq.Text) <> 0 And Loc.ValueReal = 0 Then
        MsgBox "Verifique el Campo Cheques"
        FLChequeos = False
        If Loc.Enabled Then
            Loc.SetFocus
        End If
        Exit Function
    End If
    If Cta.ClipText <> "" And Debito.ValueReal = 0 Then
        MsgBox "Verifique el Campo Debito"
        FLChequeos = False
        If Debito.Enabled Then
            Debito.SetFocus
        End If
        Exit Function
    End If
    'ref:esma04ago2004
    
      'msilvag Inicio Abril-4-2013
    If Servicio = 2 And (Empresa = 360 Or Empresa = 4 Or Empresa = 6) Then
        If FMCCurATX(Me.Pago_Val.Text) > FMCCurATX(Me.Total.Text) Then
            MsgBox "El Monto a pagar es mayor que el valor de la deuda"
            FLChequeos = False
            Exit Function
        End If
    End If
    'msilvag Fin
    
  'msilvag Inicio RECA-CC-SGC00027895
  If Servicio = 6 Then
  'kbastida
  If (FMCCurATX(Pago_Val.Text) > FMCCurATX(Me.valor.Text)) Then
        'If (FMCCurATX(Pago_Val.Text) < FMCCurATX(Me.valor.Text)) Or (FMCCurATX(Pago_Val.Text) > FMCCurATX(Me.valor.Text)) Then
            MsgBox "EL TOTAL A PAGAR NO ES IGUAL AL VALOR DEL SERVICIO"
            FLChequeos = False
            If efe.Enabled Then
                efe.SetFocus
            End If
            Exit Function
        End If
  End If
  'msilvag Fin
    
    '-->hy-31-ene-2005
    'Para el caso de telefonos validar un numero correcto
    If Trim(Servicio.Text) = "1" Then
'      If Trim(Empresa) = "1707" Then 'ANBE 112406 ETAPA TELEF
'        If Len(Trim$(Ref.Text)) <> 6 Then
'          MsgBox "Número de teléfono no válido"
'          FLChequeos = False
'          If Ref.Enabled Then
'            Ref.SetFocus
'          End If
'          Exit Function
'        End If
'      Else
     
     If Servicio = 1 And Empresa = 3 And (serpac.Text = "ABF" Or serpac.Text = "RES") Then   '--> lfcm 29-julio-2008
       If Not (Proceso.Text = "1700" Or Proceso.Text = "1800") Then
        If Len(Trim$(Ref.Text)) <> 7 And Proceso <> "99" Then   'wmh
            MsgBox "Número de telefono no válido"
            FLChequeos = False
            If Ref.Enabled Then
                Ref.SetFocus
            End If
            Exit Function
        End If
      End If
     End If   '--< lfcm 29-julio-2008


        'If Len(Trim$(Ref.Text)) <> 7 And Proceso <> "99" Then   'wmh
        If Servicio <> "1" And Trim(VGEmpGrupo) <> "S" Then
        If Len(Trim$(Ref.Text)) <> 7 And Proceso <> "99" And Empresa <> 3 Then   'lfcm 29-julio-2008
            MsgBox "Número de telefono no válido"
            FLChequeos = False
            If Ref.Enabled Then
                Ref.SetFocus
            End If
            Exit Function
        End If
      End If
'      End If
    End If
    '<--hy-31-ene-2005

    'lfcm 25-septiembre-2006
    'Campo Comision debe ser Verificado.
    If VLTotCom <> FMCCurATX((Comision.Text)) Then
        MsgBox "Verifique el Campo Valor de Comision"
        Comision.SetFocus
        FLChequeos = False
        Exit Function
    End If
    
    'lfcm 11-dic-2006
    If FMCCurATX((efe.Text)) > 0 And CCur(VLEfe_com) > 0 And VGTipoEjecucion = CGNormal% Then
        VTTotalDesglose = 0
        For i% = 1 To SGNumDen
             If SGIngreso(i% - 1).cant_ingr > 0 Then
                VTTotalDesglose = VTTotalDesglose + SGIngreso(i% - 1).mont_ingr
            End If
        Next i%
        If CCur(VTTotalDesglose + SGAcumulado) < (FMCCurATX((efe.Text)) + CCur(VLEfe_com)) Then
            MsgBox "Desglose menor a efectivo ingresado. Verifique...", vbCritical, "Mensaje del Servidor"
            FLChequeos = False
            Exit Function
        End If
    End If
    '->hy-31-ene-2005
    'Este codigo se comento porque a partir de ahora se ejecutan una sola vez
    'en FLTransmitir, apoyado por variables globales
    'If Trim(Servicio) = "1" And Trim(Empresa) = "617" Then
    '    Dim objUpdate As Object
    '    Set objUpdate = CreateObject("UpLoadDll.LoadDllCobis")
    '    Set objUpdate = Nothing
    '    VGDatosConexionPV = FMParametroUpLoadDll("IPAN", "CTE")
    'End If
    '<-hy-31-ene-2005
    '/*JPM 08122004 validación de campo cédula*/
    If txtCedula.Enabled And txtCedula.Visible Then
      If Trim(txtCedula.Text) = "" Then
        '/*JPM 16122004 si posee debito a cuenta identificacion no es obligatoria*/
        If FMCCurATX(Debito.Text) > 0 Then
           VLIdEsValida = True
           Exit Function
        End If
        FLChequeos = False
        MsgBox "El campo de " + IIf(cmbTid.ListIndex = -1, "Identificación", cmbTid.Text) + " es Mandatorio"
        txtCedula.SetFocus
        Exit Function
      End If
      Txtcedula_LostFocus 'validar cédula
      If Not VLIdEsValida Then
        FLChequeos = False
      End If
    End If
    '/*JPM 08122004 validación de campo cédula*/
      
    If Trim(Servicio.Text) = "5" And Trim(Empresa.Text) = "118" Then 'DAPV - 09/10/2012
        If Len(Trim(Ref.Text)) <> 10 Then
            MsgBox "El Número de celular debe tener 10 Dígitos"
            FLChequeos = False
'            Ref.Enabled = True
'            Ref.SetFocus
            Exit Function
        End If
    End If
    
    If Trim(Servicio.Text) = "5" And (Trim(Empresa.Text) = "8521" Or Trim(Empresa.Text) = "5994") Then 'CONECEL TVS dpereirv    'ECUTEL - 09/10/2012
        If Pago_Val.Text < 0.01 Then
            MsgBox "El valor mínimo a cobrar es de $0.01"
            FLChequeos = False
            Exit Function
        End If
        VLValorLimite = 0
        VLValorLimite = (Total_Pagar.Text) * (200 / 100)
     
        If CDbl(Pago_Val.Text) > CDbl(VLValorLimite) Then
            MsgBox "El valor limite a pagar es el 200% de la deuda"
            FLChequeos = False
            Exit Function
        End If
       
    End If
    If Trim(Servicio.Text) = "7" And Trim(Empresa.Text) = "5488" Then   'dpereirv  DirectvPostpago
        If FMCCurATX(Me.Pago_Val.Text) <> FMCCurATX(Me.Total_Pagar.Text) Then
            MsgBox "El Monto a pagar es diferente al monto de la deuda"
            FLChequeos = False
            Exit Function
        End If
    End If
    
    If Trim(Servicio.Text) = "5" And Trim(Empresa.Text) = "8090" Then   'dpereirv  DirectvPostpago
        If FMCCurATX(Me.Pago_Val.Text) <> FMCCurATX(Me.Total_Pagar.Text) Then
            MsgBox "El Monto a pagar es diferente al monto de la deuda"
            FLChequeos = False
            Exit Function
        End If
    End If

    'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    If FCC51.Cta.ClipText <> "" Then
        If VLDeb_com > 0 And FCC51.Cta.ClipText <> VLCta_com Then
            MsgBox "La cuenta de la comision debe ser la misma con la que realiza el pago del servicio."
            FLChequeos = False
            Exit Function
        End If
    End If
    'msilvag Fin

    'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    If FCC51.Cta.ClipText <> "" Then
        If VLDeb_com > 0 And FCC51.Cta.ClipText <> VLCta_com Then
            MsgBox "La cuenta de la comision debe ser la misma con la que realiza el pago del servicio."
            FLChequeos = False
            Exit Function
        End If
    End If
    'msilvag Fin

'       If Trim(Servicio.Text) = "2" And Trim(Empresa.Text) = "361" Then   'ariofria  interagua
'        If FMCCurATX(Me.Pago_Val.Text) <> FMCCurATX(Me.Total_Pagar.Text) Then
'            MsgBox "El Monto a pagar es diferente al monto de la deuda"
'            FLChequeos = False
'            Exit Function
'        End If
'    End If

        'RecaudacionEducacion
    If Trim(Servicio.Text) = "5" And (Trim(Empresa.Text) = "6087" Or Trim(Empresa.Text) = "1125") Then   'dolayas Ref17
        If FMCCurATX(Me.Pago_Val.Text) <> FMCCurATX(Me.Total_Pagar.Text) Then
            MsgBox "El Monto a pagar es diferente al monto de la deuda"
            FLChequeos = False



    Exit Function
        End If
    End If
    
    



    Exit Function
  
ManejoErrores:
    MsgBox "ERROR EN CREACION DE OBJETO UpLoadDll # " + CStr(Err) + ", detallado como: " + Error$(Err), vbCritical, "Mensaje del Sistema"
    FLChequeos = False
End Function

Private Sub PLAbonoPacifAct()
Dim VLarreglo(30) As String
  'ANBE 052207 PAGO ABONO EN PACIFICTEL
  PMChequea VGSqlConn&
  PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
  PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
  PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "PABOP"
  PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
  If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
    VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
    VLPABOP = LTrim(RTrim(Trim(VLarreglo(4))))
  Else
    VLPABOP = "N"
    Exit Sub
  End If
  PMChequea VGSqlConn&
End Sub
Function FLTransmitir() As Integer
Dim VTIndicadorSum As Integer
Dim i As Integer              'hy-31-ene-2005
ReDim VLarreglo(30) As String 'hy-31-ene-2005
Dim VTIndexOutPutId As Long '/*JPM 16122004 indice parameto output para identificacion*/
    VLTsnTemp = 0 'hy-31-ene-2005
    
    SGEmpresa = Me.Empresa.Text 'msilvag Inicio RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    
    '->hy-31-ene-2005
    'Si los datos de matriz para el tratamiento del switch no se encuentran}
    'cargados deben ser cargados ahora y una sola vez en el proyecto
    'exclusivo solo para el servicio de telefonos
    
    'ESTO YA NO DEBERIA IR (la parte de objecto es solo para Andinatel
       
    If Trim(Servicio) = "1" Then  'ANBE Para que Pacfictel no entre en Switch
      If Trim(Empresa) <> 3 And Not (VGMatrizSwitchFlag) Then
        Dim objUpdate As Object
        Set objUpdate = CreateObject("UpLoadDll.LoadDllCobis")
        Set objUpdate = Nothing
        VGDatosConexionPV = FMParametroUpLoadDll("IPAN", "CTE")
      End If
        'Leer los códigos por institución de empresas para el switch
        If FMDatosSwitch() = False Then
            FLTransmitir = False
            Exit Function
        End If
    End If
    
    If Trim(Servicio) = "1" Then
        If IsNumeric(Ref) = False Or Ref = "" Then
            MsgBox "Ingrese un Número Válido de Teléfono", vbInformation, "ATX"
            FLTransmitir = False
            Exit Function
        End If
        
        '-->lfcm 29-julio-2008
        If (IsNumeric(Proceso) = False Or Proceso = "") And (Trim(Empresa) = "3" And (serpac.Text = "ABF" Or serpac.Text = "RES")) Then
            MsgBox "Ingrese una Región Válida de Teléfono", vbInformation, "ATX"
            FLTransmitir = False
            Exit Function
        End If
        '--<lfcm 29-julio-2008
        
        'If (IsNumeric(Proceso) = False Or Proceso = "") And (Trim(Empresa) <> "1707" And Trim(Empresa) <> "1708") Then
        If (IsNumeric(Proceso) = False Or Proceso = "") And (Trim(Empresa) <> "1707" And Trim(Empresa) <> "1708" And Trim(Empresa) <> "3") Then
            MsgBox "Ingrese una Región Válida de Teléfono", vbInformation, "ATX"
            FLTransmitir = False
            Exit Function
        End If
        If Proceso = "00" Then Proceso = ""
    End If
    '<-hy-31-ene-2005
    
    '->hy-31-ene-2005
    'Para el caso de servicios de pacifictel consultar el parametro de contingencia
    If (vlOpcion = "C" Or vlOpcion = "P") And Trim(Servicio.Text) = "1" And Trim(Empresa) = "3" Then
        PMChequea VGSqlConn&
        PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
        PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
        PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CTGP"
        PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
        If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
            VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
            VLCTGP = LTrim(RTrim(Trim(VLarreglo(4))))
        Else
            VLCTGP = ""
            FLTransmitir = False
            Exit Function
        End If
        PMChequea VGSqlConn&
    End If
    '<-hy-31-ene-2005
    
    '->hy-31-ene-2005
    'En el caso de andinatel debe tomar los datos de las variables globales
    'y no debe llamar a ningun sp. posteriormente tratar la trama
    If vlOpcion = "C" And Trim(Servicio.Text) = "1" And Trim(Empresa) = "617" Then
        i% = FMBuscaMatrizSwitch("617", "C")
        VLemp_switch = VGMatrizSwitch(2, i%)
        VLtrn_switch = VGMatrizSwitch(3, i%)
        VGArregloSwitch(1) = Format$(Date, "mm/dd/yyyy") + Format$(Time(), "hh:mm:ss")
        VGArregloSwitch(3) = Format(Now, "hhmmss") 'SECUENCIAL FMV 11292004
        VLHoraProceso = VGArregloSwitch(1)
        VLFechaProceso = VGArregloSwitch(2)
        SGSecTrn$ = VGArregloSwitch(3)
        VLSecTrnCorr = 0
        tDatosEmpresa$ = VGArregloSwitch(5)
        VLDatosEmpresa() = Split(tDatosEmpresa$, ";", -1, 1)
        VLCodCaj = VLDatosEmpresa(0)
        VLEmpruc = VLDatosEmpresa(1)
        VLEmpRes = VLDatosEmpresa(2)
        VLEmpaut = VLDatosEmpresa(3)
        VLEmpval = VLDatosEmpresa(4)
        VLEmpDir = VLDatosEmpresa(5)
        Proceso.Enabled = False
        Ref.Enabled = False
        FCC51.Enabled = False
        If Trim(Empresa) <> 3 Then  'ANBE para Andinatel
          If FLConexionLocal("C") = False Then
              VLCambio% = True
              FLTransmitir = False
              VLMensajeVerificados = ""
              FCC51.Enabled = True
              FCC51.Refresh
              VLconexion = "F"
              VLDescripcion = ""
              Proceso.Enabled = True
              Ref.Enabled = True
          Else
              FLTransmitir = True
              FCC51.Enabled = True
              FCC51.Refresh
          End If
          Exit Function
        End If
    End If
    '<-hy-31-ene-2005
    If vlOpcion = "C" And Trim(Servicio.Text) = "2" And Trim(Empresa) = "1708" Then 'ANBE 112906 todo el if
      If Len(Ref) <> 9 Or IsNumeric(Ref) = False Or Ref = "" Then
        MsgBox "Ingrese un Código Válido", vbInformation, "ATX"
        FLTransmitir = False
        Exit Function
      End If
    End If
    If vlOpcion = "C" And Trim(Servicio.Text) = "2" And Trim(Empresa) = "8269" Then 'JPM Interagua TRB -->
      If Len(Ref) > 15 Or IsNumeric(Ref) = False Or Ref = "" Then
        MsgBox "Ingrese un Código Válido", vbInformation, "ATX"
        FLTransmitir = False
        Exit Function
      End If
    End If                                                                          '<-- JPM Interagua TRB
    
    
    VTIndicadorSum = 0
    PMInicioTransaccion
    longuitud% = Len(Trim(Ref))
    If vlOpcion = "C" Or vlOpcion = "V" Then  '/*JPM 23112004 VLOpcion = "V"*/
       VLReverso$ = "N"
    Else
        VLReverso$ = "S"
        'Validacion para Telefono
        If VGTipoEjecucion% <> CGReverso% Then
            If valor.Visible = True And Servicio.Text = "1" Then
              'If Trim(Empresa) = "3" And Trim(VLPABOP) = "S" Then  'ANBE 052207
              If (Trim(Empresa) = "3" And Trim(VLPABOP) = "S") Or (Trim(Servicio) = "1" And Trim(Empresa) = "5479") Then  'ANBE 052207
                If FMCCurATX(valor.Text) < (FMCCurATX(Pago_Val) - FMCCurATX(Comision.Text)) Then
                    MsgBox " No Puede Pagar Valor Mayor a lo Adeudado", vbInformation, "Pago Teléfono"
                    FLTransmitir = False
                    Exit Function
                End If
              Else
                If (FMCCurATX((valor.Text)) <> FMCCurATX((Pago_Val)) - FMCCurATX(Comision.Text)) Then '/*JPM 11112004*/
                    MsgBox " No Puede Pagar Valor Mayor o Menor al Adeudado", vbInformation, "Pago Teléfono"
                    FLTransmitir = False
                    Exit Function
                End If
              End If
            End If
        Else
            If Trim(Servicio.Text) = "1" And Trim(Empresa) = "617" Then
                VLemp_switch = DatoSwitch("@i_empresa_switch")
                VLtrn_switch = DatoSwitch("@i_cod_trn_switch")
                VLHoraProceso = DatoSwitch("@i_hora_pro")
                VLFechaProceso = DatoSwitch("@i_fecha_ef")
                SGSecTrn$ = DatoSwitch("@i_sgsectrn")
                VLSecTrnCorr = DatoSwitch("@i_sgsectrn")
                VLCodCaj = DatoSwitch("@i_codcaj")
            End If
        End If
    End If
    
    ReDim vtmatriz(2, 20) As String
    
    PLTipoTransaccion
 
    If Trim(Servicio.Text) = "1" Then
        If vlOpcion = "C" Or vlOpcion = "V" Then
            If Trim(Empresa) = "3" And VLCTGP = "N" Then 'ANBE 052207
               If FLConsPacifictel() = True Then
                        FLTransmitir = True
                        FCC51.Enabled = True
                        FCC51.Refresh
                Else
                        VLCambio% = True
                        FLTransmitir = False
                        VLMensajeVerificados = ""
                        FCC51.Enabled = True
                        FCC51.Refresh
                        VLconexion = "F"
                        VLDescripcion = ""
                        'Proceso.Enabled = True
                        If Not (Servicio = 1 And Empresa = 3) Then     'lfcm 04-agosto-2008
                           Proceso.Enabled = True                      'lfcm 04-agosto-2008
                        End If                                         'lfcm 04-agosto-2008
                        Ref.Enabled = True
               End If
               Exit Function
            End If
'ANBE Activar esta lineas cuando este Andinatel en CPS.
'            If Trim(Empresa) = "617" Then
'               If FLConsAndinatel() = True Then
'                    FLTransmitir = True
'                    FCC51.Enabled = True
'                    FCC51.Refresh
'               Else
'                    VLCambio% = True
'                    FLTransmitir = False
'                    VLMensajeVerificados = ""
'                    FCC51.Enabled = True
'                    FCC51.Refresh
'                    VLconexion = "F"
'                    VLDescripcion = ""
'                    Proceso.Enabled = True
'                    Ref.Enabled = True
'               End If
'               Exit Function
'            End If
          
          If Trim(Empresa) = "1707" Then  'Empresa ETAP Telefono ANBE 112206 todo el if
            If FLConsEtapaCPS(1) = True Then
              Comision.Enabled = True
              FLTransmitir = True
              FCC51.Enabled = True
              FCC51.Refresh
            Else
              VLCambio% = True
              FLTransmitir = False
              VLMensajeVerificados = ""
              FCC51.Enabled = True
              FCC51.Refresh
              VLconexion = "F"
              VLDescripcion = ""
              'Proceso.Enabled = True
              Ref.Enabled = True
            End If
            Exit Function
          End If
        End If
        If vlOpcion = "T" Or vlOpcion = "P" Then
        
            If Trim(Empresa) = "3" And VLCTGP = "N" Then 'ANBE 052207
               If FLPagoPacifictel() = True Then
                    VTIndicadorSum = 1
                    PMIniciaRegSum
                    PMChequeaATX VGSqlConn
                    PMTotalesBranch "86"
                    FLTransmitir = True
                    VLCambio% = False
                    GoTo salto
                Else
                    VLCambio% = True
                    FLTransmitir = False
                    PMFinTransaccion
                    PMChequeaATX VGSqlConn
' ANBE 070307 esto era para switch
'                    If VGTipoEjecucion% = CGReverso% And VLCodResp <> "0000" Then
'                        MsgBox "ALERTA, NO SE REVERSò EL PAGO EN PACIFICTEL, SE PROCEDERA A REVERSAR LA SUMADORA", vbExclamation, "ERROR DE COMUNICACION"
'                    End If
'                    VLconexion = "F"
'                    VLMensajeVerificados = ""
'                    VLDescripcion = ""
'                    VTIndicadorSum = 1     'Para que no grabe desglose
               End If
               Exit Function
            End If
'ANBE Activar esta lineas cuando este Andinatel en CPS.
'            If Trim(Empresa) = "617" Then
'               If FLPagoAndinatel() = True Then
'                    VLCambio% = True
'                    FLTransmitir = False
'                    PMFinTransaccion
'                    PMChequeaATX VGSqlConn
'                    GoTo salto
'                Else
'                    VLCambio% = True
'                    FLTransmitir = False
'                    PMFinTransaccion
'                    PMChequeaATX VGSqlConn
'                    VLconexion = "F"
'                    VLMensajeVerificados = ""
'                    VLDescripcion = ""
'                    VTIndicadorSum = 1     'Para que no grabe desglose
'                    FLTransmitir = False
'               End If
'               Exit Function
'            End If
            If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
                If Trim(Proceso) = "3" Then 'CNT MOVIL
                   If FLPagoPacifictel() = True Then
                        VTIndicadorSum = 1
                        PMIniciaRegSum
                        PMChequeaATX VGSqlConn
                        PMTotalesBranch "86"
                        FLTransmitir = True
                        VLCambio% = False
                        GoTo salto
                    Else
                        VLCambio% = True
                        FLTransmitir = False
                        PMFinTransaccion
                        PMChequeaATX VGSqlConn
                        Exit Function
                    End If
                End If
            End If
       
       
          If Trim(Empresa) = "1707" Then  'ANBE 112406 todo el if
            If FLPagoEtapaCPS(1) = True Then
              VTIndicadorSum = 1
              PMIniciaRegSum
              PMChequeaATX VGSqlConn
              'PMTotalesBranch "86"
              FLTransmitir = True
              VLCambio% = False
            Else
              VLCambio% = True
              FLTransmitir = False
              PMFinTransaccion
              PMChequeaATX VGSqlConn
              'If VGTipoEjecucion% = CGReverso% And VLCodResp <> "0000" Then
              '  MsgBox "ALERTA, NO SE REVERSò EL PAGO EN ETAPA, SE PROCEDERA A REVERSAR LA SUMADORA", vbExclamation, "ERROR DE COMUNICACION"
              'End If
              VLconexion = "F"
              VLMensajeVerificados = ""
              VLDescripcion = ""
              VTIndicadorSum = 1     'Para que no grabe desglose
            End If
            Exit Function
          End If
        End If
    End If
    If Trim(Servicio.Text) = "2" Then  'ANBE AGUA todo el if
      If vlOpcion = "C" Or vlOpcion = "V" Then
        If Trim(Empresa) = "1708" Then  'Empresa ETAP AGUA 112906
          If FLConsEtapaCPS(2) = True Then
            Comision.Enabled = True
            FLTransmitir = True
            FCC51.Enabled = True
            FCC51.Refresh
          Else
            VLCambio% = True
            FLTransmitir = False
            VLMensajeVerificados = ""
            FCC51.Enabled = True
            FCC51.Refresh
            VLconexion = "F"
            VLDescripcion = ""
            'Proceso.Enabled = True
            Ref.Enabled = True
          End If
          Exit Function
        End If
      End If
      If vlOpcion = "T" Or vlOpcion = "P" Then
        If Trim(Empresa) = "1708" Then  'ANBE 120506 todo el if
          If FLPagoEtapaCPS(2) = True Then
            VTIndicadorSum = 1
            PMIniciaRegSum
            PMChequeaATX VGSqlConn
            'PMTotalesBranch "86"
            FLTransmitir = True
            VLCambio% = False
          Else
            VLCambio% = True
            FLTransmitir = False
            PMFinTransaccion
            PMChequeaATX VGSqlConn
            VLconexion = "F"
            VLMensajeVerificados = ""
            VLDescripcion = ""
            VTIndicadorSum = 1     'Para que no grabe desglose
          End If
          Exit Function
        End If
      End If
    End If
    'GAMC - 18/04/2008 - HASTA AQUI TODO BIEN PARA EL SOAT
    
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    arrParOut_init
    If Trim(Servicio.Text) = "5" And Trim(Empresa.Text) = "862" Then 'GAMC - 18/04/2008 - INI
        If Empresa_SOAT("2", 0) = "False" Then
            MsgBox "Error: No se realizo el pago", vbExclamation, App.Title
            Exit Function
        End If
    Else
        'Inicio de Paso de Valores al SP
        PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, VLTrn, "Trn", ""
        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
        PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
        PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, (Loc.Text), "Cheque", ""
        If Me.Cta.ClipText <> "" Then  'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
                PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
                'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
        Else
            PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
        End If
        'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
        PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
        PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "CompRet", "" 'RCA 09/08/20001
        PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, (Reten.Text), "Retencion", ""
        PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
        PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""  'ame 27.may.03
        PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", "" 'TPE Solo se incluye para el Reverso.
        PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
        PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
        PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Nombre, "Nombre", ""
        PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, (valor.Text), "Valor", ""
    
        'ref:esma04ago2004
        If Trim(Servicio) = "1" And Trim(Empresa) = "617" Then
            PMPasoValoresATX VGSqlConn, "@i_val_ret", 0, SQLMONEY, (VLRetencion), "Valor Retenido", ""
            PMPasoValoresATX VGSqlConn, "@i_val_imp", 0, SQLMONEY, (VLBaseImponible), "Valor base imponible", ""
            PMPasoValoresATX VGSqlConn, "@i_version", 0, SQLINT4, 1, "Version Proceso", ""
            PMPasoValoresATX VGSqlConn, "@o_empresa_switch", 1, SQLVARCHAR, (VLemp_switch), "Empresa switch", ""
            PMPasoValoresATX VGSqlConn, "@o_cod_trn_switch", 1, SQLVARCHAR, (VLtrn_switch), "Cod Trn switch", ""
            PMPasoValoresATX VGSqlConn, "@o_hora_pro", 1, SQLVARCHAR, (VLHoraProceso), "Fecha Hora", ""
            PMPasoValoresATX VGSqlConn, "@o_fecha_ef", 1, SQLVARCHAR, (VLFechaProceso), "Fecha Pago", ""
            
            If vlOpcion <> "C" Then
                PMPasoValoresATX VGSqlConn, "@i_empresa_switch", 0, SQLVARCHAR, (VLemp_switch), "Empresa switch", ""
                PMPasoValoresATX VGSqlConn, "@i_cod_trn_switch", 0, SQLVARCHAR, (VLtrn_switch), "Cod Trn switch", ""
                PMPasoValoresATX VGSqlConn, "@i_hora_pro", 0, SQLVARCHAR, (VLHoraProceso), "Fecha Hora", ""
                PMPasoValoresATX VGSqlConn, "@i_fecha_ef", 0, SQLVARCHAR, (VLFechaProceso), "Fecha Pago", ""
                PMPasoValoresATX VGSqlConn, "@i_sgsectrn", 0, SQLVARCHAR, (SGSecTrn$), "Sec Switch", ""
                PMPasoValoresATX VGSqlConn, "@i_codcaj", 0, SQLVARCHAR, (VLCodCaj), "Cod Caja", ""
            End If
        End If
        'ref:esma04ago2004
        VLCom$ = Comision.Text 'ANBE
         Select Case Trim(Servicio.Text)
         Case 1
             If vlOpcion = "C" Then
                 PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "G", "Empresa", ""
             Else
                 PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, vlOpcion, "Opcion", ""
                 'ref:esma04ago2004
                 If Trim(Empresa) = "617" Then
                     PMPasoValoresATX VGSqlConn, "@i_fecha_fac", 0, SQLVARCHAR, (VLFecEmi), "Fecha_Factura", ""
                     'FMV
                     'PMPasoValoresATX VGSqlConn, "@i_fecha_emi", 0, SQLVARCHAR, (VLFecEmi), "Fecha Emision Factura", ""
                     PMPasoValoresATX VGSqlConn, "@i_fac_imp", 0, SQLINT4, (VLFactImpagas), "Nro Facturas Impagas", ""
                     PMPasoValoresATX VGSqlConn, "@i_cedula", 0, SQLVARCHAR, (VLCedFactura), "CedRuc cliente", ""
                     PMPasoValoresATX VGSqlConn, "@i_categoria", 0, SQLVARCHAR, (VLcategoria), "Categoria de abonado", ""
                     PMPasoValoresATX VGSqlConn, "@i_sub_total", 0, SQLMONEY, (VLSubtotal), "Subtotal de Factura", ""
                     PMPasoValoresATX VGSqlConn, "@i_ciclo_fac", 0, SQLVARCHAR, (VLCicloFact), "Ciclo de Factura", ""
                     PMPasoValoresATX VGSqlConn, "@i_fec_ven", 0, SQLVARCHAR, (VLFecVen), "Fecha Vence Factura", ""
                     PMPasoValoresATX VGSqlConn, "@i_num_rubros", 0, SQLINT4, (VLNumRubros), "Nro Rubros", ""
                     If Len(Trim(VLDetRubros1)) > 1 Then
                         PMPasoValoresATX VGSqlConn, "@i_det_rubro1", 0, SQLVARCHAR, (VLDetRubros1), "Detalle de Rubro1", ""
                     End If
                     If Len(Trim(VLDetRubros2)) > 1 Then
                         PMPasoValoresATX VGSqlConn, "@i_det_rubro2", 0, SQLVARCHAR, (VLDetRubros2), "Detalle de Rubro2", ""
                     End If
                     If Len(Trim(VLDetRubros3)) > 1 Then
                         PMPasoValoresATX VGSqlConn, "@i_det_rubro3", 0, SQLVARCHAR, (VLDetRubros3), "Detalle de Rubro3", ""
                     End If
                 End If
             End If
             PMPasoValoresATX VGSqlConn, "@i_area", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
             
             If Trim(Proceso.Text) = "99" Then   'WMH
                 vtref$ = (Trim(Ref))
                 If Len(vtref$) < 7 Then
                     vtref$ = Mid("0000000", 1, 7 - Len(vtref$)) + vtref$
                 End If
                 PMPasoValoresATX VGSqlConn, "@i_telefono", 0, SQLVARCHAR, vtref$, "Codigo", ""
             Else
                 PMPasoValoresATX VGSqlConn, "@i_telefono", 0, SQLVARCHAR, (Trim(Ref)), "Codigo", ""
             End If
             If Empresa = 617 Then    'Impresion de la Factura de Andinatel.
                 PMPasoValoresATX VGSqlConn, "@i_num_factura", 0, SQLVARCHAR, VLFactura, "Factura", ""
             Else
                 PMPasoValoresATX VGSqlConn, "@i_num_factura", 0, SQLVARCHAR, txtfactura.Text, "Factura", ""
             End If
             PMPasoValoresATX VGSqlConn, "@i_contrato_telefono", 0, SQLVARCHAR, txtContrato.Text, "Contrato", ""
             PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
             PMPasoValoresATX VGSqlConn, "@i_valor", 0, SQLMONEY, (efe.Text), "Efectivo", ""
             PMPasoValoresATX VGSqlConn, "@i_producto", 0, SQLCHAR, (CboTipCta.Text), "CboTipCta", ""
             PMPasoValoresATX VGSqlConn, "@o_mensaje", 1, SQLVARCHAR, "", "Mensaje", ""
             PMPasoValoresATX VGSqlConn, "@o_num_factura", 1, SQLVARCHAR, txtfactura.Text, "Mensaje", ""
             PMPasoValoresATX VGSqlConn, "@o_contrato_telefono", 1, SQLVARCHAR, txtContrato.Text, "Mensaje", ""
             
             If Trim(Empresa) = "3" Then
               'ANBE 060607 para impresion de reverso
               PMPasoValoresATX VGSqlConn, "@i_fechavenc", 0, SQLVARCHAR, VLFechaVenc, "fechavenc", ""
               PMPasoValoresATX VGSqlConn, "@i_vmes", 0, SQLVARCHAR, 0, "vmes", ""
               PMPasoValoresATX VGSqlConn, "@i_vacum", 0, SQLVARCHAR, 0, "vacum", ""
               PMPasoValoresATX VGSqlConn, "@i_vtotal", 0, SQLVARCHAR, valor, "vtotal", ""
               
               '-->lfcm 14-agosto-2008 Agregar Tipo de Servicio que se está cancelando
               VLOperacion = Me.serpac.Text   'lfcm 14-agosto-2008
               PMPasoValoresATX VGSqlConn, "@i_poperacion", 0, SQLVARCHAR, (VLOperacion), "Poperacion", ""
               PMPasoValoresATX VGSqlConn, "@i_poperacion2", 0, SQLVARCHAR, Me.sal_serpac.Caption, "Poperacion2", ""    'lfcm 04-agosto-2008
               '--<lfcm 14-agosto-2008 Agregar Tipo de Servicio que se está cancelando
               
               
               'PMPasoValoresATX VGSqlConn, "@i_costo", 0, SQLMONEY, (VLChq_com), "comisiom_che", ""
               VLCom$ = VLEfe_com
               PMPasoValoresATX VGSqlConn, "@i_che_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
               If VLCTGP = "S" And VLPABOP = "S" Then
                 lblValor(10).Visible = False: txtValFec.Visible = False
                 lblValor(11).Visible = False: txtValDeu.Visible = False
               End If
             End If
         Case 3
             PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, vlOpcion, "Empresa", ""
             PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
             PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, (Trim(Ref)), "Codigo", ""
             PMPasoValoresATX VGSqlConn, "@i_digver", 0, SQLCHAR, (Mid(Trim(Ref), longuitud%, 1)), "DigVer", ""
             PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Pago_Val.Text), "Efectivo", ""
             PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (efe.Text), "Efectivo", ""
             PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (CboTipCta.Text), "CboTipCta", ""
             PMPasoValoresATX VGSqlConn, "@o_digver", 1, SQLCHAR, "0", "DigVer", ""
         Case 4
             If Trim$(VLTramaCodigos) = "" Then
                 PMPasoValoresATX VGSqlConn, "@i_codref", 0, SQLVARCHAR, "ALL", "codref", ""  'hy-12-oct-2005
             Else
                 PMPasoValoresATX VGSqlConn, "@i_codref", 0, SQLVARCHAR, VLTramaCodigos, "codref", ""  'hy-12-oct-2005
             End If
             PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, vlOpcion, "Empresa", ""
             PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
             PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, (Trim(Ref)), "Codigo", ""
             PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
             PMPasoValoresATX VGSqlConn, "@i_efe", 0, SQLMONEY, (efe.Text), "Efectivo", ""
             PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (CboTipCta.Text), "CboTipCta", ""
             PMPasoValoresATX VGSqlConn, "@o_oficina_nom", 1, SQLVARCHAR, Nombre_oficina, "Nombre_oficina", ""
             PMPasoValoresATX VGSqlConn, "@o_fecha_tope", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha", ""
         Case Else
             PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, vlOpcion, "Empresa", ""
             PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
             PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, (Trim(Ref)), "Codigo", ""
             PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
             PMPasoValoresATX VGSqlConn, "@i_efe", 0, SQLMONEY, (efe.Text), "Efectivo", ""
             
             If Me.Cta.ClipText <> "" Then 'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
             PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (CboTipCta.Text), "CboTipCta", ""
             'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
             Else
                PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (VLTipCta_com), "CboTipCta", ""
             End If
             'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
             
             'dolayas AMAGUA INI AMAGUA-AP-SGC00028642
             If Servicio = "2" And Empresa.Text = "6" Then
              PMPasoValoresATX VGSqlConn, "@o_minimo", 1, SQLMONEY, Minimo.Text, "Minimo", "" 'dolayas
             Else
              PMPasoValoresATX VGSqlConn, "@o_minimo", 1, SQLMONEY, "", "Minimo", "" 'dolayas
             End If
             'dolayas AMAGUA FIN AMAGUA-AP-SGC00028642

         End Select
         
         If Trim(Servicio) = "1" And Trim(Empresa) = "3" Then
             PMPasoValoresATX VGSqlConn, "@o_fecha_atx", 1, SQLVARCHAR, "**********", "Fecha Pago2", ""
         Else
             PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
         End If
         PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
         PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, (VTIndicadorSum), "SecTrn", ""
         PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
         

         'PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (Comision.Text), "Comision", ""    '/*JPM 11112004*/  'ANBE 062607
         PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, VLCom$, "Comision", ""    '/*JPM 11112004*/
         PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
         PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
         PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, (VLDeb_com), "Com. Cheques", ""
         
         PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (Comision.Text), "Mensaje", ""  '/*JPM 11112004*/
         
         PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "AutorizacionSRI", ""   '/*JPM 08122004*/
         PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "Stk", ""              '/*JPM 08122204*/
         
         If Trim(Empresa) = "1372" Or Trim(Empresa) = "1373" Then
            PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, 0, "BaseImpo", ""  'msilvag
            PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, 0, "Impuesto", ""  'msilvag
         End If
         
         If Trim(Servicio) = "1" And Trim(Empresa) = "617" Then
             PMPasoValoresATX VGSqlConn, "@o_datos_emp", 1, SQLVARCHAR, Space(250), "Datos Empresa", ""
             'PMPasoValoresATX VGSqlConn, "@o_secpartefija", 1, SQLVARCHAR, Space(30), "SecParteFija", ""      'lfcm 09-octubre-2007"
         End If
         
         'Parametro nuevo de Cuenta Cobro Tope de (Andinatel)     lfcm 18-julio-2008
         If Trim(Servicio) = "1" And Trim(Empresa) = "617" And vlOpcion = "T" Then
            PMPasoValoresATX VGSqlConn, "@o_cta_cobro_tope", 1, SQLVARCHAR, Space(15), "Mensaje", ""
         End If
         
         'If (Servicio = 3 And (Empresa = 1719 Or Empresa = 1)) Then   'ANBE   'hy-categ incluir empresa 1
         If (Servicio = 3 And (Empresa = 1719 Or Empresa = 1 Or Empresa = 1127 Or Empresa = 144)) Then  'ANBE   'hy-categ incluir empresa 1; JPM incluir 144
             'lfcm 06-diciembre-2006
             PMPasoValoresATX VGSqlConn, "@i_ind_costo", 0, SQLVARCHAR, "S", "", ""
             PMPasoValoresATX VGSqlConn, "@o_costo", 1, SQLMONEY, "0", "Comision", ""
             PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
             PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
         End If
         
         If Servicio = 6 Then  'hy-19-enero-2007 incluir servicio 6
             'lfcm 06-diciembre-2006
             PMPasoValoresATX VGSqlConn, "@i_ind_costo", 0, SQLVARCHAR, "S", "", ""
             PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
             PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
             PMPasoValoresATX VGSqlConn, "@i_cps", 0, SQLVARCHAR, "N", "indcps", ""
         End If
         
         '->hy-31-ene-2005
         If VLCTGP = "S" Then
             'Si esta activada la contingencia
             'entonces esta fuera de linea
             VLOnLine = "N"
         Else
             VLOnLine = "S"
         End If
         If Trim(Servicio) = "1" And Trim(Empresa) = "3" Then
             PMPasoValoresATX VGSqlConn, "@i_online", 0, SQLCHAR, VLOnLine, "On line", ""
             PMPasoValoresATX VGSqlConn, "@i_hora_pac", 0, SQLCHAR, Format$(Mid$(VGArregloSwitch(1), 11, 8), "hhmmss"), "Fechapac", ""
             PMPasoValoresATX VGSqlConn, "@i_fecha_pac", 0, SQLCHAR, Mid$(VGArregloSwitch(2), 7, 4) + Mid$(VGArregloSwitch(2), 1, 2) + Mid$(VGArregloSwitch(2), 4, 2), "Horapac", ""
             '-->hy-09-agosto-2005
             If VLCTGP = "S" Then
                 PMPasoValoresATX VGSqlConn, "@i_saldo_credito", 0, SQLMONEY, 0, "SaldoCredito", ""
             Else
                 PMPasoValoresATX VGSqlConn, "@i_saldo_credito", 0, SQLMONEY, (VLValSaldoCredito), "SaldoCredito", ""
             End If
             '-->hy-09-agosto-2005
             PMPasoValoresATX VGSqlConn, "@i_piloto", 0, SQLCHAR, "S", "Piloto", ""
         End If
         If Trim(Servicio) = "1" And Trim(Empresa) = "3" And (vlOpcion = "P" Or vlOpcion = "T") Then
             PMPasoValoresATX VGSqlConn, "@i_fecha_fac", 0, SQLCHAR, Mid(VlMes, 2, 7), "Fechafact", ""
         End If
         '<-hy-31-ene-2005
         '->hy-15-feb-2005
         'Para el caso de recaudacion de los colegios configurar el parametro
         'de retorno con el numero de la nota de venta
         If Trim(Servicio.Text) = "4" Then
             PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, Space(15), "Nota_venta", ""
             PMPasoValoresATX VGSqlConn, "@o_forma_pago", 1, SQLVARCHAR, Space(15), "Forma_Pago", "" 'CRR 09/16/2005
         End If
        
         '<-hy-15-feb-2005
         '<--
         '/* ----> JPM 16122004 enviar parametros de identificacion*/
         '/* IMPORTANTE: txtcedula.visible permite reversar cambios por la cedula
         If vlOpcion = "T" And txtCedula.Visible Then
           
           Select Case Trim(Servicio)
             Case "1":
                Select Case Trim(Empresa)     'Servicio Telefono
                  Case "3":   VTIndexOutPutId = 13 'Pacifictel
                  Case "617": VTIndexOutPutId = 18 'Andinatel
                End Select
             Case "2":  VTIndexOutPutId = 11  'Servicio Agua
             Case "3":  VTIndexOutPutId = 11  'Servicio Luz
             Case "4":  VTIndexOutPutId = 12  'Servicio Colegio
             Case "5":  VTIndexOutPutId = 11  'Servicio Privado
           End Select
           PMPasoValoresATX VGSqlConn, "@i_tipo_id", 0, SQLVARCHAR, Mid(cmbTid.Text, 1, 1), "Tipo Identificacion", "" '/*JPM 08122004*/
           PMPasoValoresATX VGSqlConn, "@i_identificacion", 0, SQLVARCHAR, Trim(txtCedula.Text), "Identificacion", ""               '/*JPM 08122204*/
           PMPasoValoresATX VGSqlConn, "@o_tipo_id", 1, SQLVARCHAR, Space(1), "Tipo Identificacion", ""   '/*JPM 08122004*/
           PMPasoValoresATX VGSqlConn, "@o_identificacion", 1, SQLVARCHAR, Space(13), "Identificacion", ""              '/*JPM 08122204*/
         End If
         '/*<--- fin envio parametro de identificacion */
         
         'lfcm - 30-enero-2007
         If (Empresa = 1719 And Servicio = 3) Or (Servicio = 6) Then
             PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, Space(15), "Nota_venta", ""
             'lfcm 11-dic-2006
             PMPasoValoresATX VGSqlConn, "@o_fecha_emision", 1, SQLVARCHAR, Space(15), "Fecha_Emision", ""
         End If
         'GAMC - 18/04/2008 - HASTA AQUI PASO DE VALORES
    End If  'GAMC - 18/04/2008 - FIN
    
    If Trim(Servicio) = 2 Then  'IVA - dpereirv
        PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
        PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
        PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
        If Empresa.Text = "8269" And vlOpcion = "C" Then                              'JPM Interagua TRB -->
          PMPasoValoresATX VGSqlConn, "@i_ind_costo", 0, SQLVARCHAR, "S", "", ""
          PMPasoValoresATX VGSqlConn, "@o_comis_trb", 1, SQLMONEY, "0", "Comision", ""
        End If                                                                        '<-- JPM Interagua TRB
    End If
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", VLProcedure, True, "Transaccion Ok", "S", "N", VLReverso$, "51", "S", "S") = True Then
       
       If Trim(Servicio.Text) = "4" Then  'CRR Grid de las deudas
          PMMapeaGridATX VGSqlConn, grdDetalle, False 'CRR Grid de las deudas
          If vlOpcion = "T" And VLModoTrabajo = "S" Then 'cmeg 09Nov2005 Se mapea 2 veces ya q un stored procedure interno ya retorna un select previamente
            Me.grdDetalle.Row = 1
            Me.grdDetalle.Col = 1
            While Trim(Me.grdDetalle.Text) = ""
                PMMapeaGridATX VGSqlConn, grdDetalle, False
            Wend

          End If
          If vlOpcion <> "C" And VLModoTrabajo = "S" Then 'cmeg 09Nov2005
            PLArmaTrama
          ElseIf VLModoTrabajo = "C" Then 'cmeg 09Nov2005
            PLArmaTrama
          End If
       End If  'CRR Grid de las deudas
        If vlOpcion <> "C" And VLCTGP = "S" And VLPABOP = "S" And Empresa = "3" Then  'ANBE 062607
          VLSerie_Secuencia = FMRetParamATX(VGSqlConn, 11)
        End If
       If vlOpcion = "C" Then
          
          '************************ TRANSACCION DE CONSULTA **********************
            If VLOnLine = "N" Then 'hy-31-ene-2005
                Nombre.Text = Mid$(FMRetParamATX(VGSqlConn, 1), 1, 30)
            '-->hy-31-ene-2005
            Else
                If Trim$(Servicio.Text) <> "1" Then
                    Nombre.Text = Mid$(FMRetParamATX(VGSqlConn, 1), 1, 30)
                    If Not (Servicio.Text = "2" And Trim(Empresa.Text) = "8269") Then   'JPM TRB IWS -->
                      Comision = FMRetParamATX(VGSqlConn, 11)
                    End If                                                              '<-- JPM TRB IWS
                    NOTAVENTA = FMRetParamATX(VGSqlConn, 12)        'lfcm 08-dic-2006
                End If
            End If
            Comision.Enabled = True  'hy-19-enero-2007
            '<--hy-31-ene-2005
            valor.Text = FMRetParamATX(VGSqlConn, 2)
            Select Case Trim(Servicio.Text)
            Case 1 'Servicio telefonos
                'Consulta por medio del switch
                'VLOnLine = FMRetParamATX(VGSqlConn, 13)
                Fecha = Mid(FMRetParamATX(VGSqlConn, 3), 9, 10) 'ANBE
                VLFechaVenc = Fecha
                Comision.Text = FMRetParamATX(VGSqlConn, 10) '/*JPM 11112004*/
                VLautoriSri = FMRetParamATX(VGSqlConn, 11)   '/*JPM 08122004*/
                VLFecvenSRI = FMRetParamATX(VGSqlConn, 12)   '/*JPM 08122004*/
                If VLOnLine = "S" Then
                    i% = FMBuscaMatrizSwitch("3", "C")
                    VLemp_switch = VGMatrizSwitch(2, i%)
                    VLtrn_switch = VGMatrizSwitch(3, i%)
                    VLHoraProceso = VGArregloSwitch(1)
                    VLFechaProceso = VGArregloSwitch(2)
                    VLFechaCorte = VLFechaProceso
                    VGArregloSwitch(3) = FMRetParamATX(VGSqlConn, 7)
                    SGSecTrn$ = VGArregloSwitch(3)
                    VLSecTrnCorr = 0
                    tDatosEmpresa$ = VGArregloSwitch(5)
                    VLDatosEmpresa() = Split(tDatosEmpresa$, ";", -1, 1)
                    VLCodCaj = VLDatosEmpresa(0)
                    VLEmpruc = VLDatosEmpresa(1)
                    VLEmpRes = VLDatosEmpresa(2)
                    VLEmpaut = VLDatosEmpresa(3)
                    VLEmpval = VLDatosEmpresa(4)
                    VLEmpDir = VLDatosEmpresa(5)
                    Proceso.Enabled = False
                    Ref.Enabled = False
                    FCC51.Enabled = False
                    If FLConexionLocalPAC("C") = False Then
                        VLCambio% = True
                        FLTransmitir = False
                        VLMensajeVerificados = ""
                        FCC51.Enabled = True
                        FCC51.Refresh
                        VLconexion = "F"
                        VLDescripcion = ""
                        Proceso.Enabled = True
                        Ref.Enabled = True
                    Else
                        FLTransmitir = True
                        FCC51.Enabled = True
                        FCC51.Refresh
                    End If
                    PMChequeaATX VGSqlConn
                    If FMRetStatusATX(VGSqlConn) <> 0 Then
                        FLTransmitir = False
                        VLCambio% = True
                        VTIndicadorSum = 0
                        If Ref.Enabled Then
                            Ref.SetFocus
                        End If
                    End If
                    PMFinTransaccion
                    Exit Function
                Else
                    Nombre.Text = Mid$(FMRetParamATX(VGSqlConn, 1), 1, 30)
                    valor.Text = FMRetParamATX(VGSqlConn, 2)
                    VlMes = FMRetParamATX(VGSqlConn, 3)
                    txtfactura.Text = FMRetParamATX(VGSqlConn, 4)
                    txtContrato.Text = FMRetParamATX(VGSqlConn, 5)
                End If
            'ref:esma04ago2004
            Case 2 'agua        ''''
                Minimo = FMRetParamATX(VGSqlConn, 3)         '/*JPM 11112004*/
                If Trim(Empresa.Text) = "8269" Then           'JPM TRB IWS -->
                  Comision = FMRetParamATX(VGSqlConn, 14)
                Else                                          '<-- JPM TRB IWS
                  Comision.Text = FMRetParamATX(VGSqlConn, 8)  '/*JPM 11112004*/
                End If                                        'JPM TRB IWS
                VLautoriSri = FMRetParamATX(VGSqlConn, 9)    '/*JPM 08122004*/
                VLFecvenSRI = FMRetParamATX(VGSqlConn, 10)   '/*JPM 08122004*/
                VlbaseImp = FMRetParamATX(VGSqlConn, 12) 'dpereirv
                VLiva = FMRetParamATX(VGSqlConn, 13) 'dpereirv
            Case 3 'luz
                'lfcm 06-diciembre-2006
                If Empresa = 1719 And Servicio = 3 Then
                    'Para empresa EMELMANABI oculto los siguiente controles
                    'Label1(0).Visible = False
                    'Comprob.Visible = False
                    'Label1(1).Visible = False
                    'Reten.Visible = False
                    
                    Comision.Text = FMRetParamATX(VGSqlConn, 11)             'lfcm 07-dic-2006
                    Me.txt_fecha_emision = FMRetParamATX(VGSqlConn, 13)      'lfcm 11-dic-2006
                
                Else
                    Ref = Ref + FMRetParamATX(VGSqlConn, 3)
                End If
                
                If Empresa <> 1719 Then
                    Comision.Text = FMRetParamATX(VGSqlConn, 8) '/*JPM 11112004*/
                End If
                
                VLautoriSri = FMRetParamATX(VGSqlConn, 9)   '/*JPM 08122004*/
                VLFecvenSRI = FMRetParamATX(VGSqlConn, 10)  '/*JPM 08122004*/
                
                If Comision > 0 Then
                    Comision.Enabled = True                 'Habilito el control de la comision si es mayor a cero
                End If
                
            Case 4 'colegio
                Nombre_oficina = FMRetParamATX(VGSqlConn, 3)
                Fecha = Format(FMRetParamATX(VGSqlConn, 4), "mm/dd/yyyy")
                If Nombre <> "0" Then 'CRR 09/20/2005
                   Forma_Pago = FMRetParamATX(VGSqlConn, 13) 'CRR 09/16/2005
                End If
                Comision.Text = FMRetParamATX(VGSqlConn, 9) '/*JPM 11112004*/
                VLautoriSri = FMRetParamATX(VGSqlConn, 10)  '/*JPM 08122004*/
                VLFecvenSRI = FMRetParamATX(VGSqlConn, 11)  '/*JPM 08122004*/
            'msilvag inicio
            Case 5 'otros hy-19-enero-2007 inclusion servicio 6
                Minimo = FMRetParamATX(VGSqlConn, 3)
                Comision.Text = FMRetParamATX(VGSqlConn, 8)
                VLautoriSri = FMRetParamATX(VGSqlConn, 9)
                VLFecvenSRI = FMRetParamATX(VGSqlConn, 10)
                If Me.Empresa = "1372" Or Me.Empresa = "1373" Then
                    VlbaseImp = FMRetParamATX(VGSqlConn, 11)
                    VLiva = FMRetParamATX(VGSqlConn, 12)
                End If
            'msilvag Fin
            Case 6 'otros hy-19-enero-2007 inclusion servicio 6
                Minimo = FMRetParamATX(VGSqlConn, 3)
                Comision.Text = FMRetParamATX(VGSqlConn, 8) '/*JPM 11112004*/
                VLautoriSri = FMRetParamATX(VGSqlConn, 9)   '/*JPM 08122004*/
                VLFecvenSRI = FMRetParamATX(VGSqlConn, 10)  '/*JPM 08122004*/
            Case Else
                Minimo = FMRetParamATX(VGSqlConn, 3)
            End Select
            'Total.Text = CCur(Valor.Text) + CCur(Comision.Text)
        ElseIf vlOpcion = "V" Then   '/*JPM 23112004*/
            '******************* CONSULTA DE VALOR COMISION *********************
            If Trim(Empresa) = "617" Then
              Comision.Text = FMRetParamATX(VGSqlConn, 15) '/*JPM 11112004*/
              VLautoriSri = FMRetParamATX(VGSqlConn, 16)   '/*JPM 08122004*/
              VLFecvenSRI = FMRetParamATX(VGSqlConn, 17)   '/*JPM 08122004*/
              VLSecParteFija = FMRetParamATX(VGSqlConn, 18)      'lfcm 09-octubre-2007
            Else
              Comision.Text = FMRetParamATX(VGSqlConn, 10) '/*JPM 11112004*/
              VLautoriSri = FMRetParamATX(VGSqlConn, 11)   '/*JPM 08122004*/
              VLFecvenSRI = FMRetParamATX(VGSqlConn, 12)   '/*JPM 08122004*/
            End If
        Else
          If vlOpcion = "T" And Trim(Empresa) = "8269" Then  'JPP TRB IWS 8269 -->
                SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
                VlbaseImp = FMRetParamATX(VGSqlConn, 12)
                VLiva = FMRetParamATX(VGSqlConn, 13)
          End If                                             '<-- JPP TRB IWS 8269
            '/*JPM 16122004 recuperar identificacion*/
            'IMPORTANTE: txtcedula.visible permite reversar cambios por cedula
            If Trim(txtCedula.Text) = "" And txtCedula.Visible Then
              Select Case UCase(FMRetParamATX(VGSqlConn, VTIndexOutPutId))
                Case "C":  cmbTid.ListIndex = 0
                Case "R":  cmbTid.ListIndex = 1
                Case "P":  cmbTid.ListIndex = 2
                Case Else: cmbTid.ListIndex = -1
              End Select
              txtCedula = FMRetParamATX(VGSqlConn, VTIndexOutPutId + 1)
              VLIdEsValida = True 'permitir la impresion
            End If
            '/*JPM 16122004 <-- fin recuperar*/
            
            '************************ TRANSACCION DE PAGO **********************
            'TPE ------> Sumadora
            Select Case Trim(Servicio.Text)
            Case 1 'telefono
                'ref:esma17ago2004
                Select Case Trim(Empresa)
                '->hy-31-ene-2005
                Case "3" 'empresa pacifictel
                    '/*JPM 16122004 recuperar identificacion*/
                    If Trim(txtCedula.Text) = "" Then
                      Select Case UCase(FMRetParamATX(VGSqlConn, 13))
                        Case "C":  cmbTid.ListIndex = 0
                        Case "R":  cmbTid.ListIndex = 1
                        Case "P":  cmbTid.ListIndex = 2
                        Case Else: cmbTid.ListIndex = -1
                      End Select
                      txtCedula = FMRetParamATX(VGSqlConn, 14)
                      VLIdEsValida = True 'permitir la impresion
                    End If
                    '/*JPM 16122004 <-- fin recuperar*/
                    'VLOnLine = FMRetParamATX(VGSqlConn, 13)
                    If VLOnLine = "S" Then
                        i% = FMBuscaMatrizSwitch("3", "P")
                        VLemp_switch = VGMatrizSwitch(2, i%)
                        VLtrn_switch = VGMatrizSwitch(3, i%)
                        VLHoraProceso = VGArregloSwitch(1)
                        VLFechaProceso = VGArregloSwitch(2)
                        VLFechaCorte = FMRetParamATX(VGSqlConn, 6)
                        SGSecTrn$ = FMRetParamATX(VGSqlConn, 7)
                        If VGTipoEjecucion% = CGReverso% Then
                            VLSecTrnCorr = DatoSwitch("@o_ssn")
                            VLSecTrnCorr = Format(StrReverse(Mid(StrReverse(Trim(DatoSwitch("@o_ssn"))), 1, 6)), "00######")
                        End If
                        'TOMAR EL SSN DE LA TRX. DE SERVICIO
                        SGSecTrn2$ = FMRetParamATX(VGSqlConn, 7)
                        VGArregloSwitch(3) = FMRetParamATX(VGSqlConn, 7)
                        VLHorario = FMRetParamATX(VGSqlConn, 9)
                        'VLFechaCorte = VLFechaProceso
                        tDatosEmpresa$ = VGArregloSwitch(5)
                        VLDatosEmpresa() = Split(tDatosEmpresa$, ";", -1, 1)
                        VLCodCaj = VLDatosEmpresa(0)
                        VLEmpruc = VLDatosEmpresa(1)
                        VLEmpRes = VLDatosEmpresa(2)
                        VLEmpaut = VLDatosEmpresa(3)
                        VLEmpval = VLDatosEmpresa(4)
                        VLEmpDir = VLDatosEmpresa(5)
                        Call FLInactiva(False)
                        If FLConexionLocalPAC(vlOpcion) = False Then
                            VLCambio% = True
                            FLTransmitir = False
                            PMFinTransaccion
                            PMChequeaATX VGSqlConn
                            'EJECUTAR REVERSO FORZADO
                            If VGTipoEjecucion% <> CGReverso% And VLCodResp <> "0000" Then
                                Call FLRevForzadoPAC(SGSecTrn2$)
                                Call FLInactiva(True)
                                FLTransmitir = False
                                Exit Function
                            End If
' ANBE 070307
'                            'SI ES REVERSO Y EL ERROR FUE MALO, REVERSAR SUMADORA
'                            If VGTipoEjecucion% = CGReverso% And VLCodResp <> "0000" Then
'                                MsgBox "ALERTA, NO SE REVERSò EL PAGO EN PACIFICTEL, SE PROCEDERA A REVERSAR LA SUMADORA", vbExclamation, "ERROR DE COMUNICACION"
'                            End If
'                            VLconexion = "F"
'                            VLMensajeVerificados = ""
'                            VLDescripcion = ""
'                            VTIndicadorSum = 1     'Para que no grabe desglose
                            FLTransmitir = True
                        Else
                            'TPE ------> Sumadora
                            VTIndicadorSum = 1
                            PMIniciaRegSum
                            PMChequeaATX VGSqlConn
                            PMTotalesBranch "86"
                            FLTransmitir = True
                            VLCambio% = False
                        End If
                    Else
                        'Si es pacifictel pero fuera de linea
                        VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 6), "mm/dd/yyyy")         'ref:esma03Sep2004
                        SGSecTrn$ = FMRetParamATX(VGSqlConn, 7)
                        VLHorario = FMRetParamATX(VGSqlConn, 9)
                    End If
                '<-hy-31-ene-2005
                Case "617" 'empresa andinatel
                    VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatriz())
                    'Rubros de Factura
                    For i = 1 To VTResult%
                        tipo_rubro = Trim$(vtmatriz(0, i))
                        formato_rubro = ""
                        If tipo_rubro <> "" Then
                            formato_rubro = Mid(vtmatriz(1, i), 1, 30) & ":" & Space(34 - Len(Mid(vtmatriz(1, i), 1, 30))) & FMEspaciosATX(FMObtenerSimbolo("51") & Format(Trim(vtmatriz(2, i)), VGFormatoMoney), 20, CGJustificacionDerecha)
                            'Debug.Print formato_rubro
                            Select Case tipo_rubro
                            Case "1"  'Basico
                                VLrubro1 = formato_rubro
                            Case "2"  'Cons loc * cont
                                VLrubro2 = formato_rubro
                            Case "3"  'llamada local con detalle
                                VLrubro3 = formato_rubro
                            Case "5"  'llamada reg auto
                                VLrubro5 = formato_rubro
                            Case "6"  'llamada nac auto
                                VLrubro6 = formato_rubro
                            Case "7"  'serv suple
                                VLrubro7 = formato_rubro
                            Case "500" 'DEVOLUCION IVA TERCERA EDAD
                                VLrubro500 = formato_rubro
                            Case "501" 'DEVOLUCION ICE TERCERA EDAD
                                VLrubro501 = formato_rubro
                            Case "27"  'desc min incluy
                                VLrubro27 = formato_rubro
                            Case "9991"   'Rubros Acumulados    'lfcm 12-noviembre-2007
                                VLrubro9991 = formato_rubro     'lfcm 12-noviembre-2007
                                VLValRubro9994 = vtmatriz(2, i)
                            Case "9992" 'iva
                                VLrubro9992 = formato_rubro
                            Case "9993" 'ice
                                VLrubro9993 = formato_rubro
                            Case "9995"  'total planilla
                                VLrubro9995 = formato_rubro
                            End Select
                        End If
                    Next i
                    
                    VLemp_switch = Trim(FMRetParamATX(VGSqlConn, 3))
                    VLtrn_switch = Trim(FMRetParamATX(VGSqlConn, 4))
                    VLHoraProceso = Trim(FMRetParamATX(VGSqlConn, 5))
                    VLFechaProceso = Trim(FMRetParamATX(VGSqlConn, 6))
                    
                    'Parametro de Retorno de Cuenta Cobro Tope(Andinatel) lfcm 18-julio-2008
                    VLCtaCobroTope = Trim(FMRetParamATX(VGSqlConn, 18))
                    
                    'OJO CON ESTO X EL PAGO
                    'SGSecTrn$ = FMRetParamATX(VGSqlConn, 11)
                    If VGTipoEjecucion% = CGReverso% Then
                        SGSecTrn$ = FMRetParamATX(VGSqlConn, 11)
                        VLSecTrnCorr = DatoSwitch("@i_sgsectrn")
                        VLSecTrnCorr = Format(StrReverse(Mid(StrReverse(Trim(DatoSwitch("@i_sgsectrn"))), 1, 6)), "00######") 'FMV ANDINATEL 11292004
                    End If
                    'TOMAR EL SSN DE LA TRX. DE SERVICIO
                    SGSecTrn2$ = FMRetParamATX(VGSqlConn, 11)
                    'VLSecTrnCorr = FMRetParamATX(VGSqlConn, 12)
                    VLHorario = FMRetParamATX(VGSqlConn, 13)
                    VLFechaCorte = VLFechaProceso
                    Call FLInactiva(False)
                    If FLConexionLocal(vlOpcion) = False Then
                        VLCambio% = True
                        FLTransmitir = False
                        PMFinTransaccion
                        PMChequeaATX VGSqlConn
                        'FMV EJECUTAR REVERSO FORZADO
                        If VGTipoEjecucion% <> CGReverso% And VLCodResp <> "0000" Then
                            Call FLRevForzado(SGSecTrn2$)
                            Call FLInactiva(True)
                            FLTransmitir = False
                            Exit Function
                        End If
                        'FMV SI ES REVERSO Y EL ERROR FUE MALO, REVERSAR SUMADORA
                        If VGTipoEjecucion% = CGReverso% And VLCodResp <> "0000" Then
                            MsgBox "ALERTA, NO SE REVERSò EL PAGO EN ANDINATEL, SE PROCEDERA A REVERSAR LA SUMADORA", vbExclamation, "ERROR DE COMUNICACION"
                        End If
                        VLconexion = "F"
                        VLMensajeVerificados = ""
                        VLDescripcion = ""
                        VTIndicadorSum = 1     'Para que no grabe desglose
                        FLTransmitir = True
                    Else
                        'TPE ------> Sumadora
                        VTIndicadorSum = 1
                        PMIniciaRegSum
                        PMChequeaATX VGSqlConn
                        PMTotalesBranch "86"
                        FLTransmitir = True
                        VLCambio% = False
                    End If
                Case Else 'Otras empresas
                    VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 6), "mm/dd/yyyy")         'ref:esma03Sep2004
                    SGSecTrn$ = FMRetParamATX(VGSqlConn, 7)
                    VLHorario = FMRetParamATX(VGSqlConn, 9)
                End Select
            'ref:esma17ago2004
            Case 4 'Colegio
                SGSecTrn$ = FMRetParamATX(VGSqlConn, 6)
                VLHorario = FMRetParamATX(VGSqlConn, 8)
                VLNotaVenta = FMRetParamATX(VGSqlConn, 12)  'hy-15-feb-2005
            Case Else       '2 agua, 3 luz, 5 otros
                'gamc - 19/04/2008 - Se cambio el orden de los parmetros de salida
                If Servicio.Text = "5" And Empresa.Text = "862" Then
                    SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
                Else
                    SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
                End If
                VLHorario = FMRetParamATX(VGSqlConn, arrParOut_get("@o_horario"))
            End Select
            Select Case Trim(Servicio.Text)
            Case 1 'telefono
                'VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 6), "mm/dd/yyyy")         'ref:esma03Sep2004
                'VLFechaCorte = FormatDateTime(FMRetParamATX(VGSqlConn, 6), vbShortDate)
            Case 4 'colegio
                VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 5), "mm/dd/yyyy")
                'VLFechaCorte = FormatDateTime(FMRetParamATX(VGSqlConn, 5), vbShortDate)
            Case 2, 3, 5, 6 'agua,luz,otros servicios    hy-19-enero-2007 inclusion del servicio 6
                'gamc - 19/04/2008 - Se cambio el orden de los parmetros de salida
                If Servicio.Text = "5" And Empresa.Text = "862" Then
                    VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 1), "mm/dd/yyyy")
                Else
                    VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 4), "mm/dd/yyyy")
                End If
                If Empresa = 1719 And Servicio = 3 Then    'lfcm 08-dic-2006
                    VLSerie_Secuencia = FMRetParamATX(VGSqlConn, 12)
                Else
                    If Servicio = 6 Then
                        VLSerie_Secuencia = FMRetParamATX(VGSqlConn, 11)
                    End If
                End If
                'VLFechaCorte = CVar(VLFechaCorte)
                'VLFechaCorte = FMRetParamATX(VGSqlConn, 4)
                'VLFechaCorte = FormatDateTime(FMRetParamATX(VGSqlConn, 4), vbShortDate)
            End Select
            '--> ref:esma04ago2004
            If VLconexion <> "F" Then
                VTIndicadorSum = 1
                PMIniciaRegSum
            End If
            '<-- ref:esma04ago2004
        End If
        '--> ref:esma04ago2004
        If VLconexion <> "F" Then
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir = True
            VLCambio% = False
        End If
        '<-- ref:esma04ago2004
    Else 'Else del if del transmitir
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir = False
        'TPE ------> Sumadora
        Select Case Trim(Servicio.Text)
        Case 1 'telefono
            Select Case Trim(Empresa)
            Case "617" 'empresa andinatel
                'SGSecTrn$ = FMRetParamATX(VGSqlConn, 7)
                VTIndicadorSum = FMRetParamATX(VGSqlConn, 12)
            Case Else 'otras empresas
                SGSecTrn$ = FMRetParamATX(VGSqlConn, 7)
                VTIndicadorSum = FMRetParamATX(VGSqlConn, 8)
            End Select
        Case 4 'colegio
            SGSecTrn$ = FMRetParamATX(VGSqlConn, 6)
            VTIndicadorSum = FMRetParamATX(VGSqlConn, 7)
        Case Else   '2 agua, 3 luz, 5 otros servicios
            On Error GoTo Error 'GAMC - 15/05/2008
            
            SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
            If Trim(Servicio.Text) = 6 Then  'hy-19-enero-2007
                VTIndicadorSum = 0  'hy-19-enero-2007
            Else
                If Me.Empresa.Text = "862" Then 'GAMC - 15/05/2008 - SOAT
                    VTIndicadorSum = 0

                    SGUsar = efe.Text
                    SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
                Else
                    VTIndicadorSum = FMRetParamATX(VGSqlConn, 6)
                End If
            End If
        End Select
        PMChequeaATX VGSqlConn
        '<------
    End If 'Fin del if de transmitir
    
salto:

    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    
     'LBP Inicio RECA-CC-SGC00025869
     If Comision.Text > 0 And VGComision_original = 0 And VGTipoEjecucion% <> CGReverso% Then
        VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
        If VGCom_aux <> CDbl(Comision.Text) Then
            VGComision_original = Comision.Text
            Comision.Text = VGCom_aux
        Else
            VGComision_original = Comision.Text
        End If
     End If
    'LBP Fin RECA-CC-SGC00025869
    
    If vlOpcion <> "C" And vlOpcion <> "V" Then   '/*JPM 23112004 VLOpcion = "V"*/
     
     'ame 08/03/2010
     If FLTransmitir = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
     End If
    

        'Sumadora -->
        If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
            If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
                SGPrimeraVez = 0     ' ya no es primera vez
                If Trim(Empresa) = "617" Then
                    'PARA ESTAS EMPRESAS QUE GENERAN EL SSN PARA EL SWITCH,
                    'DEBEN TOMAR EL SSN MAPEADO COMO sgsECtRN2  --FMV ARREGLO ANDINATEL
                    SGSecTrn$ = SGSecTrn2$
                End If
                '-->hy-31-ene-2005
                If Trim(Empresa) = "3" Or Trim(Empresa) = "5479" And VLOnLine = "S" Then 'DAPV CNT-MOVIL
                  If VLPABOP <> "S" Then SGSecTrn$ = SGSecTrn2$ 'ANBE 062007
                End If
                '--<hy-31-ene-2005
                
                'lfcm 12-dic-2006 'EMELMANABI
                If (Empresa.Text = 1719 And Servicio = 3) Or (Servicio = 6) Then
                    PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%
                ElseIf (Empresa.Text = 3 And Servicio = 1 And VLPABOP = "S") Or _
                        (Empresa.Text = 5479 And Servicio = 1) Then 'ANBE 062107  'DAPV  CNT-MOVIL
                  PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%
                ElseIf Empresa.Text = 1127 And Servicio = 3 Then 'lfcm 25-abril-2009
                   PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%  'lfcm emelgur
                ElseIf Empresa.Text = 1 And Servicio = 3 Then       'hy-categ
                    PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%  'hy-categ
                ElseIf Empresa.Text = 862 And Servicio = 5 Then         'GAMC - 16/05/2008 - SOAT
                    PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%      'GAMC - 16/05/2008 - SOAT
                ElseIf Empresa.Text = 361 And Servicio = 2 Then         'COMISION INTERAGUA
                    PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%      'COMISION INTERAGUA
                ElseIf Empresa.Text = 8269 And Servicio = 2 Then         'COMISION RECOLECCION DE BASURA
                    PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%      'COMISION RECOLECCION DE BASURA
                Else
                    PMGrabaDesglose VLTrn, efe.Text, VLCambio%
                End If
                
                If VLCambio% = True Then
                    MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
                End If
                SGActual = 1  'seteo Variable para borrar desglose
            ElseIf VTIndicadorSum = 0 Then
                SGActual = 0  'no borrar desglose en caso de Error en Transaccion
            End If
        ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
            VLTsnTemp = VGTSN
            'PMEgresoEfectivo Efe.ValueReal, VLTrn
            PMEgresoEfectivo SGUsar, VLTrn
            'VGTSN = VLTsnTemp
        End If
        If SGAcumulado < 0 Then
            VLDescargar = 1
        End If
      '<-----
    End If
Error:  'GAMC - 15/05/2008
End Function

Sub PLTransmitir()
ReDim VLarreglos(30) As String
VLclave_acceso = "" 'ref14 vmirandt
    'TPE05/16/2006 Al Activar la forma debe colocar sumadora en Moneda de la forma
    If (SGMonedaTran <> VGmoneda% _
    And VGmoneda% <> 0) Then
        SGMonedaTran = VGmoneda%
        PMCargaIniSumadora VGmoneda%
        PMIniciaIngreso 1
    End If

    'TPE05/302006 Validacion Debito por moneda diferente a Base
    If VLMoneda <> VGmoneda% Then
        MsgBox "No se Puede Debitar a Cuentas con Moneda diferente a Moneda Base.", vbExclamation
        If Cta.Enabled Then Cta.SetFocus
        Exit Sub
    End If

    'TPE Validacion necesaria para No permitir Transacciones en caso de Valor Acumulado negativo
    If SGAcumulado < 0 And VGTipoEjecucion = CGNormal% Then
        MsgBox "Valor acumulado < 0 por Reverso. Transaccion No Permitida", vbInformation, "Mensaje del Sistema"
        Exit Sub
    End If

    If VGTipoEjecucion = CGRedigitacion% Then
        If FMSecuencialReverso() = False Then
            Exit Sub
        End If
    End If
    
    If VGTipoEjecucion = CGNormal% Then
        If FLChequeos() = False Then
            Exit Sub
        End If
    End If
    'JPM ContadorBillete -->
    If lectoraBill.HayAltaDenom Then
      If Not VGDatPersBillAltDen.dataOK Then
        MsgBox "Existen Billetes de Alta Denominación cuyos Número de Serie no se han confirmado", vbCritical, "Mensaje del Sistema"
        Exit Sub
      End If
    End If
    '<-- JPM ContadorBillete
    If VLCambio = False And VGTipoEjecucion = CGNormal% Then
        MsgBox " Transaccion Repetida"
        Exit Sub
    End If
    
    '------> Sumadora
    'TPE Validacion de Monto Efectivo
  If (CDbl(efe.Text) + VLEfe_com) <> SGUsar Then
        MsgBox "El Monto Efetivo No Coincide con el Monto Desglosado para el Deposito. Verificar", vbCritical, "Mensaje del Sistema"
        efe.Text = Format$(SGUsar, "####,###,##0.00")
        Exit Sub
    End If
    '<--------
    
    'msilvag Inicio Cobro de Comision Electrica Quito Mar-13-2013
    If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1371" Then
        'vlOpcion = "T"
'        VLCCATEG = "N"  'msilvag (Ver que pasa cuando se pone seteado esta variable)
        'If VGTipoEjecucion = CGNormal% Then
'            If VLCCATEG = "N" Then
                If Not FLTransmitir_ElectQuito() Then
                    'Sumadora ------->
                    If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                        If Ref.Enabled = True Then
                            Ref.SetFocus
                        End If
                    End If
                    '<---------
                    Exit Sub
                End If
'            Else
'                If FLTransmitir() = False Then
'                    'Sumadora ------->
''                    If (SGAcumulado + SGAcumuladoAdi) = 0 Then
''                        If Ref.Enabled = True Then
''                            Ref.SetFocus
''                        End If
''                    End If
'                    '<---------
'                    Exit Sub
'                End If
'            End If
        'End If
    'msilvag Fin Mar-13-2013
    
    '-->hy-categ
    ElseIf Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1" Then
        
        Dim VLarregloParametro(30) As String
        PMChequea VGSqlConn&
        PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
        PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
        PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CCATEG"
        PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
        If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
            VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametro())
            VLCCATEG = LTrim(RTrim(Trim(VLarregloParametro(4))))
        Else
            VLCCATEG = "S"  'Si no existe el parámetro entonces se considera activa la contingencia
        End If
        PMChequea VGSqlConn&
        
        If VGTipoEjecucion = CGNormal% Then
            If VLCCATEG = "N" Then
                If Not FLTransmitir_CPS_CATEG_pago() Then
                    'Sumadora ------->
                    If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                        If Ref.Enabled = True Then
                            Ref.SetFocus
                        End If
                    End If
                    '<---------
                    Exit Sub
                End If
            Else
                If FLTransmitir() = False Then
                    'Sumadora ------->
                    If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                        If Ref.Enabled = True Then
                            Ref.SetFocus
                        End If
                    End If
                    '<---------
                    Exit Sub
                End If
            End If
        Else
            If VLOnLineCateg = "S" Then
                If VLCCATEG = "N" Then
                    If Not FLTransmitir_CPS_CATEG_pago() Then
                        'Sumadora ------->
                        If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                            If Ref.Enabled = True Then
                                Ref.SetFocus
                            End If
                        End If
                        '<---------
                        Exit Sub
                    End If
                Else
                    'Sumadora ------->
                    If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                        If Ref.Enabled = True Then
                            Ref.SetFocus
                        End If
                    End If
                    '<---------
                    MsgBox "No puede ejecutar este reverso porque fue en linea y ahora esta activada la contingencia", vbExclamation, "AVISO"
                    Exit Sub
                End If
            Else
                If FLTransmitir() = False Then
                    'Sumadora ------->
                    If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                        If Ref.Enabled = True Then
                            Ref.SetFocus
                        End If
                    End If
                    '<---------
                    Exit Sub
                End If
            End If
        End If
    'Else
    '<--hy-categ
   '-->lfcm 02-abril-2009
    ElseIf Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1127" Then
      'Obtener estado del parametro de contingencia en la consulta luego de asignar C a Vlopcion-PLTransmitir
      Dim VLarregloParametrosE(30) As String
      PMChequea VGSqlConn&
      PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
      PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
      PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CEMELG"
      PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
      If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
         VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametrosE())
         VLCEMELG = LTrim(RTrim(Trim(VLarregloParametrosE(4))))
      Else
         VLCEMELG = "S"  'Si no existe el parámetro entonces se considera activa la contingencia
      End If
      PMChequea VGSqlConn&
      If VLCEMELG = "N" And vlOpcion = "C" Then
         Exit Sub
      ElseIf VLCEMELG = "S" And vlOpcion = "T" Then
      
      End If
      PMChequea VGSqlConn&
      
      'Revisar esta sección del Acumulado lfcm  'Revisar esta sección del Acumulado lfcm
      If VGTipoEjecucion = CGNormal% Then
            If VLCEMELG = "N" Then
                If Not FLTransmitir_CPS_EMELGUR_pago() Then
                    'Sumadora ------->
                    If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                        If Ref.Enabled = True Then
                            Ref.SetFocus
                        End If
                    End If
                    '<---------
                    Exit Sub
                End If
            Else
                If FLTransmitir() = False Then
                    'Sumadora ------->
                    If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                        If Ref.Enabled = True Then
                            Ref.SetFocus
                        End If
                    End If
                    '<---------
                    Exit Sub
                End If
            End If
        Else
            If VLCEMELG = "N" Then
                If VLCEMELG = "N" Then
                    If Not FLTransmitir_CPS_EMELGUR_pago() Then
                        'Sumadora ------->
                        If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                            If Ref.Enabled = True Then
                                Ref.SetFocus
                            End If
                        End If
                        '<---------
                        Exit Sub
                    End If
                Else
                    'Sumadora ------->
                    If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                        If Ref.Enabled = True Then
                            Ref.SetFocus
                        End If
                    End If
                    '<---------
                    MsgBox "No puede ejecutar este reverso porque fue en linea y ahora esta activada la contingencia", vbExclamation, "AVISO"
                    Exit Sub
                End If
            Else
                If FLTransmitir() = False Then
                    'Sumadora ------->
                    If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                        If Ref.Enabled = True Then
                            Ref.SetFocus
                        End If
                    End If
                    '<---------
                    Exit Sub
                End If
            End If
        End If
    Else
    '<--lfcm 02-abril-2009
    
    '-->hy-19-enero-2007 new tvcable smerino
    If Trim(Servicio.Text) = "6" Then
    'And VLTvCableOnline = "S" Then
        'If Not FLTransmitir_CPS_TVCABLE_pago() Then
         If Not FLTransmitir_MIG_TVCABLE_pago() Then 'new tvcable smerino
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
        
      ElseIf Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "7256" Then 'SMERINO BELCORP
          If Not FLTransmitir_pagos_Servicios() Then 'SMERINO BELCORP
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
        
    'tc 12102009 inicio PORTA
    ElseIf Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "118" Then
        If Not FLTransmitir_CPS_PORTA_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    'tc 12102009 Fin PORTA
    
    'gamc 02/16/2012 MARGLOBAL INI
    ElseIf Trim(Servicio.Text) = "9" Then 'msilvag MGLOB MARGLOBLAL And Trim$(Empresa.Text) = "451" Then
        If Not FLTransmitir_MARGLOBAL_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    'gamc 02/16/2012 MARGLOBAL FIN
    
    'DAPV 10/DIC/2012 CNT-MOVIL INI
'    ElseIf Trim(Servicio.Text) = "1" And Trim$(Proceso.Text) = "5482" Then
'        If Not FLTransmitir_CNTMOVIL_pago() Then
'            'Sumadora ------->
'            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
'                If Ref.Enabled = True Then
'                    Ref.SetFocus
'                End If
'            End If
'            '<---------
'            Exit Sub
'        End If
    'DAPV 10/DIC/2012 CNT-MOVIL FIN
        'msilvag Inicio ETAPA-AP-SGC00018437-SGC00018451
    ElseIf ((Trim(Servicio) = "8" And Trim(Empresa) = "6952") Or (Trim(Servicio) = "1" And Trim(Empresa) = "1707") Or (Trim(Servicio) = "2" And Trim(Empresa) = "1708") Or (Trim(Servicio) = "7" And Trim(Empresa) = "6951")) Then 'msilvag ETAPA Marzo-03-2016
    'ElseIf (VLTipoServicio = "TLF" Or VLTipoServicio = "AGP" Or VLTipoServicio = "INT" Or VLTipoServicio = "RDD" Or VLTipoServicio = "TVD" Or (Trim(Servicio) = "8" And Trim(Empresa) = "6952") Or (Trim(Servicio) = "1" And Trim(Empresa) = "1707") Or (Trim(Servicio) = "2" And Trim(Empresa) = "1708") Or (Trim(Servicio) = "7" And Trim(Empresa) = "6951")) Then
        If Not FLTransmitir_Etapa_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    'msilvag Fin
        
    ElseIf Trim(Servicio.Text) = "5" And Trim$(Empresa.Text) = "115" Then
        If Not FLTransmitir_CPS_DEPRATI_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    ElseIf Trim(Servicio.Text) = "2" And Trim$(Empresa.Text) = "114" Then   'tc 18022010 TRIPLEORO
        If Not FLTransmitir_TRIPLEORO_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
        
    ElseIf Trim(Servicio.Text) = "3" And Trim$(VGEmpGrupo) = "S" Then   'DAPV/02132012/CNEL
        If Not FLTransmitir_CPS_CNEL_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    ElseIf Trim(Servicio.Text) = "5" And Trim$(Empresa) = "8521" Then   'ecutel
        If Not FLTransmitir_MS_ECUTEL_pago() Then
        'If Not FLTransmitir_WS_ECUTEL_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    ElseIf Trim(Servicio.Text) = "5" And Trim$(Empresa) = "5994" Then   'CONECEL TVS dpereirv
        If Not FLTransmitir_CONECEL_pagoTVS() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    ElseIf Trim(Servicio.Text) = "1" And Trim$(Empresa) = "5479" And Trim$(vl_servidor_BUS) <> "PSSRV1" Then    'CONECEL TVS dpereirv
        If Not FLPagoCNT_MIG() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    ElseIf Trim(Servicio.Text) = "7" And Trim$(Empresa) = "5488" Then 'Directv Postpago dpereirv
        If Not FLTransmitir_DirectvPostpago_pago() Then

            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    '<Ref11 Se comenta proceso de pago de empresa 144, ahora se manejará por MEER
    'JPM 03/01/2016 -->
    'ElseIf Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "144" Then
    '    If Not FLTransmitir_CPS_CentroSur_pago() Then
    '        'Sumadora ------->
    '       If (SGAcumulado + SGAcumuladoAdi) = 0 Then
    '            If Ref.Enabled = True Then
    '                Ref.SetFocus
    '            End If
    '        End If
    '        '<---------
    '        Exit Sub
    '    End If
    '<-- JPM 03/01/2016
    '<Ref11 Codigo para el Proceso de las Empresas MEER
    ElseIf Trim(Servicio.Text) = "3" And VLEmpresaMeer = "S" Then
      
      If VGTipoEjecucion% <> CGReverso% Then vl_trx = "0" 'ref12
            
      If Not FLTransmitir_MEER_pago(vl_trx) = True Then
         'Sumadora ------->
         If (SGAcumulado + SGAcumuladoAdi) = 0 Then
            If Ref.Enabled = True Then
               Ref.SetFocus
            End If
         End If
         '<---------
         Exit Sub
      End If
    'Fin Ref11 Empresas MEEr>
        ElseIf Trim(Servicio.Text) = "5" And Trim$(Empresa) = "8090" Then 'UTPL dpereirv
        If Not FLTransmitir_UTPL_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Form_KeyDown CGTeclaF2%, 0   'REF18 Limpiar pantalla Pago de Servicios - dolayas 03/29/2019
            Exit Sub
        End If
    'JPM 09/14/2016 -->
    ElseIf Trim(Servicio.Text) = "8" And Trim$(Empresa.Text) = "1089" Then
        If Not FLTransmitir_Megadatos_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    '<-- JPM 09/14/2016
    
           ElseIf Trim(Servicio.Text) = "2" And Trim$(Empresa) = "361" Then 'ariofria Interagua
        If Not FLTransmitir_Interagua_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
        
        'msilvag Inicio RECM-311 RECMPS-373
        ElseIf Trim(Servicio.Text) = "2" And Trim$(Empresa) = "8269" Then
            If Not FLTransmitir_Interagua_pago() Then
                'Sumadora ------->
                If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                    If Ref.Enabled = True Then
                        Ref.SetFocus
                    End If
                End If
                '<---------
                Exit Sub
            End If
        'msilvag Fin
    '<Ref11 Codigo para el Proceso de las Empresas MEER
    ElseIf Trim(Servicio.Text) = "3" And VLEmpresaMeer = "S" Then
      If VGTipoEjecucion% <> CGReverso% Then vl_trx = "0" 'ref12
      If Not FLTransmitir_MEER_pago(vl_trx) = True Then
         'Sumadora ------->
         If (SGAcumulado + SGAcumuladoAdi) = 0 Then
            If Ref.Enabled = True Then
               Ref.SetFocus
            End If
         End If
         '<---------
         Exit Sub
      End If
    'Fin Ref11 Empresas MEEr>
        'CONSIDERAMOS ECOTEC DENTRO DE EDUCACIONRECAUDACION RECA-CC-SGC00029665 ref17
    ElseIf Trim(Servicio.Text) = "5" And (Trim(Empresa) = "6087" Or Trim(Empresa) = "1125") Then
    If Not FLTransmitir_RECAUDAEDU_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
        ElseIf Trim(Servicio.Text) = "2" And Trim$(Empresa) = "6" Then 'dolayas AMAGUA INI AMAGUA-AP-SGC00028642
        FConsultarAmaguaBase (Empresa.Text)
          If VLEmpAmaBase = "S" Then
            If Not FLTransmitir_AMAGUA_pago() Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
          End If
                Else
                        If FLTransmitir() = False Then
            'Sumadora ------->
                If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                        If Ref.Enabled = True Then
                        Ref.SetFocus
                        End If
                End If
                '<---------
                Exit Sub
                End If
        End If 'dolayas AMAGUA-AP-SGC00028642 Fin

    Else
        If FLTransmitir() = False Then
            'Sumadora ------->
            If (SGAcumulado + SGAcumuladoAdi) = 0 Then
                If Ref.Enabled = True Then
                    Ref.SetFocus
                End If
            End If
            '<---------
            Exit Sub
        End If
    End If
    '<--hy-19-enero-2007
    End If   'hy-categ
    
    '/*JPM 23112004 agregar Opcion [V]alor comision*/
    If vlOpcion = "V" Then Exit Sub
    If vlOpcion = "C" Then  ' si la trx es de consulta no se imprime
        Total.Text = CCur(valor.Text) + CCur(Comision.Text)
        If (Servicio.Text = "1" And Trim(Empresa) = "3" And VLPABOP = "S") Then Total.Text = CCur(Pago_Val.Text) + CCur(Comision.Text)  'ANBE
        efe.Enabled = True      ' habilito controles
        Loc.Enabled = True
        CantChq.Enabled = True
        If (Trim(Servicio.Text) = "1" And Trim(Empresa) <> "1707") And _
           (Trim(Servicio.Text) = "2" And Trim(Empresa) <> "1708") Then Pago_Val.Enabled = True 'ANBE 112906
        CboTipCta.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False   'TPE
        Proceso.Enabled = False
        Ref.Enabled = False
        'If Trim(Servicio.Text) = "2" Or Trim(Servicio.Text) = "3" Then   hy-categ
        If Trim(Servicio.Text) = "2" Then                                'hy-categ
            Comprob.Enabled = True
            Reten.Enabled = True
        End If
        '-->hy-categ
        If Trim(Servicio.Text) = "3" Then
            Comprob.Enabled = False
            Reten.Enabled = False
        End If
        '<--hy-categ
        If FMCCurATX((Minimo.Text)) > 0 Then
            Minimo.Visible = True
            lblValor(2).Visible = True
        End If
        If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
        Else
'            Comision.Text = ""          '/*JPM 11112004*/
'            Total.Text = ""
           Total.Text = FMCCurATX(valor.Text) + FMCCurATX(Comision.Text)
           If (Servicio.Text = "1" And Trim(Empresa) = "1707") Or (Servicio.Text = "2" And Trim(Empresa) = "1708") Then Total.Text = CCur(Pago_Val.Text) + CCur(Comision.Text)  'ANBE
        End If
        '/*JPM 08122004 ---> receptar identificación de persona que efectúa pago*/
        cmbTid.Enabled = True
        txtCedula.Enabled = True
        '/*JPM 08122004 <--- fin recpecion/validación de identificación*/
        efe.SetFocus
        DoEvents
        Exit Sub
    End If
    
    PLTipoTransaccion VLHorario
        
    If VGTipoEjecucion = CGReverso And VGReversoLoger = "S" Then
        PMMsgError "Reverso OK", "", CGErrorInformativo
        FReverso!grdValores(0).Col = 4
        FReverso!grdValores(0).Text = "R"
    End If
    
    'LLAMADA A LA FUNCION DE FORMATOS DE REPORTES
    VGparformato$ = "01"
    If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
        VGparlong$ = "66"
        VGpartop$ = "04"
        VGparleft$ = "20"
        VGparrig$ = "00"
    End If
    
 Dim Coms As String, VLNeto As String 'CRR (movido)
 Coms = "" 'CRR (movido)
 '//////////////////////////////// 'CRR Caso para imprimir comprobantes por cada desglose de pagos //////////////////
                    
 'MsgBox "Base Impo: " & " " & VlbaseImp & " " & "IVA: " & " " & VLiva
 
 If Trim(Servicio.Text) = "4" And VGTipoEjecucion <> CGReverso Then
    Dim Idx, lim As Integer
    lim = grdDetalle.Rows
    Idx = 1
    While Idx < lim
        If Trim(VLFechaCorte) <> "0" And VGTipoEjecucion% = CGNormal% Then
            PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte  '3 linea de comprobante de pago
        End If
        PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
        
'        If Trim(Servicio.Text) = "1" Then
'            If Proceso <> "99" Then   'wmh
'              PMSetDetalle "v" + "Telefono: " + Trim(Ref) + " " + " Area: " + Mid(sal_proc, 1, 10)
'            Else
'                PMSetDetalle "v" + "Codigo de Reserva: " + Proceso + "-" + Mid("0000000", 1, 7 - Len(Trim(Ref))) + Trim(Ref)
'                PMSetDetalle "v" + "Concepto: " + Trim$(sal_proc)
'            End If
'        Else
        PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
'       End If
        
        If Trim(Nombre) <> "" Then
            PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
        End If
        
        ' ************  Efectivo ************
        grdDetalle.Col = 4
        grdDetalle.Row = Idx
        grid(Idx - 1) = grdDetalle.Text
        Dim Efectivo As Currency
        Efectivo = FMCCurATX(grdDetalle.Text)    'hy-24-mayo-2006 cambio val por ccur
        ef$ = ""
        If FMCCurATX((Efectivo)) > 0 Then
           ef$ = "EFE.: " + FMEspaciosATX(Format(Efectivo, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
        End If
        ' ********** Cheques *****************
        grdDetalle.Col = 5
        grdDetalle.Row = Idx
        grid(Idx - 1) = grdDetalle.Text
        Dim Cheque As Currency
        Cheque = FMCCurATX(grdDetalle.Text)   'hy-24-mayo-2006 cambio val por ccur
        Chq$ = ""
        If FMCCurATX((Cheque)) > 0 Then
           Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Cheque, VGFormatoMoney), 11, CGJustificacionDerecha)
        End If
        If ef$ <> "" Or Chq$ <> "" Then
           PMSetDetalle "v" + ef$ + Chq$
        End If
        '********** Mes de Deuda ***************** CRR 09/13/2005
        grdDetalle.Col = 1
        grdDetalle.Row = Idx
        grid(Idx - 1) = grdDetalle.Text
        Dim Mes As String
        If grdDetalle.Text = "01" Then
           Mes = "ENE"
        End If
        If grdDetalle.Text = "02" Then
           Mes = "FEB"
        End If
        If grdDetalle.Text = "03" Then
           Mes = "MAR"
        End If
        If grdDetalle.Text = "04" Then
           Mes = "ABR"
        End If
        If grdDetalle.Text = "05" Then
           Mes = "MAY"
        End If
        If grdDetalle.Text = "06" Then
           Mes = "JUN"
        End If
        If grdDetalle.Text = "07" Then
           Mes = "JUL"
        End If
        If grdDetalle.Text = "08" Then
           Mes = "AGO"
        End If
        If grdDetalle.Text = "09" Then
           Mes = "SEP"
        End If
        If grdDetalle.Text = "10" Then
           Mes = "OCT"
        End If
        If grdDetalle.Text = "11" Then
           Mes = "NOV"
        End If
        If grdDetalle.Text = "12" Then
           Mes = "DIC"
        End If
        Mese$ = ""
        Mese$ = "MES: " + Mes
        'Referencia
        grdDetalle.Col = 11
        If Trim$(grdDetalle.Text) <> "SIN REFERENCIA" And Trim$(grdDetalle.Text) <> "0" Then
            Mese$ = Mese$ + " REF: " + Trim$(grdDetalle.Text)
        End If
        PMSetDetalle "v" + Mese$  'CRR 09/13/2005
        ' ********** Notas Debito *****************
        grdDetalle.Col = 6
        grdDetalle.Row = Idx
        grid(Idx - 1) = grdDetalle.Text
        Dim NotDeb As Currency
        NotDeb = FMCCurATX(grdDetalle.Text)   'hy-24-mayo-2006 cambio val por ccur
        If FMCCurATX((NotDeb)) > 0 Then
           PMSetDetalle "v" + "CTA.: " + Format(Cta.ClipText, "000-000000-0") + " DEB.: " + FMEspaciosATX(Format(NotDeb, VGFormatoMoney), 15, CGJustificacionDerecha)
        End If
        If FMCCurATX((Reten.Text)) > 0 Then
           PMSetDetalle "v" + "RETENCION:" + FMEspaciosATX(Trim(Comprob), 13, CGJustificacionIzquierda) + FMEspaciosATX(Format(Reten, VGFormatoMoney), 12, CGJustificacionDerecha)
        End If
        If FMCCurATX((Comision.Text)) > 0 Then
           Coms = " COMISION: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " "
        End If
        '-->hy-25-oct-2005
        ' ********* Interes *******************
        grdDetalle.Col = 7
        grdDetalle.Row = Idx
        grid(Idx - 1) = grdDetalle.Text
        Dim ValorNeto As Currency
        ValorNeto = FMCCurATX(grdDetalle.Text)  'hy-24-mayo-2006 cambio val por ccur
        grdDetalle.Col = 12
        grdDetalle.Row = Idx
        grid(Idx - 1) = grdDetalle.Text
        Dim ValorInteres As Currency
        Dim VLInteres As String
        Dim VLValorPagar As Currency
        ValorInteres = FMCCurATX(grdDetalle.Text)   'hy-24-mayo-2006 cambio val por ccur
        VLValorPagar = FMCCurATX(ValorNeto) - FMCCurATX(Comision.Text) - ValorInteres
        If ValorInteres > 0 Then
            VLInteres = FMCCurATX(ValorInteres)
            PMSetDetalle "v" + "VALOR: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLValorPagar, VGFormatoMoney), 12, CGJustificacionDerecha) + "   INT.MORA: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLInteres, VGFormatoMoney), 12, CGJustificacionDerecha)
        End If
        '<--hy-25-oct-2005
        ' ********* Valor Neto *******************
        grdDetalle.Col = 7
        grdDetalle.Row = Idx
        grid(Idx - 1) = grdDetalle.Text
        'Dim ValorNeto As Currency
        'ValorNeto = Val(grdDetalle.Text)
        ValorNeto = FMCCurATX(grdDetalle.Text) 'cmeg 11/07/2006
        VLNeto = FMCCurATX(ValorNeto) - FMCCurATX(Comision.Text)
        PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms
        ' ********** Total (para calcular saldo) **********
        grdDetalle.Col = 8
        grdDetalle.Row = Idx
        grid(Idx - 1) = grdDetalle.Text
        Dim TotalD As Currency
        'TotalD = Val(grdDetalle.Text)
        TotalD = FMCCurATX(grdDetalle.Text) 'cmeg 11/07/2006
        If FMCCurATX(Total.Text) > 0 Then
            sal_empr = Total.Text - ValorNeto
        Else
            sal_empr = ValorNeto
        End If
        If Trim(Sal_Emp) <> "" And ((FMCCurATX(Total.Text) - (FMCCurATX(ValorNeto) - FMCCurATX(Comision.Text))) >= 0) Then
            PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((Total.Text)) - (FMCCurATX(ValorNeto) - FMCCurATX(Comision.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
        End If
        Total.Text = sal_empr
        ' ********* Referencia Nota de Venta *******************
        grdDetalle.Col = 9
        grdDetalle.Row = Idx
        grid(Idx - 1) = grdDetalle.Text
        Dim Factura As String
        Factura = grdDetalle.Text
        If Factura <> "" Then
            grdDetalle.Col = 10
            grdDetalle.Row = Idx
            grid(Idx - 1) = grdDetalle.Text
            Dim RefNoVe As String
            RefNoVe = grdDetalle.Text
            If VGTipoEjecucion = CGReverso Then
                If Len(Trim$(RefNoVe)) >= 15 Then 'Nota_Venta.Text 'CRR 09/13/2005
                    PMSetDetalle "v" + "REF.NOTA VENTA : " + RefNoVe 'Nota_Venta.Text
                End If
            Else
                If Len(Trim$(RefNoVe)) >= 15 Then 'VLNotaVenta)CRR 09/13/2005
                    PMSetDetalle "v" + "REF.NOTA VENTA : " + RefNoVe 'VLNotaVenta CRR 09/13/2005
                End If
            End If
        End If
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGparleft$ = "10"
    VGpartop$ = "00"
    'ref14 vmirandt
        If VLTsnTemp% = 0 Then
           VLTsnTemp% = VGTSN%
        End If
        Idx = Idx + 1
        FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn
    Wend
'msilvag Inicio SGC00007024
ElseIf Trim(Servicio.Text) = "3" And Trim(Empresa.Text) = "1371" Then
    ImprimeComprobanteElecQuito
    If VGTipoEjecucion% <> CGReverso% Then
        If MsgBox("Desea Reimprimir El Comprobante?", vbYesNo, "Mensaje") = vbYes Then
             ImprimeComprobanteElecQuito
        End If
   End If
    If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
        If VLfact_elect = "N" Then
            VLTipo_imp = "O"
            PLImprimirElectQuito
            If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
               VLTipo_imp = "C"
               PLImprimirElectQuito
            End If
            VLTipo_imp = "O"
'        Else
'           MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, "Sistema"
        End If
    End If
'msilvag Fin

'msilvag Inicio ETAPA-AP-SGC00018437-SGC00018451 23/Mayo/2015
ElseIf ((Trim(Servicio) = "8" And Trim(Empresa) = "6952") Or (Trim(Servicio) = "1" And Trim(Empresa) = "1707") Or (Trim(Servicio) = "2" And Trim(Empresa) = "1708") Or (Trim(Servicio) = "7" And Trim(Empresa) = "6951")) Then 'msilvag ETAPA Marzo-04-2016
'ElseIf (VLTipoServicio = "TLF" Or VLTipoServicio = "AGP" Or VLTipoServicio = "INT" Or VLTipoServicio = "RDD" Or VLTipoServicio = "TVD" Or (Trim(Servicio) = "8" And Trim(Empresa) = "6952") Or (Trim(Servicio) = "1" And Trim(Empresa) = "1707") Or (Trim(Servicio) = "2" And Trim(Empresa) = "1708") Or (Trim(Servicio) = "7" And Trim(Empresa) = "6951")) Then
    '<Ref 20
    If VLVerde <> "S" Or Loc.Text <> "0.00" Then
        ImprimeComprobanteEtapa
        If VGTipoEjecucion% <> CGReverso% Then
            If MsgBox("Desea Reimprimir El Comprobante?", vbYesNo, "Mensaje") = vbYes Then
                ImprimeComprobanteEtapa
            End If
        End If
    End If
    If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
        'llama función para caja verde
        CVImprimeComprobanteEtapa
    End If
    'Ref 20>
    If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
        If VLfact_elect = "N" Then
            VLTipo_imp = "O"

            PLImprimirEtapa
            If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
               VLTipo_imp = "C"

               PLImprimirEtapa
            End If
            VLTipo_imp = "O"
'        Else
'           MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, "Sistema"
        End If
    End If

'msilvag Fin
'belcorp
ElseIf Trim(Servicio.Text) = "5" And Trim(Empresa.Text) = "7256" Then
    ImprimeComprobanteServicio
    If VGTipoEjecucion% <> CGReverso% Then
        If MsgBox("Desea Reimprimir El Comprobante?", vbYesNo, "Mensaje") = vbYes Then
             ImprimeComprobanteServicio
        End If
   End If
    If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
        If VLfact_elect = "N" Then
            VLTipo_imp = "O"
            PLImprimirServicio
            If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
               VLTipo_imp = "C"
               PLImprimirServicio
            End If
            VLTipo_imp = "O"
'        Else
'           MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, "Sistema"
        End If
    End If
'belcorp Fin
 ElseIf Trim(Servicio.Text) = "5" And Trim(Empresa.Text) = "118" Then    'tc 12-octubre-2009 Impresion personalizada para el Comprobante De PORTA
   ImprimeComprobantePORTA                                            'tc 12-octubre-2009 Impresion personalizada para el Comprobante De PORTA
 If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
        If VLfact_elect = "N" Then
            VLTipo_imp = "O"
            PLImprimirNotaPorta                                              'SMERINO PORTA
            If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
               VLTipo_imp = "C"
               PLImprimirNotaPorta
            End If
            VLTipo_imp = "O"
'        Else
'           MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, "Sistema"
        End If
    End If
   ElseIf Trim(Servicio.Text) = "9" Then 'msilvag MGLOB Marglobal "5" And Trim(Empresa.Text) = "451" Then    'gamc 02/16/2012 MARGLOBAL
   ImprimeComprobanteMARGLOBAL                                           'gamc 02/16/2012 MARGLOBAL
   If VGTipoEjecucion% <> CGReverso% Then
        If MsgBox("Desea Reimprimir El Comprobante?", vbYesNo, "Mensaje") = vbYes Then   'gamc 02/16/2012 MARGLOBAL
             ImprimeComprobanteMARGLOBAL                                                 'gamc 02/16/2012 MARGLOBAL
        End If
   End If
   If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
        If VLfact_elect = "N" Then
            VLTipo_imp = "O"
            PLImprimirNotaMARGLOBAL
            If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
               VLTipo_imp = "C"
               PLImprimirNotaMARGLOBAL
            End If
            VLTipo_imp = "O"
'        Else
'           MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, App.Title
        End If
    End If
'DAPV CNT-MOVIL INI
        ElseIf Trim(Servicio.Text) = "1" And Trim(Proceso.Text) = "5482" And Trim$(vl_servidor_BUS) = "PSSRV1" Then
            ImprimeComprobanteCNTMOVIL
            If VGTipoEjecucion% <> CGReverso% Then
                If MsgBox("Desea Reimprimir El Comprobante?", vbYesNo, "Mensaje") = vbYes Then
                    ImprimeComprobanteCNTMOVIL
                End If
            End If
            If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
                If VLfact_elect = "N" Then
                    VLTipo_imp = "O"
                    PLImprimirNotaCNTMOVIL
                    If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
                        VLTipo_imp = "C"
                        PLImprimirNotaCNTMOVIL
                    End If
                    VLTipo_imp = "O"
'                Else
'                    MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, App.Title
                End If
            End If
'DAPV CNT-MOVIL FIN
 ElseIf Trim(Servicio.Text) = "5" And Trim(Empresa.Text) = "115" Then    'lfcm 25-agosto-2009 Impresion personalizada para el Comprobante De Prati
    ImprimeComprobanteDePrati                                            'lfcm 25-agosto-2009 Impresion personalizada para el Comprobante De Prati
   ' PLImprimirNotaDeprati  'COMENTA SMERINO PARA AUMENTAR VALIDACIÓN
    ''SMERINO
     If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
        If VLfact_elect = "N" Then
            VLTipo_imp = "O"
            PLImprimirNotaDeprati                                               'SMERINO DEPRATI
            If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
               VLTipo_imp = "C"
               PLImprimirNotaDeprati
            End If
            VLTipo_imp = "O"
'        Else
'           MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, "Sistema"
        End If
    End If
    
 ElseIf Trim(Servicio.Text) = "2" And Trim(Empresa.Text) = "114" Then    'TC 19022010 TRIPLEORO
    ImprimeComprobanteTRIPLEORO                                            'TC 19022010 TRIPLEORO
    If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
        If VLfact_elect = "N" Then
            VLTipo_imp = "O"
            PLImprimirNotaTRIPLEORO                                                'TC 19022010 TRIPLEORO
            If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
               VLTipo_imp = "C"
               PLImprimirNotaTRIPLEORO
            End If
            VLTipo_imp = "O"
'        Else
'           MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, "Sistema"
        End If
    End If
  ElseIf Trim(Servicio.Text) = "3" And Trim(VGEmpGrupo) = "S" Then  'DAPV/03062012/CNEL
    '<Ref 20
    If VLVerde <> "S" Or Loc.Text <> "0.00" Then
        ImprimeComprobanteCNEL
        If MsgBox("Desea Reimprimir comprobante de transacción?", vbYesNo, "Mensaje") = vbYes Then
               ImprimeComprobanteCNEL
        End If
    End If
    If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
        CVImprimeComprobanteCNEL
    End If
    'Ref 20>
    If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
        If VLfact_elect = "N" Then
            VLTipo_imp = "O"
            PLImprimirNotaCNEL                                           '
            If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
               VLTipo_imp = "C"
               PLImprimirNotaCNEL
            End If
            VLTipo_imp = "O"
'        Else
'           MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, "Sistema"
        End If
    End If
 ElseIf Trim(Servicio.Text) = "5" And (Trim(Empresa.Text) = "8521" Or Trim(Empresa.Text) = "5994") Then  'CONECEL TVS dpereirv  ' 'ECUTEL dpereirv
    ImprimeComprobanteECUTEL
    If MsgBox("Desea Reimprimir comprobante de transacción?", vbYesNo, "Mensaje") = vbYes Then
               ImprimeComprobanteECUTEL
    End If
    If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
        If VLfact_elect = "N" Then
            VLTipo_imp = "O"
            PLImprimirNotaECUTEL                                         '
            If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
               VLTipo_imp = "C"
               PLImprimirNotaECUTEL
            End If
            VLTipo_imp = "O"
'        Else
'           MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, "Sistema"
        End If
    End If
    ElseIf Trim(Servicio.Text) = "7" And (Trim(Empresa.Text) = "5488") Then   'Directv Postpago dpereirv
    ImprimeComprobanteDirectvPostpago
    If MsgBox("Desea Reimprimir comprobante de transacción?", vbYesNo, "Mensaje") = vbYes Then
               ImprimeComprobanteDirectvPostpago
    End If
    ElseIf Trim(Servicio.Text) = "5" And (Trim(Empresa.Text) = "8090") Then   'UTPL dpereirv
    ImprimeComprobanteUTPL
    If MsgBox("Desea Reimprimir comprobante de transacción?", vbYesNo, "Mensaje") = vbYes Then
               ImprimeComprobanteUTPL
    End If
    ElseIf Trim(Servicio.Text) = "8" And (Trim(Empresa.Text) = "1089") Then   'JPM 09/16/2016 Impresión Megadatos -->
      ImprimeComprobanteMegadatos
      If MsgBox("Desea Reimprimir comprobante de transacción?", vbYesNo, "Mensaje") = vbYes Then
               ImprimeComprobanteMegadatos
      End If                                                                  '<-- JPM 09/16/2016 Impresión Megadatos

       ElseIf Trim(Servicio.Text) = "2" And (Trim(Empresa.Text) = "361") Then   'Interagua ariofria
            '<Ref 20
            If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                ImprimeComprobanteINTERAGUA
                If MsgBox("Desea Reimprimir comprobante de transacción?", vbYesNo, "Mensaje") = vbYes Then
                    ImprimeComprobanteINTERAGUA
                End If
            End If
            If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                CVImprimeComprobanteINTERAGUA
            End If
            'Ref 20>
    'RECAUDACIONEDUCACION INI RECA-CC-SGC00029665 Ref17
    ElseIf Trim(Servicio.Text) = "5" And (Trim(Empresa.Text) = "6087" Or Trim(Empresa.Text) = "1125") Then
      ImprimeComprobanteRECAUDAEDU
    If MsgBox("Desea Reimprimir comprobante de transacción?", vbYesNo, "Mensaje") = vbYes Then
      ImprimeComprobanteRECAUDAEDU
    End If
    'RECAUDACIONEDUCACION FIN RECA-CC-SGC00029665

        ElseIf Trim(Servicio.Text) = "2" And (Trim(Empresa.Text) = "6") And VLEmpAmaBase = "S" Then   'AMAGUA dolayas AMAGUA-AP-SGC00028642
            '<Ref 20
            If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                ImprimeComprobanteAMAGUA
                If MsgBox("Desea Reimprimir comprobante de transacción?", vbYesNo, "Mensaje") = vbYes Then
                    ImprimeComprobanteAMAGUA
                End If
            End If
            If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                CVImprimeComprobanteAMAGUA
            End If
            'Ref 20>
    ElseIf Trim(Servicio.Text) = "1" And Trim(Empresa.Text) = "5479" And Trim$(vl_servidor_BUS) <> "PSSRV1" Then
            If Trim(Proceso.Text) = "3" Then
                '<Ref 20
                If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                    ImprimeComprobanteCNT_MIG
                    If VGTipoEjecucion% <> CGReverso% Then
                        If MsgBox("Desea Reimprimir El Comprobante?", vbYesNo, "Mensaje") = vbYes Then
                            ImprimeComprobanteCNT_MIG
                        End If
                    End If
                End If
                If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                    'identifica función para caja verde
                    CVImprimeComprobanteCNT_MIG
                End If
                'Ref 20>
                If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
                    If VLfact_elect = "N" Then
                        VLTipo_imp = "O"
                        ImprimeComprobanteCNT_MIG
                        If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
                            VLTipo_imp = "C"
                            ImprimeComprobanteCNT_MIG
                        End If
                        VLTipo_imp = "O"
                    End If
                End If
                
            Else
                '<Ref 20
                If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                    ImprimeComprobanteCNTMOVIL_MG
                    If VGTipoEjecucion% <> CGReverso% Then
                        If MsgBox("Desea Reimprimir El Comprobante?", vbYesNo, "Mensaje") = vbYes Then
                            ImprimeComprobanteCNTMOVIL_MG
                        End If
                    End If
                End If
                If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                    CVImprimeComprobanteCNTMOVIL_MG
                End If
                'Ref 20>
                If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
                    If VLfact_elect = "N" Then
                        VLTipo_imp = "O"
                        ImprimeComprobanteCNTMOVIL_MG
                        If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
                            VLTipo_imp = "C"
                            ImprimeComprobanteCNTMOVIL_MG
                        End If
                        VLTipo_imp = "O"
                    End If
                End If
            End If 'If Trim(Proceso.Text) = "3" Then
            
 Else
 '\\\\\\\\\\\\\\\\\\\\\\\\\\\\ 'CRR Caso para imprimir comprobantes por cada desglose de pagos \\\\\\\\\\\\\\\\\\\\\\
    'gamc - Aqui empieza el seteo de paramentros para la impresión
    'gamc - 19/04/2008 - Se creo un metodo para el Soat
    If Trim(Servicio.Text) = "5" And Trim(Empresa.Text) = "862" Then 'gamc - 19/04/2008 - ini
        If Empresa_SOAT("3", 0) = "False" Then
            MsgBox "Error: No se imprimio el comprobante", vbExclamation, App.Title
            Exit Sub
        End If
    Else
        '<Ref 20
        If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
            Dim strobtsma As String
            'strobtsma = FMObtenerSimbolo("51")
            strobtsm = ""
            VLfnCV = "07"
            'se llena arreglo
            Erase CVcomprobantes
            ReDim CVcomprobantes(32)
            CVcomprobantes(29) = ""
            CVcomprobantes(30) = ""
            CVcomprobantes(31) = ""
        End If
        'Ref 20>
        'If Trim(VLFechaCorte) <> "0" And VGTipoEjecucion% = CGNormal% Then 'ref12 comentado
        If Trim(VLFechaCorte) <> "0" And (VGTipoEjecucion% = CGNormal% Or VLEmpresaMeer = "S") Then 'ref12
            '<Ref 20
            If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte 'hy-31-ene-2005 Formatear fecha
            End If
            If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                CVcomprobantes(11) = VLFechaCorte
            End If
            'Ref 20>
        End If
      
        '<Ref 20
        If VLVerde <> "S" Or Loc.Text <> "0.00" Then
            PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
        End If
        If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
            CVcomprobantes(12) = Trim(Empresa.Text)
            CVcomprobantes(13) = Mid(Trim(Sal_Emp.Caption), 1, 24)
        End If
        'Ref 20>
         If Trim(Servicio.Text) = "1" Then
            If Empresa = 3 Then    '-->lfcm 04-agosto-2008
               If Me.serpac.Text = "ABF" Then
                  If Me.Proceso.Text = "1700" Or Me.Proceso.Text = "1800" Then
                     'PMSetDetalle "v" + "Telefono: " + Trim(Ref) + " " + " Area: " + Mid(sal_proc, 1, 17)    'PAGOS DE LINEAS 1700-1800
                     'gmartillo 10/16/2009
                     PMSetDetalle "v" + "Telefono: " + Trim(Proceso.Text) + Trim(Ref)  'gmartillo 10/16/2009+ " " + " Area: " + Mid(sal_proc, 1, 17)    'PAGOS DE LINEAS 1700-1800
                  Else
                     'Impresion para comprobante tambien de Pacifictel gmartillo
                     'gmartillo 10/16/2009
                     PMSetDetalle "v" + "Telefono: " + Trim(Proceso.Text) + Trim(Ref)    '+ " " + " Area: " + Mid(sal_proc, 1, 17)    'PAGOS DE TELEFONOS NORMALES
                  End If
               ElseIf Me.serpac.Text = "ANU" Then
                  'PMSetDetalle "v" + "Telefono: " + Trim(Ref) + " " + " Area: " + Mid(sal_proc, 1, 10)
                  PMSetDetalle "v" + "Servicio: ABONO A FACTURA ANULADA"
                  'Contrato No.: 1234567890    VALOR: us$100.00
                  'PMSetDetalle "v" + "Contrato No.: " + Me.Ref + "    Valor: " + Total.Text
                  PMSetDetalle "v" + "Contrato No.: " + Me.Ref + "    Valor: " + valor.Text
               ElseIf Me.serpac.Text = "CIC" Then
                  'PMSetDetalle "v" + "Telefono: " + Trim(Ref) + " " + " Area: " + Mid(sal_proc, 1, 10)
                  'Servicio: CUOTA INICIAL DE CONVENIO
                  PMSetDetalle "v" + "Servicio: CUOTA INICIAL DE CONVENIO"
                  'PMSetDetalle "v" + "Contrato No.: " + Me.Ref + "    Valor: " + Total.Text
                  PMSetDetalle "v" + "Contrato No.: " + Me.Ref + "    Valor: " + valor.Text
               ElseIf Me.serpac.Text = "" Then
                  PMSetDetalle "v" + "Telefono: " '+ Trim(Ref) + " " + " Area: " + Mid(sal_proc, 1, 10) gmartillo 10/16/2009
               End If
            Else                   'lfcm 04-agosto-2008
            If Proceso = "99" Then   'wmh
                PMSetDetalle "v" + "Codigo de Reserva: " + Proceso + "-" + Mid("0000000", 1, 7 - Len(Trim(Ref))) + Trim(Ref)
                PMSetDetalle "v" + "Concepto: " + Trim$(sal_proc)
            Else
                If Not ((Servicio = 1 And Empresa = 1707) Or (Servicio = 2 And Empresa = 1708)) Then 'ANBE 120806 if & else <
                  PMSetDetalle "v" + "Telefono: " + Trim(Ref) + " " + " Area: " + Mid(sal_proc, 1, 10)
                Else  'ANBE < se quito area
                  If Trim(Empresa) = "1707" Then PMSetDetalle "v" + "Telefono: " + Trim(Ref)
                  If Trim(Empresa) = "1708" Then PMSetDetalle "v" + "Codigo: " + Trim(Ref)
                End If
            End If
            End If     '--<lfcm 04-agosto-2008
        Else
            
            '-->hy-categ
            'If Trim(Servicio.Text) = "3" And (Trim$(Empresa.Text) = "1" Or Trim$(Empresa.Text) = "144") Then 'ref12 comentado
            If Trim(Servicio.Text) = "3" And (Me.Empresa.Text = "90" Or VLEmpresaMeer = "S") Then 'ref12
                '<Ref 20
                If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                    PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + IIf(Trim$(VLo_pautorizacion) <> "", "No. Autoriz: " + VLo_pautorizacion, "")
                End If
                If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                    CVcomprobantes(14) = Trim(Ref)
                    CVcomprobantes(31) = IIf(Trim$(VLo_pautorizacion) <> "", "No. Autoriz: " + VLo_pautorizacion, "")
                End If
                'Ref 20>
            Else
            '<--hy-categ
            
                If Trim(Servicio.Text) = "6" Then   'hy-19-enero-2007
                    PMSetDetalle "v" + "Codigo: " + Trim(Ref)
                Else
                    'PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
                    If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1127" Then
                       'PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + IIf(Trim(Proceso.Text) <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
                       PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + IIf(Trim(VLcnelCodAutoriza) <> "", " No. Autoriz.: " + Mid(VLcnelCodAutoriza, 1, 10), "")
                    Else
                    
                     'If (Empresa <> 8269 And Servicio <> 2) Then '--ref 14
                        '<Ref 20
                        If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                            PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
                        End If
                        If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                            CVcomprobantes(14) = Trim(Ref)
                            CVcomprobantes(31) = IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
                        End If
                        'Ref 20>
                     'End If
                    End If
                End If
            End If  'hy-categ
        End If
        'If (Empresa <> 8269 And Servicio <> 2) Then '--ref 14
            If Trim(Nombre) <> "" Then
                '<Ref 20
                If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                    PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
                End If
                If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                    CVcomprobantes(15) = Mid(Nombre, 1, 25)
                End If
                'Ref 20>
            End If
       ' End If
        'ANBE 052807 Pacifictel pago en abono
        If VLPABOP = "S" And (Empresa = 3 And Servicio = 1) Then
          If VLCTGP = "N" Then
            If Not (Me.serpac.Text = "ANU" Or Me.serpac.Text = "CIC") Then  '-->lfcm 04-agosto-2008
            'VDeuda$ = "VAL.FACT: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLVMes, VGFormatoMoney), 10, CGJustificacionDerecha) + "  "
            'VDeuda$ = VDeuda$ + "DEUDA PEND: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLVAcum, VGFormatoMoney), 10, CGJustificacionDerecha) + " "     'lfcm 18-agosto-2008
            'VDeuda$ = VDeuda$ + "DEUDA PEND: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Me.valor, VGFormatoMoney), 10, CGJustificacionDerecha) + " "     'lfcm 18-agosto-2008
            End If                                                     '--<lfcm 04-agosto-2008
          ElseIf VGTipoEjecucion% = CGNormal% Then

            VLVTotal = valor
          End If
          If Proceso <> "99" Then PMSetDetalle "v" + VDeuda$
          'vtotal$ = CDbl(VLVMes) + CDbl(VLVAcum)
           If Not (Me.serpac.Text = "ANU" Or Me.serpac.Text = "CIC") Then  '-->lfcm 04-agosto-2008
           'Impresion para comprobante tambien de Pacifictel gmartillo
                If Servicio = 1 And Empresa = 3 Then
                    PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLVTotal, VGFormatoMoney), 10, CGJustificacionDerecha) + " "
                Else
                    PMSetDetalle "v" + "VALOR: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLVTotal, VGFormatoMoney), 10, CGJustificacionDerecha) + " "
                End If
          End If                                                          '--<lfcm 04-agosto-2008
        End If
        
        'lfcm 12-dic-2006
        If (Empresa = 1719 And Servicio = 3) And Me.txt_fecha_emision.Text <> "" Then
            PMSetDetalle "v" + "Fecha Emision: " + Me.txt_fecha_emision.Text
        End If
        
        If ((Empresa = 1707 And Servicio = 1) Or (Empresa = 1708 And Servicio = 2)) And Trim(Me.Fecha.Text) <> "" Then 'ANBE
            PMSetDetalle "v" + "Fecha Emision: " + Me.Fecha.Text
        End If
      
        If (Empresa = 8269 And Servicio = 2) Then                          'JPM IWS TRB -->
         'PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "") + " Nombre: " + Mid(Nombre, 1, 25) '--ref14
          VLVTotal = valor
          PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLVTotal, VGFormatoMoney), 10, CGJustificacionDerecha) + " "
        End If                                                             '<-- JPM IWS TRB
      
        ef$ = ""
        'ref12 inicio
        If Servicio.Text = "3" And (Me.Empresa.Text = "90" Or VLEmpresaMeer = "S") Then
            VLVTotal = valor
            If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLVTotal, VGFormatoMoney), 10, CGJustificacionDerecha) + " "
            End If
            If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                CVcomprobantes(29) = FMEspaciosATX(strobtsma + Format(VLVTotal, VGFormatoMoney), 10, CGJustificacionDerecha)
             End If
        End If
        'ref12 fin
        If FMCCurATX((efe.Text)) > 0 Then
            '<Ref 20
            If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
            End If
            If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                CVcomprobantes(16) = FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha)
            End If
            'Ref 20>
        End If
        
        Chq$ = ""
        If FMCCurATX((Loc.Text)) > 0 Then
            '<Ref 20
            If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
            End If
            If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                CVcomprobantes(19) = Trim(CantChq)
                CVcomprobantes(20) = FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
            End If
            'Ref 20>
        End If
        
        If ef$ <> "" Or Chq$ <> "" Then
            PMSetDetalle "v" + ef$ + Chq$
        End If
        
        If FMCCurATX((Debito.Text)) > 0 Then
            '<Ref 20
            If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                PMSetDetalle "v" + "CTA.: " + Format(Cta.ClipText, "000-000000-0") + " DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 15, CGJustificacionDerecha)
            End If
            If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                CVcomprobantes(17) = Format(Cta.ClipText, "000-000000-0")
                CVcomprobantes(18) = FMEspaciosATX(Format(Debito, VGFormatoMoney), 15, CGJustificacionDerecha)
            End If
            'Ref 20>
        End If
        
        If FMCCurATX((Reten.Text)) > 0 Then
            '<Ref 20
            If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                PMSetDetalle "v" + "RETENCION:" + FMEspaciosATX(Trim(Comprob), 13, CGJustificacionIzquierda) + FMEspaciosATX(Format(Reten, VGFormatoMoney), 12, CGJustificacionDerecha)
            End If
            If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                CVcomprobantes(21) = FMEspaciosATX(Trim(Comprob), 13, CGJustificacionIzquierda) + FMEspaciosATX(Format(Reten, VGFormatoMoney), 12, CGJustificacionDerecha)
            End If
            'Ref 20>
        End If
        
        'PMSetDetalle "v" + "PAGO TOTAL:    " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(Pago_Val.Text), VGFormatoMoney), 20, CGJustificacionDerecha)
        'Dim Coms As String, VLNeto As String   '/*JPM 08122004*/
        'Coms = ""
        '/*JPM 30112004 imprimir comision*/
        If Me.Servicio.Text <> "2" Then 'DAPV cobro comision Agua
            If FMCCurATX((Comision.Text)) > 0 Then
                '<Ref 20
                If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                    Coms = " COMISION: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " "
                End If
                If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                    CVcomprobantes(30) = FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha)
                End If
                'Ref 20>
            End If
        End If
        'EMELMANABI lfcm 07-dic-2006
        If Empresa = 1719 And Servicio = 3 Then
            'VLNeto = FMCCurATX(Pago_Val.Text)
            
            'lfcm 04-enero-2007 (Cambio por pagos parciales)
            'VLNeto = FMCCurATX(Valor)
            VLNeto = (CCur(Me.efe) + CCur(Me.Loc) + CCur(Me.Debito))
            
            'PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha)
            PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha)
        Else
            If Servicio = 6 Then  'hy-19-enero-2007
                VLNeto = FMCCurATX(Total.Text) - FMCCurATX(Comision.Text)  'hy-19-enero-2007
            Else
                If Not ((Servicio = 1 And Empresa = 1707) Or (Servicio = 2 And Empresa = 1708) Or (Servicio = 3 And Empresa = 1)) Then 'ANBE 120806 if & else   hy-categ inclusion servicio 3 empresa 1
                  'VLNeto = FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)  '/*cambio JPM 08122004*/
                  'If ((Empresa.Text = 1127 Or Empresa.Text = 144) And Servicio = 3) Then 'ref12 comentado
                  If ((Empresa.Text = 1127 Or VLEmpresaMeer = "S") And Servicio = 3) Then 'ref12
                     'VLNeto = FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)  '/*cambio JPM 08122004*/
                     VLNeto = FMCCurATX(Pago_Val.Text)   '/*cambio JPM 08122004*/
                  Else
                    If Me.Servicio.Text <> "2" And Me.Servicio.Text <> "1" Then 'DAPV Comision Agua
                    
                        If Me.Empresa.Text = "1372" Or Me.Empresa.Text = "1373" Then 'msilvag
                            VLNeto = FMCCurATX(Pago_Val.Text) 'msilvag
                        Else
                            VLNeto = FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)  '/*cambio JPM 08122004*/
                        End If
                    Else
                         VLNeto = FMCCurATX(Pago_Val.Text)
                    End If
                  End If
                Else
                    If Servicio = 3 And Empresa = 1 And VGTipoEjecucion = CGReverso Then  'hy-categ
                        VLNeto = FMCCurATX(Total.Text)   'hy-categ
                    Else  'hy-categ
                        VLNeto = FMCCurATX(Total.Text) - FMCCurATX(Comision.Text)  'ANBE <
                    End If
                  Coms = ""
                End If
                If Servicio = 1 And Empresa = 3 And VLPABOP = "S" Then 'ANBE 062007
                  VLNeto = FMCCurATX(Pago_Val.Text): Coms = ""
                End If
            End If
            If Trim(Servicio.Text) = "6" Then   'hy-19-enero-2007
                PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha)   'hy-19-enero-2007
            Else
                'PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms  '/*JPM 08122004*/
                If Empresa.Text = 1127 Then
                   PMSetDetalle "v" + "TOTAL:    " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) '/*JPM 08122004*/
                Else
                   If Trim(Servicio.Text) = "1" And Trim(Empresa) = "3" Then
                        PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms  '& "  FECHA EMISION: " & VLFechaEmiCNT  'Format(Date, "YYYYMMDD") '/*JPM 08122004*/
                    'msilvag Inicio Abril 4-2013
                    ElseIf Trim(Servicio.Text) = "2" And (Trim(Empresa) = "360" Or Trim(Empresa) = "4" Or Trim(Empresa) = "6") Then
                        VLNeto = FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)
                        '<Ref 20
                        If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                            PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) '- Coms  '& "  FECHA EMISION: " & VLFechaEmiCNT  'Format(Date, "YYYYMMDD") '/*JPM 08122004*/
                        End If
                        If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                            CVcomprobantes(22) = FMEspaciosATX(strobtsma + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) '- Coms  '& "  FECHA EMISION: " & VLFechaEmiCNT  'Format(Date, "YYYYMMDD") '/*JPM 08122004*/
                        End If
                        'Ref 20>
                    'msilvag Fin Abril 4-2013
                    Else
                      'ref15 Ini
                      If VLEmpresaMeer = "S" Then
                        VLNeto = FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)
                      End If
                      'ref15 Fin
                      '<Ref 20
                        If VLVerde <> "S" Or Loc.Text <> "0.00" Then
                            PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms  '/*JPM 08122004*/
                        End If
                        If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                            CVcomprobantes(22) = FMEspaciosATX(strobtsma + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) '+ Coms
                        End If
                       'Ref 20>
                    End If
                End If
            End If
        End If
        
        '/*JPM 30112004 incluir comision*/ /*JPM 08122004 restar comision del total*/
        'PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(Pago_Val.Text), VGFormatoMoney), 12, CGJustificacionDerecha) + Coms '/*JPM 08122004 (comentario)*/
        
        
        
        If Trim(Servicio.Text) = "1" Then
            'If Trim(Empresa) <> "617" Then
            'gmartillo 10/16/2009
            If Trim(Empresa) <> "617" And Trim(Empresa) <> "3" And Trim(Empresa) <> "1707" And Trim(Empresa) <> "1708" Then   'ANBE 110806  (1707/1708)
            'PMSetDetalle "v" + "FECHA FACTURACION: " + VLFecEmi 'Mid(VLMes, 2, 7)
            'Else
              If VLPABOP = "S" Then
                 If Me.serpac.Text <> "ANU" Then
                    PMSetDetalle "v" + "MES FACTURACION: " + Mid(VlMes, 2, 7) + " FEC.VENC: " + VLFechaVenc    'lfcm 18-agosto-2008
                 Else
                    PMSetDetalle "v" + "MES FACTURACION: " + Mid(VlMes, 2, 7)                                   'lfcm 18-agosto-2008
                 End If
                
                
                If VGTipoEjecucion = CGReverso Then PMSetDetalle "v" + ""
              Else
                PMSetDetalle "v" + "MES FACTURACION: " + Mid(VlMes, 2, 7)
              End If
            End If
        End If
        
        sal_empr = valor.Text - Pago_Val.Text
        
        If Trim(Servicio.Text) <> "6" Then   'hy-19-enero-2007
            If Trim(Sal_Emp) <> "" And ((FMCCurATX(valor.Text) - (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text))) >= 0) Then '/*JPM 30112004 restar comision*/
                If Empresa = 1719 And Servicio = 3 Then  'EMELMANABI lfcm 07-dic-2006
                    'PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)) - (FMCCurATX(Pago_Val.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
                    
                    'lfcm 04-enero-2007(Cambio por pagos parciales)
                    'PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(Total.Text) - FMCCurATX(Comision.Text) - FMCCurATX(valor.Text), VGFormatoMoney), 13, CGJustificacionIzquierda)
                    SaldoFecha = (CCur(Me.valor) - CCur(Me.efe) - CCur(Me.Debito) - CCur(Me.Loc))
                    PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(SaldoFecha), VGFormatoMoney), 13, CGJustificacionIzquierda)
                ElseIf (Empresa = 3 Or Empresa = 5479) And Servicio = 1 And VLPABOP = "S" Then   'PACF Abono ANBE 062007
                    PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)) - (FMCCurATX(Pago_Val.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
                ElseIf Empresa = 1 And Servicio = 3 Then
                    PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)) - (FMCCurATX(Pago_Val.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
                ElseIf Empresa = 361 And Servicio = 2 Then
                    PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)) - (FMCCurATX(Pago_Val.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
                Else
                    'Ingresa para mostrar el saldo a pagar de Emelgur
                    'PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((Valor.Text)) - (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
                   'If Empresa.Text = 1127 Or Empresa.Text = 144 Then 'ref12 comentado
                   If Empresa.Text = 1127 Then 'ref12
                      'Ingresa para mostrar el saldo a pagar de Emelgur
                      'PMSetDetalle "v" + "SDO A LA FECHA :   " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)) - (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
                      PMSetDetalle "v" + "SDO A LA FECHA :   " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)) - (FMCCurATX(Pago_Val.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
                   'ElseIf Empresa.Text = "144" Then 'ref12  comentado
                   '   PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((Valor.Text)) - (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda) 'ref12 comentado
                   End If
                End If
            End If
        End If
         'gmartillo 10/16/2009
            If Trim(Empresa) = "3" Then
                PMSetDetalle "v" + "REF. FACT. No.: " + Trim(VLFacturaCNT)
            End If
            
        'ANBE 120806 if -->
        If Trim(Empresa) <> "" And ((Trim(Servicio) = 1 And Trim(Empresa) = "1707") Or (Trim(Servicio) = 2 And (Trim(Empresa) = "1708") Or Trim(Empresa.Text) = "8269")) Then   'ETAPA Telf & Agua; JPM TRB IWS 8269
          If ((FMCCurATX(Total.Text) - (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text))) >= 0) Then
            sal_empr = valor.Text - Pago_Val.Text
            PMSetDetalle "v" + "SDO A LA FECHA: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((Total.Text)) - (FMCCurATX(Pago_Val.Text) + FMCCurATX(Comision.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
          End If
        End If
    
        '-->hy-15-feb-2005
        'Solo por la transaccion de servicio colegio (4) imprimir la nota de venta
        If Trim(Servicio.Text) = "4" Then
            If VGTipoEjecucion = CGReverso Then
                If Len(Trim$(Nota_Venta.Text)) >= 15 Then
                    PMSetDetalle "v" + "REF.NOTA VENTA : " + Nota_Venta.Text
                End If
            Else
                If Len(Trim$(VLNotaVenta)) >= 15 Then
                    PMSetDetalle "v" + "REF.NOTA VENTA : " + VLNotaVenta
                End If
            End If
        End If
        '<--hy-15-feb-2005
            '-->hy-31-ene-2005
        If VLTsnTemp% = 0 Then
            VLTsnTemp% = VGTSN%
        End If
        '-->hy-categ
        'FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 8, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn
        'gamc - Hasta aqui el seteo de paramentros para la impresión
    End If 'gamc - 19/04/2008 - fin
    'GAMC - 15/05/2008
   '***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        '<Ref 20
        If VLVerde <> "S" Or Loc.Text <> "0.00" Then
            PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
            PMSetDetalle "v" + VLclave_acceso
        End If
        If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
            CVcomprobantes(23) = VLclave_acceso
        End If
        'Ref 20>
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt
    If Me.Empresa.Text = "862" Then
        If VLHorario = "N" Then
            VLEtiqTrn = "3925" + " - SERVICIOS"
            FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), 3925, , Trim$(str$(FMObtenerMonedaForma("51")))      'hy-categ agregar la moneda
        Else
            VLEtiqTrn = "3927" + "SERVICIOS"
            FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), 3927, , Trim$(str$(FMObtenerMonedaForma("51")))      'hy-categ agregar la moneda
            
        End If
    Else
        '<Ref 20
        If VLVerde <> "S" Or Loc.Text <> "0.00" Then
            FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51"))), , VLVerde    'hy-categ agregar la moneda
        End If
        If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
            GeneraCabCV CStr(VLTsnTemp%), "51", "", VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, Trim$(str$(FMObtenerMonedaForma("51"))), ""
            CVcomprobantes(0) = "62677"
            CVcomprobantes(1) = VLcabCV(0)
            CVcomprobantes(2) = VLcabCV(1) + " " + VLcabCV(2)
            CVcomprobantes(3) = VLcabCV(3)
            CVcomprobantes(4) = VLcabCV(4)
            CVcomprobantes(5) = VLcabCV(5)
            CVcomprobantes(6) = VLcabCV(6)
            CVcomprobantes(7) = VLcabCV(7)
            CVcomprobantes(8) = VLcabCV(8) + " " + VLcabCV(9)
            CVcomprobantes(9) = VLcabCV(10)
            CVcomprobantes(10) = VLcabCV(11)
            
            CVcomprobantes(24) = VLcodTransaccion
            CVcomprobantes(25) = VLcodCT
            CVcomprobantes(26) = VLMail
            CVcomprobantes(27) = VLTpTrans
            CVcomprobantes(28) = VLcabCV(12)
        End If
        'Ref 20>
    End If
    
    '<--hy-categ
    
    
    
    'lfcm 07-dic-2006
    'Reimpresion del Comprobante de Transaccion
    'If VGTipoEjecucion = CGNormal% Then
    If VGTipoEjecucion = CGNormal% And Empresa <> 862 Then 'GAMC - 19/05/2008
        If VLVerde <> "S" Or Loc.Text <> "0.00" Then
            While MsgBox("Desea Reimprimir el Formulario?", vbYesNo, "Mensaje") = vbYes
                PMReimpresion
            Wend
      End If
    End If
  
  ' comenta ame 08/04/2010 cambio por facturas cobro comision
'    If Comision.Text > 0 Then
'        ImprimeNotaVenta
'    End If
'
    If VGTipoEjecucion% <> CGReverso% And VLTotCom > 0 Then
        If VLfact_elect = "N" Then
            VLTipo_imp = "O"
            ImprimeNotaVenta                                              'TC 19022010 TRIPLEORO
            If MsgBox("Desea imprimir copia de la factura por la comision?", vbYesNo, "Mensaje") = vbYes Then
               VLTipo_imp = "C"
               ImprimeNotaVenta
            End If
            VLTipo_imp = "O"
''        Else
''           MsgBox "Cliente tiene facturación electrónica imprimir comprobante por 24Online", vbInformation, "Sistema"
        End If
    End If

    
    
End If
    '<--hy-31-ene-2005
        'JPM 22122004  ---> reverso cambios cedula
'    '---------------------------------------------------------
'    '/*JPM 08122004 ---> impresion   de   nota   de   venta */
'    '/*JPM 20122004 ---> imprimir solo si existe comision   */
'    If FMCCurATX(Pago_Val.Text) > 0 And FMCCurATX(Comision.Text) > 0 And VGTipoEjecucion = CGNormal% Then
'       '/*JPM 08122004 reimpresión de formulario*/
'       If VGTipoEjecucion = CGNormal% Then
    '         While MsgBox("Desea Reimprimir el Comprobante de Transacción?", vbYesNo, "Mensaje") = vbYes
'           PMReimpresion
'         Wend
'       End If
'
'       PMInicioImpresion "IMPRESORA_1"
'       PMBorrarDatosImpresion
'
'       VGparlong$ = "66"
'       VGpartop$ = "00"
'       VGparleft$ = "30"
'       VGparrig$ = "00"
'
'       PMSetLineaImpresion "x" + "Inserte COMPROBANTE Cobro Comision"
'       PMSetLineaImpresion "<"
'
'       '    If VGModeloImp$ <> "590" Then
'       '        PMSetLineaImpresion "<"
'          PMSetLineaImpresion "!" & VGpartop$
'          PMSetLineaImpresion "%N" & VGparleft$
'       '    End If
'
'       PMSetLineaImpresion "v" + "NOTA DE VENTA"
'       PMSetLineaImpresion "v" + "BCO.BOLIVARIANO " + "RUC.: " + " 0990379017001"
'       PMSetLineaImpresion "v" + "Autoriz.:" + VLautoriSri + " Doc.: " + CStr(VGTSN%) & "-" & SGSecTrn
'       PMSetLineaImpresion "v" + "Valido Hasta :" + VLFecvenSRI
'       PMSetLineaImpresion "v" + "Direccion Matriz : " + "Junin 200 y Panama "
       '-->hy-31-ene-2005
       'PMSetLineaImpresion "v" + "Oficina : " + VGDes_Oficina$ + " " + IIf(VLHorario = "0", IIf(VGHorarioDif, "H:D", "H:N"), "H:" + Trim$(VLHorario)) + " " + IIf(VGTipoEjecucion = CGReverso, "REVERSO", "")
       '<--hy-31-ene-2005
'       PMSetLineaImpresion "v" + "Oficina : " + VGDes_Oficina$ + " " + IIf(Trim(VLHorario) = "0", IIf(VGHorarioDif, "H:D", "H:N"), "H:" & UCase(Trim(VLHorario))) _
'                               + " " + IIf(VGTipoEjecucion = CGReverso, "REVERSO", "")
'       PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + " " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$)
'       'If Trim(Servicio.Text) = "1" Then
'       '   PMSetLineaImpresion "v" + "Telefono: " + Trim(Ref) + " " + " Area: " + Mid(sal_proc, 1, 10)
'       'Else
'       '   PMSetLineaImpresion "v" + "Codigo: " + Trim(Ref) + " " + IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
'       'End If
'       If VLIdEsValida Then
'         PMSetLineaImpresion "v" + "Cliente Final: " + Trim(txtCedula.Text)
'       End If
'       PMSetLineaImpresion "v" + "Monto Factura: " + FMEspaciosATX(Format(VLNeto, VGFormatoMoney), 8, CGJustificacionDerecha)
'       'PMSetLineaImpresion "v" + "Monto Factura: " + FMEspaciosATX(Format(Valor.Text, VGFormatoMoney), 8, CGJustificacionDerecha)
'       PMSetLineaImpresion "v" + "Servicio Recaudado: " + lblServicio.Caption
'       If FMCCurATX(Comision.Text) > 0 Then
'         PMSetLineaImpresion "v" + "Comision: " + FMEspaciosATX(Format(FMCCurATX(Comision.Text), VGFormatoMoney), 13, CGJustificacionDerecha)
'       End If
'       PMSetLineaImpresion "v" + "PAGO TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(Pago_Val), VGFormatoMoney), 25, CGJustificacionDerecha)
'       PMSetLineaImpresion "v" + " "
'
'       If VGModeloImp$ = "590" Then
'          PMSetLineaImpresion "%R" & 8
'       End If
'
'       PMSetLineaImpresion ">"
'       PMImprimir "IMPRESORA_1", False
'       PMFinImpresion "IMPRESORA_1"
'    End If
'    '-------------------------------------------------
'    '/*JPM 08122004 <--- fin impresion nota de venta*/
'    '-------------------------------------------------
    
    '<--- fin reverso cambios cedula JPM 22122004
    'REF:esma01SEP2004   Andinatel Imprime Factura
    If VGTipoEjecucion <> CGReverso Then
        Select Case Trim(Servicio.Text)
        Case 1
            If Trim(Empresa) = "617" Then FLImpFactura
        End Select
    End If
    '<--
    
    '<Ref 20
    'envío de parámetros a cola
    If VLVerde = "S" And VLfnCV <> "" And VGTipoEjecucion% <> CGReverso% Then
        EnviaparmCV
    End If
    
    VLVerde = ""
    VLcodCT = ""
    VLcodTransaccion = ""
    UUID = ""
    VLcvfactura = ""
    VLtpdnidep = ""
    VLdnidep = ""
    VLnomdep = ""
    VLMail = ""
    VLTpTrans = ""
    VLfnCV = ""
    Erase VLcabCV
    VlEjecInfoCVv = False
    Erase CVcomprobantes
    FPrincipal!txtctqr.Text = ""
    'Ref 20>

    '------> Sumadora
    If SGAcumulado = 0 Then
        Form_KeyDown CGTeclaF2%, 0
    Else
        Form_KeyDown CGTeclaF2%, -1
    End If
    '<--------
End Sub

'lfcm Imprime Nota de Venta (Comprobante de la Comision)

Sub ImprimeNotaVenta()
    If Comision > 0 And VGTipoEjecucion = CGNormal% Then
        If (Servicio = 1 And Empresa = 1707) Or (Servicio = 2 And Empresa = 1708) Then 'ANBE 121106 todo if
          VLNeto = FMCCurATX(Total.Text) - FMCCurATX(Comision.Text)
          If Empresa = "1707" Then
            VTitulo = "Servicio Recaudacion Pago Telef: "
          ElseIf Empresa = "1708" Then
            VTitulo = "Servicio Recaudacion Pago Agua: "
          End If
        Else

          VLNeto = valor
          VTitulo = "Servicio Recaudacion " + Trim$(lblservicio.Caption) + ": "   'hy-19-enero-2007
        End If
                
        '********************************************************************
        '                 EMULACION DE IMPRESION DE COMPROBANTE             '
        '********************************************************************
        'Inicio Emulacion de Comprobante de Comision
'        VLEfe_com = Format(FMCCurATX(VLEfe_com), "###,###,###,##0.00")
'        VLChq_com = Format(FMCCurATX(VLChq_com), "###,###,###,##0.00")
'        VLTotCom = Format(FMCCurATX(VLTotCom), "###,###,###,##0.00")
'
'        Debug.Print "NOTA DE VENTA               ORIGINAL"
'        Debug.Print "BCO.BOLIVARIANO " + "RUC.: " + " 0990379017001"
'        Debug.Print "CONTRIBUYENTE ESPECIAL"
'        Debug.Print "NOTIFICACION No. 39 de Julio 18 de 1995"
'        Debug.Print "RESOLUCION No. 6925 de Julio 4 de 1995"
'        Debug.Print "Autoriz.:" + VLautoriSri + " Doc.: " + VLSerie_Secuencia
'        Debug.Print "Valido Hasta: " + VLFecvenSRI
'        Debug.Print "Direccion Matriz: " + "Junin 200 y Panama"
'        Debug.Print "Oficina : " + VGDes_Oficina$ + " " + IIf(VGHorarioDif, "H:D", "H:N") + " " + IIf(VGTipoEjecucion = CGReverso, "REVERSO", "")
'        Debug.Print "Caj: " + VGLogin$ + " " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$)
'        Debug.Print "Cliente Final: " & cedula & FMEspaciosATX("  $ " & CCur(valor), 15, CGJustificacionDerecha)
'        Debug.Print "Servicio Recaudacion Pago de Luz: $ " & Comision
'        If FMCCurATX(VLEfe_com) > 0 Then
'            VTEf$ = "EFE.: " + FMEspaciosATX(Format(VLEfe_com, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
'        End If
'        If FMCCurATX((VLChq_com)) > 0 Then
'                VTCh$ = "CHQ.: " + FMEspaciosATX(Format(VLChq_com, VGFormatoMoney), 12, CGJustificacionDerecha)
'        End If
'        If VTEf$ <> "" Or VTCh$ <> "" Then
'               Debug.Print VTEf$ + VTCh$
'        End If
'        If FMCCurATX((VLDeb_com)) > 0 Then
'              Debug.Print (VLTipCta_com) + " CTA: " + Format(VLCta_com, "000-000000-0") + " DEB.: " + FMEspaciosATX(Format(VLDeb_com, VGFormatoMoney), 10, CGJustificacionDerecha)
'        End If
'        Debug.Print "PAGO TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(VLTotal), VGFormatoMoney), 28, CGJustificacionDerecha)
'        Debug.Print " "
        '****************************************************
        'Fin de Emulacion del Comprobante de Comision

        '********************************************************************
        '                                IMPRIMIR                           '
        '********************************************************************
        
        'Dimensiones
        VGparlong$ = "66"  'smerino
        VGpartop$ = "00"
        VGparleft$ = "07" '05
        VGparrig$ = "00"
        
        'smerino cambia formato de fecha de emision
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
        Case Is = "01"
        mes2 = "Enero"
        Case Is = "02"
        mes2 = "Febrero"
        Case Is = "03"
           mes2 = "Marzo"
        Case Is = "04"
           mes2 = "Abril"
        Case Is = "05"
           mes2 = "Mayo"
        Case Is = "06"
           mes2 = "Junio"
        Case Is = "07"
           mes2 = "Julio"
        Case Is = "08"
           mes2 = "Agosto"
        Case Is = "09"
           mes2 = "Septiembre"
        Case Is = "10"
           mes2 = "Octubre"
        Case Is = "11"
           mes2 = "Noviembre"
        Case Is = "12"
           mes2 = "Diciembre"
       End Select
        
       VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
        
        'Calculo del Valor Total que se imprimira en el Comprobante de Comision
       'VLTotal = Format(FMCCurATX((Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Me.Debito.Text) + FMCCurATX(Me.Comision.Text)), "###,###,###,##0.00")
        VLTotal = Format(FMCCurATX((efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Me.Debito.Text) + FMCCurATX(Me.Comision.Text)), "###,###,###,##0.00")
       
        
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL   " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        'PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha: " + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + Trim(lblservicio.Caption) + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "Subtotal:      " + FMEspaciosATX(Format(VlbaseImp, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(VLiva, VGFormatoMoney), 8, CGJustificacionDerecha) 'smerino cambios
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
     If VLTipo_imp = "O" Then
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
     Else
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
     End If
        
        'PMSetDetalle "v" + " "
       
'        PMInicioImpresion "IMPRESORA_1"
'        PMBorrarDatosImpresion
'        'Dimensiones
'        VGparlong$ = "66"
'        VGpartop$ = "00"
'        VGparleft$ = "30"
'        VGparleft$ = "20"
'        VGparrig$ = "00"
'
'        PMSetLineaImpresion "x" + "Inserte COMPROBANTE Cobro Comision"
'        PMSetLineaImpresion "<"
'        'Calculo del Valor Total que se imprimira en el Comprobante de Comision
'       'VLTotal = Format(FMCCurATX((Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Me.Debito.Text) + FMCCurATX(Me.Comision.Text)), "###,###,###,##0.00")
'        VLTotal = Format(FMCCurATX((Efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Me.Debito.Text) + FMCCurATX(Me.Comision.Text)), "###,###,###,##0.00")
'        PMSetLineaImpresion "!" & VGpartop$
'        PMSetLineaImpresion "%N" & VGparleft$
'
'
'        PMSetLineaImpresion "v" + "BANCO BOLIVARIANO S.A.     FACTURA"
'        PMSetLineaImpresion "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
'        PMSetLineaImpresion "v" + "Junin 200 y Panama         " + "No.Autoriz.:" + VLautoriSri
'        PMSetLineaImpresion "v" + "CONTRIBUYENTE ESPECIAL   " + "Validez :" + VLFecvenSRI
'        PMSetLineaImpresion "v" + "NOTIFICACION No. 39 de Julio 18 de 1995"
'        PMSetLineaImpresion "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
'        PMSetLineaImpresion "v" + "Sr.(es): " + (SGNombre)
'        PMSetLineaImpresion "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
'        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
'        PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
'        PMSetLineaImpresion "v" + Trim(lblServicio.Caption) + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "Subtotal:      " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(0, VGFormatoMoney), 8, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
'     If VLTipo_imp = "O" Then
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
'     Else
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
'     End If
'
'        PMSetLineaImpresion "v" + " "

        ' comenta ame 08/03/2010 cambio por facturas cobro comision
        
'        PMSetLineaImpresion "v" + "NOTA DE VENTA               ORIGINAL"
'        PMSetLineaImpresion "v" + "BCO.BOLIVARIANO " + "RUC.: " + " 0990379017001"
'        PMSetLineaImpresion "v" + "CONTRIBUYENTE ESPECIAL"
'        PMSetLineaImpresion "v" + "NOTIFICACION No. 39 de Julio 18 de 1995"
'        PMSetLineaImpresion "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
'        PMSetLineaImpresion "v" + "Autoriz.:" + VLautoriSri + " Doc.: " + VLSerie_Secuencia
'        PMSetLineaImpresion "v" + "Valido Hasta: " + VLFecvenSRI
'        PMSetLineaImpresion "v" + "Direccion Matriz: " + "Junin 200 y Panama"
'        PMSetLineaImpresion "v" + "Oficina : " + VGDes_Oficina$ + " " + IIf(VGHorarioDif, "H:D", "H:N") + " " + IIf(VGTipoEjecucion = CGReverso, "REVERSO", "")
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + " " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$)
'        'PMSetLineaImpresion "v" + "Cliente Final: " & cedula & "  $ " & CCur(valor - Comision)
'
'        'lfcm 04-enero-2007 (Cambio por pagos parciales)
'        'PMSetLineaImpresion "v" + "Cliente Final: " & cedula & FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(valor), VGFormatoMoney), 20, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "Cliente Final: " & cedula & FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX((CCur(Me.Efe) + CCur(Me.Loc) + CCur(Me.Debito))), VGFormatoMoney), 20, CGJustificacionDerecha)
'
'        PMSetLineaImpresion "v" + VTitulo & FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(Comision), VGFormatoMoney), 10, CGJustificacionDerecha)
'        'PMSetLineaImpresion "v" + "PAGO TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(valor - Comision + VLEfe_com + VLChq_com), VGFormatoMoney), 12, CGJustificacionDerecha)
'        PMSetLineaImpresion "" + ""
'        VTEf$ = ""
'        VTCh$ = ""
'        If FMCCurATX(VLEfe_com) > 0 Then
'            VTEf$ = "EFE.: $ " + FMEspaciosATX(Format(VLEfe_com, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
'        End If
'        If FMCCurATX((VLChq_com)) > 0 Then
'                VTCh$ = "CHQ.: $ " + FMEspaciosATX(Format(VLChq_com, VGFormatoMoney), 12, CGJustificacionDerecha)
'        End If
'        If VTEf$ <> "" Or VTCh$ <> "" Then
'               PMSetLineaImpresion "v" + VTEf$ + VTCh$
'        End If
'        If FMCCurATX((VLDeb_com)) > 0 Then
'               PMSetLineaImpresion "v" + (VLTipCta_com) + " CTA: " + Format(VLCta_com, "000-000000-0") + " DEB.: " + FMEspaciosATX(Format(VLDeb_com, VGFormatoMoney), 10, CGJustificacionDerecha)
'        End If
'
'        'lfcm 25-septiembre-2006
'        'PMSetLineaImpresion "v" + "PAGO TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(VLTotal), VGFormatoMoney), 12, CGJustificacionDerecha)
'        'PMSetLineaImpresion "v" + "PAGO TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(VLTotal - (CCur(Comision.Text))), VGFormatoMoney), 12, CGJustificacionDerecha)
'        'Debug.Print              "PAGO TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(VLTotal), VGFormatoMoney), 28, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "PAGO TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(VLTotal), VGFormatoMoney), 33, CGJustificacionDerecha)
'        'PMSetLineaImpresion "v" + "PAGO TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(valor - Comision + VLEfe_com + VLChq_com), VGFormatoMoney), 28, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + " "

        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If

'        PMSetLineaImpresion ">"
'        PMImprimir "IMPRESORA_1", False
'        PMFinImpresion "IMPRESORA_1"
'
   FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn
'  'PAOLA PRUEBA
        
    End If
    If Empresa = "862" And Servicio = 5 Then 'GAMC - 05/16/2008 - SOAT - ini
        If Comision > 0 And VGTipoEjecucion <> CGNormal% Then
            If (Servicio = 1 And Empresa = 1707) Or (Servicio = 2 And Empresa = 1708) Then 'ANBE 121106 todo if
          VLNeto = FMCCurATX(Total.Text) - FMCCurATX(Comision.Text)
          If Empresa = "1707" Then
            VTitulo = "Servicio Recaudacion Pago Telef: "
          ElseIf Empresa = "1708" Then
            VTitulo = "Servicio Recaudacion Pago Agua: "
          End If
        Else

          VLNeto = valor
          VTitulo = "Servicio Recaudacion " + Trim$(lblservicio.Caption) + ": "   'hy-19-enero-2007
        End If
        'Calcula el total que se imprimira en el comprobante
        VLTotal = Format(FMCCurATX((efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Me.Debito.Text) + FMCCurATX(Me.Comision.Text)), "###,###,###,##0.00")
                
                
                
      
        'Dimensiones
        VGparlong$ = "66"  'smerino
        VGpartop$ = "00"
        VGparleft$ = "07" '05
        VGparrig$ = "00"

  
        'Calculo del Valor Total que se imprimira en el Comprobante de Comision
        VLTotal = Format(FMCCurATX((efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Me.Debito.Text) + FMCCurATX(Me.Comision.Text)), "###,###,###,##0.00")
       
        
        PMSetDetalle "v" + "BANCO.BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (VLNombre)
        PMSetDetalle "v" + "CI/RUC: " + (cedula) + "   " + "Ofic.: " + VGDes_Oficina$
        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + Trim(Sal_Emp.Caption) + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "Subtotal:      " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(0, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
     If VLTipo_imp = "O" Then
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
     Else
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
     End If
        
        'PMSetDetalle "v" + " "
                
                
                
        
'        PMInicioImpresion "IMPRESORA_1"
'        PMBorrarDatosImpresion
'        'Dimensiones
'        VGparlong$ = "66"
'        VGpartop$ = "00"
'        VGparleft$ = "30"
'        VGparleft$ = "20"
'        VGparrig$ = "00"
'
'        PMSetLineaImpresion "x" + "Inserte COMPROBANTE Cobro Comision"
'        PMSetLineaImpresion "<"
'        'Calculo del Valor Total que se imprimira en el Comprobante de Comision
'        VLTotal = Format(FMCCurATX((efe.Text) + FMCCurATX(Loc.Text) + FMCCurATX(Me.Debito.Text) + FMCCurATX(Me.Comision.Text)), "###,###,###,##0.00")
'        PMSetLineaImpresion "!" & VGpartop$
'        PMSetLineaImpresion "%N" & VGparleft$
'
'        PMSetLineaImpresion "v" + "BANCO.BOLIVARIANO S.A.     FACTURA"
'        PMSetLineaImpresion "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
'        PMSetLineaImpresion "v" + "Junin 200 y Panama         " + "No.Autoriz.:" + VLautoriSri
'        PMSetLineaImpresion "v" + "CONTRIBUYENTE ESPECIAL     " + "Validez :" + VLFecvenSRI
'        PMSetLineaImpresion "v" + "NOTIFICACION No. 39 de Julio 18 de 1995"
'        PMSetLineaImpresion "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
'        PMSetLineaImpresion "v" + "Sr.(es): " + (VLNombre)
'        PMSetLineaImpresion "v" + "CI/RUC: " + (Cedula) + "   " + "Ofic.: " + VGDes_Oficina$
'        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
'        PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
'        PMSetLineaImpresion "v" + Trim(Sal_Emp.Caption) + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "Subtotal:      " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(0, VGFormatoMoney), 8, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
'     If VLTipo_imp = "O" Then
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
'     Else
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
'     End If
'
'        PMSetLineaImpresion "v" + " "

        
        
        
        ' comenta ame 08/04/2010 cambio por facturas cobro comision
'        PMSetLineaImpresion "v" + "NOTA DE VENTA               ORIGINAL"
'        PMSetLineaImpresion "v" + "BCO.BOLIVARIANO " + "RUC.: " + " 0990379017001"
'        PMSetLineaImpresion "v" + "CONTRIBUYENTE ESPECIAL"
'        PMSetLineaImpresion "v" + "NOTIFICACION No. 39 de Julio 18 de 1995"
'        PMSetLineaImpresion "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
'        PMSetLineaImpresion "v" + "Autoriz.:" + VLautoriSri + " Doc.: " + VLSerie_Secuencia
'        PMSetLineaImpresion "v" + "Valido Hasta: " + VLFecvenSRI
'        PMSetLineaImpresion "v" + "Direccion Matriz: " + "Junin 200 y Panama"
'        PMSetLineaImpresion "v" + "Oficina : " + VGDes_Oficina$ + " " + IIf(VGHorarioDif, "H:D", "H:N") + " " + IIf(VGTipoEjecucion = CGReverso, "REVERSO", "")
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + " " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$)
'        PMSetLineaImpresion "v" + "Cliente Final: " & cedula & FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX((CCur(Me.Efe) + CCur(Me.Loc) + CCur(Me.Debito))), VGFormatoMoney), 20, CGJustificacionDerecha)
'
'        PMSetLineaImpresion "v" + VTitulo & FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(Comision), VGFormatoMoney), 10, CGJustificacionDerecha)
'
'        PMSetLineaImpresion "" + ""
'        VTEf$ = ""
'        VTCh$ = ""
'        If FMCCurATX(VLEfe_com) > 0 Then
'            VTEf$ = "EFE.: $ " + FMEspaciosATX(Format(VLEfe_com, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
'        End If
'        If FMCCurATX((VLChq_com)) > 0 Then
'                VTCh$ = "CHQ.: $ " + FMEspaciosATX(Format(VLChq_com, VGFormatoMoney), 12, CGJustificacionDerecha)
'        End If
'        If VTEf$ <> "" Or VTCh$ <> "" Then
'               PMSetLineaImpresion "v" + VTEf$ + VTCh$
'        End If
'        If FMCCurATX((VLDeb_com)) > 0 Then
'               PMSetLineaImpresion "v" + (VLTipCta_com) + " CTA: " + Format(VLCta_com, "000-000000-0") + " DEB.: " + FMEspaciosATX(Format(VLDeb_com, VGFormatoMoney), 10, CGJustificacionDerecha)
'        End If
'
'        PMSetLineaImpresion "v" + "PAGO TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("15") + Format(FMCCurATX(VLTotal), VGFormatoMoney), 33, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + " "

        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If

'        PMSetLineaImpresion ">"
'        PMImprimir "IMPRESORA_1", False
'        PMFinImpresion "IMPRESORA_1"

 FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn
'  'PAOLA PRUEBA
        End If
    End If 'GAMC - 05/16/2008 - SOAT - ini
    
    'Fin de la Impresion del Comprobante por la Comision
    
End Sub


Sub PLTipoTransaccion(Optional parHorario As String = "")
    Dim VLHorarioDif As Boolean
    
    VLEtiqTrn = ""
    If parHorario = "N" Then
        VLHorarioDif = False
    ElseIf parHorario = "D" Then
        VLHorarioDif = True
    Else
        VLHorarioDif = VGHorarioDif
    End If
    
    Select Case Trim(Servicio.Text)
    Case 1
        'ref:INIesma02Ago2004
        Select Case Trim(Empresa.Text)
        Case 3, 1707   'Pacifictel, ETAPA
            If Not VLHorarioDif Then
                VLTrn = "3194"
            Else
                VLTrn = "3203"
            End If
            If Trim(Empresa.Text) = 3 Then VLProcedure = "sp_pago_emetel_rc"
        Case "617"  'Andinatel
            If vlOpcion <> "C" Then
                If Not VLHorarioDif Then
                    VLTrn = "3485"
                Else
                    VLTrn = "3486"
                End If
            Else
                VLTrn = "3485"
            End If
            VLProcedure = "sp_pago_andinatel"
        End Select
        'ref:INIesma02Ago2004
    Case 2
        If Trim(Empresa.Text) = "8269" Then     'JPM Interagua TRB -->
          If Not VLHorarioDif Then
              VLTrn = "3925"
              If VGHorarioDif Then
                 VLHorario = "D"
              End If
          Else
              If VLHorario = "O" Or (VLHorarioBK = "O" And VGTipoEjecucion% = CGReverso%) Then
                  VLTrn = "3926"
                  VLHorario = "D"
              Else
                  VLTrn = "3927"
              End If
          End If
          VLProcedure = "sp_tr_pago_servicio_rc"
        Else                                    '<-- JPM Interagua TRB
          If Not VLHorarioDif Then
              VLTrn = "3137"
          Else
              VLTrn = "3201"
          End If
          VLProcedure = "sp_tr_pago_agua_rc"
        End If                                  'JPM Interagua TRB
        
    Case 3
        'If VGEmpGrupo = "S" Or Trim(Empresa.Text) = "144" Then 'DAPV/03132012/CNEL 'ref12 comentado
        If VGEmpGrupo = "S" Or (Me.Empresa.Text = "90" Or VLEmpresaMeer = "S") Then 'DAPV/03132012/CNEL 'ref12
        
           'ref12 inicio
           If FEsEmpresaTranPers(Trim(Empresa.Text)) Then 'se realiza esto porque la empresa eléctrica de Quito guarda otro código de transacción
             If Not VLHorarioDif Then
                VLTrn = "3173"
             Else
                VLTrn = "3202"
             End If
           Else
               If Not VLHorarioDif Then
                   VLTrn = "3916"
               Else
                   VLTrn = "3919"
               End If
           End If
            'ref12 fin
        Else
            If Not VLHorarioDif Then
                VLTrn = "3173"
            Else
                VLTrn = "3202"
            End If
            VLProcedure = "sp_tr_pago_luz_rc"
        End If
    Case 4
        If Not VLHorarioDif Then
            VLTrn = "3113"
        Else
            VLTrn = "3232"
        End If
        VLProcedure = "sp_tr_pago_colegio_rc"
    Case 5, 6   'hy-19-enero-2007 inclusion del servicio 6 smerino new tvcable
'        If Me.Empresa.Text = "862" Then
'            If Not VLHorarioDif Then
'                VLTrn = "3925"
'            Else
'                VLTrn = "3927"
'            End If
'        Else
        If Me.Empresa.Text = "118" Or Me.Empresa.Text = "115" Or Me.Empresa.Text = "451" Or Trim(Servicio.Text) = "6" Or Me.Empresa.Text = "8521" Or Me.Empresa.Text = "5994" Or Me.Empresa.Text = "7256" Or Me.Empresa.Text = "8090" Or Me.Empresa.Text = "6087" Or Me.Empresa.Text = "1125" Then   'gamc 02/16/2012  CONECEL TVS dpereirv belcorp RecaudacionEducacion ref17
            If Not VLHorarioDif Then
                VLTrn = "3925"
                If VGHorarioDif Then
                   VLHorario = "D"
                End If
            Else
                If VLHorario = "O" Then
                    VLTrn = "3926"
                    VLHorario = "D"
                Else
                    VLTrn = "3927"
                End If
            End If
        Else
            If Not VLHorarioDif Then
                VLTrn = "3218"
            Else
                VLTrn = "3219"
            End If
        End If
        VLProcedure = "sp_tr_pago_servicio_rc"
    End Select
    If Trim(Servicio.Text) = "2" And Trim(Empresa.Text) = "8269" Then   'JPM TRB IWS -->
        PMChequea VGSqlConn&
        PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_recaudaciones"
        PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
        PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, "5"
        If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "") Then
            PMMapeaObjetoATX VGSqlConn&, lblAux
            PMChequea VGSqlConn&
        Else
            lblAux.Caption = lblservicio.Caption
            PMChequea VGSqlConn&
            Exit Sub
        End If
        VLEtiqTrn = VLTrn + " " + lblAux.Caption
    Else                                                                '<-- JPM TRB IWS
      VLEtiqTrn = VLTrn + " " + lblservicio
    End If                                                              '    JPM TRB IWS
End Sub

Private Sub Proceso_Change()
    VLCambio% = True
        sal_proc.Caption = "" 'CRR 08/04/2005
    If VGTipoEjecucion% <> CGReverso% Then
        Ref.Text = "" 'Cnt Movil
    End If
End Sub

Private Sub Proceso_GotFocus()
    FPrincipal!pnlHelpLine.Caption = "Ingrese el tipo de proceso"
    'ini cmeg 09Nov2005
    If Trim(Me.Servicio.Text) = "4" Then
        Set Proceso.Connection = Nothing
    Else
        Set Proceso.Connection = VGMap
    End If
    'fin cmeg 09Nov2005
End Sub

Private Sub Proceso_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        If Proceso.Enabled Then
            Proceso.Clear
        End If
    Case CGTeclaHOME%
        PMCambiarForma Me
    Case CGTeclaUP%, CGTeclaREPAG%
        If Servicio.Enabled Then
            Servicio.SetFocus
        End If
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        
        Call Proceso_LostFocus 'cmeg 09Nov2005
        SendKeys "{TAB}" 'cmeg 09Nov2005
    'ini cmeg 09Nov2005
    Case vbKeyF5
        If Trim(Servicio.Text) = "4" Then
            If Trim(Me.Proceso.Text) <> "" Then
                Exit Sub
            End If
            Dim vtbusquesaCole As New FCC51BusCol
            vtbusquesaCole.VLTipo = "I"
            vtbusquesaCole.Show vbModal
        End If
    'fin cmeg 09Nov2005
        If Trim(Proceso.Text) = "" Then 'DAPV/02092012/CNEL
            'If Trim(Servicio.Text) = "3" Then
            If Trim(Servicio.Text) = "3" Or Trim(Servicio.Text) = "1" Then 'DAPV CNT-MOVIL 09NOV2012
                If Trim(VGEmpGrupo) = "S" Then
                    VLCodReg = "0"
                    PMPasoValores SqlConn&, "@t_trn", 0, SQLINT4, "43291"
                    PMPasoValores SqlConn&, "@i_modo", 0, SQLINT2, 0
                    PMPasoValores SqlConn&, "@i_cod_grupo", 0, SQLINT4, Trim(Empresa.Text)
                    PMPasoValores SqlConn&, "@i_empresa", 0, SQLINT4, 0
                    PMHelpG "cob_pagos", "sp_tr_regionales_grp", 3, 1
                    PMBuscarG 1, "@t_trn", "43291", SQLINT4
                    PMBuscarG 2, "@i_modo", "0", SQLINT2
                    PMBuscarG 3, "@i_cod_grupo", Trim(Empresa.Text), SQLINT4
                    PMSigteG 1, "@i_empresa", 1, SQLINT4
                    If FMTransmitirRPC(VGSqlConn&, ServerName$, "cob_pagos", "sp_tr_regionales_grp", True, " Consulta de la Regional " & "[" & Proceso.Text & "]") Then
                        PMMapeaGridATX VGSqlConn, grid_valores!gr_SQL, False
                        PMChequeaATX VGSqlConn&
                        PMProcesG
                        
                        grid_valores.Show 1
                        
                        If Temporales(1) <> "" Then
                            Proceso.Text = Temporales(1)
                            sal_proc.Caption = Temporales(2)
                            VLPaso% = True
                        Else
                            Proceso.Text = ""
                            sal_proc.Caption = ""
                            Proceso.SetFocus
                        End If
                    End If
                End If
            End If
        End If
        
        If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
            If Trim(Proceso.Text) = "5482" Then
                serpac.Text = ""
                lblCobAlum.Caption = "Nro. Celular:"
                serpac.Visible = False
                sal_serpac.Visible = False
                lblCol(5).Visible = False
                Ref.Top = 650
                Me.lblCobAlum.Top = 650
                Me.Fragua.Height = 1100
                Ref.SetFocus
            Else
                lblCobAlum.Caption = "Telefono:"
                serpac.Visible = True
                sal_serpac.Visible = True
                lblCol(5).Visible = True
                Ref.Top = 820
                Me.lblCobAlum.Top = 870
                Me.Fragua.Height = 1200
                serpac.SetFocus
            End If
        End If
    End Select
End Sub







Private Sub sal_proc_Change()
    Dim a As String
    a = sal_proc.Caption
End Sub



Private Sub serpac_GotFocus()
   FPrincipal!pnlHelpLine.Caption = "Ingrese el Servicio a Recaudar"
End Sub

Private Sub serpac_KeyDown(KeyCode As Integer, Shift As Integer)
   Select Case KeyCode%
      Case CGTeclaSUPR%
         serpac.Text = ""
      Case CGTeclaDOWN%, CGTeclaAVPAG%
         If Me.Servicio = 1 And Empresa = 3 Then    'lfcm 29-julio-2008
            If Me.Proceso.Enabled = True Then
               Me.Proceso.SetFocus
            Else
               Me.Ref.SetFocus
            End If
         Else
            If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
                If Trim(Proceso.Text) = "3" Then
                    Ref.SetFocus
                Else
                    Proceso.SetFocus
                End If
            Else
                If Proceso.Enabled Then
                    Proceso.SetFocus
                End If
            End If
         End If
         
      Case CGTeclaUP%, CGTeclaREPAG%
          If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
            If Trim(Proceso.Text) = "3" Then
               Proceso.SetFocus
            End If
         End If
   End Select
End Sub

Private Sub serpac_LostFocus()
   '-->lfcm 29-julio-2008
   
   If Trim(Servicio.Text) = "1" And VGEmpGrupo = "S" Then Exit Sub 'DAPV CNT-MOVIL 09NOV2012
   
   If Me.serpac.Text <> "ABF" And (Me.serpac.Text = "ANU" Or Me.serpac.Text = "CIC") And Me.serpac.Text <> "" Then
      Me.Proceso.Enabled = False
      Me.lblCobAlum.Caption = "Contrato No.:"
      Me.lblCobAlum.Left = 720
      Proceso.Text = ""
      Me.sal_proc.Caption = ""
      
   Else
      If Me.serpac.Text = "RES" Then
         Me.Proceso.Enabled = True
         Me.Proceso.Text = "99"     'lfcm 18-agosto-2008
         Me.Proceso.Enabled = False 'lfcm 18-agosto-2008
         Ref.SetFocus               'lfcm 18-agosto-2008
         
      
         Me.lblCobAlum.Caption = "Telefono:"
         Me.lblCobAlum.Left = 1095
         'Proceso.SetFocus
      Else
        If Trim(Empresa.Text) <> "5479" Then
         Me.Proceso.Enabled = True
         Me.Proceso.Text = ""
        End If
         'Me.Proceso.Text = "99"     'lfcm 18-agosto-2008
         'Ref.SetFocus               'lfcm 18-agosto-2008
      
         Me.lblCobAlum.Caption = "Telefono:"
         Me.lblCobAlum.Left = 1095
         'Proceso.SetFocus
      End If
      
      'Me.Proceso.Enabled = True
      'Me.lblCobAlum.Caption = "Telefono:"
      'Me.lblCobAlum.Left = 1095
   End If
   '--<lfcm 29-julio-2008
End Sub

Private Sub Servicio_GotFocus()
    FPrincipal!pnlHelpLine.Caption = "Ingrese el Tipo de Recaudacion de Servicios"
End Sub

Private Sub Servicio_KeyDown(KeyCode As Integer, Shift As Integer)
    Select Case KeyCode%
    Case CGTeclaSUPR%
        If Servicio.Enabled Then
            Servicio.Clear
        End If
    Case CGTeclaHOME%
        PMCambiarForma Me
    Case CGTeclaUP%, CGTeclaREPAG%
        KeyCode = 0
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    End Select
End Sub

Private Sub Servicio_LostFocus()
    'Me.Move VGLeft%, VGTop%, 4620, VLAltoForm
    
    Me.Height = VLAltoForm
    If VGTipoEjecucion% = CGNormal% Then
        Proceso.Enabled = True
        If Trim(Servicio.Text) = 2 Then
            Reten.Enabled = True
        End If
    End If
    
    lblValor(3).Visible = False
    lblValor(4).Visible = False
    lblValor(14).Visible = False:  txtfactura.Width = 3500
    If VGTipoEjecucion% <> CGReverso% And Trim(Empresa.Text) = "144" Then
      Pago_Val.Tag = 0   'JPM 11/02/2016
    End If
    lblValor(5).Visible = False
    txtContrato.Visible = False
    txtfactura.Visible = False
    Fecha.Visible = False
    lblCol(0).Caption = "Tipo:"
    lblCobAlum.Caption = "Codigo:"
    Comprob.Enabled = False
    Reten.Enabled = False
    Proceso.Visible = True
    'smerino new tvcable
    If Trim(Servicio) <> "6" Then 'new tvcable
        Empresa.Visible = True 'new tvcable
    End If
    Sal_Emp.Visible = True 'new tvcable
    lblCol(1).Visible = True
    lblCol(4).Visible = True
    lblCol(3).Visible = True
    Nombre_oficina.Visible = True
    Forma_Pago.Visible = True
    lblCol(4).Top = "690"     'JPM TRB IWS antes :600" 'new tvcable
    Forma_Pago.Top = "690"    'JPM TRB IWS antes: 600" 'new tvcable
    lblCol(3).Top = "990"     'JPM TRB IWS antes: 850" 'new tvcable
    Nombre_oficina.Top = 945  'JPM TRB IWS antes: "860" 'new tvcable
    Fragua.Caption = "" 'new tvcable
    Fragua.Top = "1230" 'new tvcable
    Fragua.Height = "855" 'new tvcable
    txtContrato.Visible = False 'new tvcable
    lblValor(8).Visible = False 'new tvcable
    lblValor(8).Caption = "Fecha Emision :" 'new tvcable
    txtfactura.Visible = False 'new tvcable
    lblValor(4).Visible = False 'new tvcable
    lblValor(14).Visible = False:  txtfactura.Width = 3500
    If VGTipoEjecucion% <> CGReverso% And Trim(Empresa.Text) = "144" Then
      Pago_Val.Tag = 0   'JPM 11/02/2016
    End If
    lblValor(4).Caption = "Factura:"  'new tvcable
    lblCol(0).Visible = True 'new tvcable
    lblCol(0).Top = "275" 'new tvcable
    CboTipo.Visible = False 'new tvcable
    Ref.Top = "525" 'new tvcable
    lblCobAlum.Top = "570" 'new tvcable
    CboTipo.TabIndex = "80"
    Empresa.TabIndex = "1"
   'fin smerino
        'lgusnayc ref019
    If Trim(Empresa.Text) = "115" Then
      Me.Proceso.Text = "O"
      lblCol(0).Visible = False
      Proceso.Visible = False
      sal_proc.Visible = False
      lblCobAlum.Left = 700
      bitmap.Left = -225
      lblCobAlum.Caption = "Cédula/Tarjeta:"
    Else
      lblCol(0).Visible = True
      Proceso.Visible = True
      sal_proc.Visible = True
      lblCobAlum.Left = 1100
      bitmap.Left = 120
      lblCobAlum.Caption = "Codigo:"
    End If
        'lgusnayc ref019
        
    Select Case Trim(Servicio.Text)
    Case 1
        'Me.Move VGLeft%, VGTop%, 4620, VLAltoForm + 480
        Me.Height = VLAltoForm + 480
        Empresa.TableName = "sv_emp_telefono"
        Proceso.TableName = "sv_area_telefono"
        serpac.TableName = "sv_servicios_pacifictel" 'DAPV CNT-MOVIL 09NOV12
        lblCol(0).Caption = "Area"
        lblCobAlum.Caption = "Telefono:"
        lblCol(0).Visible = True '<--- DGA 07/Oct/2005
        lblValor(3).Visible = True
        lblValor(4).Visible = True
        txtContrato.Visible = True
        txtfactura.Visible = True
        txtfactura.Top = 5610     'JPM 11/02/2016
        'ref:esma04ago2004
        Select Case Trim(Empresa)
        Case "617"
           lblValor(5).Visible = True
           Fecha.Visible = True
        End Select
        'ref:esma04ago2004
    Case 2
        Empresa.TableName = "sv_empresas_agua"
        Proceso.TableName = "sv_procesos_ecapag"
        lblCol(0).Visible = True '<--- DGA 07/Oct/2005
        '-->hy-31-ene-2005
        If VGTipoEjecucion% <> CGReverso% Then
        '<--hy-31-ene-2005
            Comprob.Enabled = True
            Reten.Enabled = True
        End If
    Case 3
        Empresa.TableName = "sv_energia_elec_meer" 'ref12
        Proceso.TableName = ""    'DAPV/03022012/CNEL
        lblCol(0).Visible = False
        Proceso.Visible = False
        sal_proc.Visible = False
        '-->hy-31-ene-2005
        If VGTipoEjecucion% <> CGReverso% Then
        '<--hy-31-ene-2005
            Comprob.Enabled = True
            Reten.Enabled = True
        End If
    Case 4
        'Me.Move VGLeft%, VGTop%, 4620, VLAltoForm + 350
        Me.Height = VLAltoForm + 350
        'ini comentado x cmeg 09nov2005
        'Empresa.TableName = "re_nom_colegio"
        'Proceso.TableName = "sv_proceso_colegio"
        'fin comentado x cmeg 09nov2005
        'ini cmeg 09Nov2005
        lblCol(0).Visible = True '<--- DGA 07/Oct/2005
        Empresa.TableName = ""
        Proceso.TableName = ""
        Set Empresa.Connection = Nothing
        Set Proceso.Connection = Nothing
        'fin cmeg 09Nov2005
        
        lblValor(5).Visible = True
        Fecha.Visible = True
    Case 5
        Empresa.TableName = "sv_emp_servicios"
        Proceso.TableName = "sv_procesos_servicios"
    '-->hy-19-enero-2007
    Case 6
        Empresa.TableName = "sv_emp_grupotvcable"
        Proceso.TableName = "sv_procesos_servicios"
        'msilvag Inicio
    Case 7 'tv pagada
        Empresa.TableName = "sv_emp_tvpagada"
        Proceso.TableName = "sv_procesos_servicios"
    Case 8  'internet
        Empresa.TableName = "sv_emp_internet"
        'Proceso.TableName = "sv_procesos_servicios"
    'msilvag Fin
    'msilvag Inicio  Naviera y Logistica
    Case 9  'internet
        Empresa.TableName = "sv_emp_naviera"
        Proceso.TableName = "sv_procesos_servicios"
    'msilvag Fin
    End Select
    Select Case Trim(Servicio.Text)
    Case 6
        valor.Visible = True 'cnt movil
        lblValor(0).Visible = True 'cnt movil
        lblCol(0).Visible = False
        Proceso.Visible = False
        Proceso.Text = "F"
        sal_proc.Visible = False
        sal_proc.Caption = "FACTURAS"
        Empresa.Visible = False 'new tvcable
        Sal_Emp.Visible = False 'new tvcable
        lblCol(4).Visible = False
        lblCol(3).Visible = False
        Nombre_oficina.Visible = False
        Forma_Pago.Visible = False
        lblCol(1).Visible = False
'        lblCol(4).Top = "330" 'new tvcable
'        Forma_Pago.Top = "330" 'new tvcable
'        lblCol(3).Top = "600" 'new tvcable
'        Nombre_oficina.Top = "600" 'new tvcable
        Fragua.Caption = "              PAGO A TV PAGADA GUAYAQUIL (SAT" 'new tvcable
        Fragua.Top = "500" 'new tvcable
        Fragua.Height = "1300" 'new tvcable
        txtContrato.Visible = True 'new tvcable
        lblValor(8).Visible = True 'new tvcable
        lblValor(8).Caption = "Empresa:" 'new tvcable
        txtfactura.Visible = True 'new tvcable
        lblValor(4).Visible = True 'new tvcable
        lblValor(4).Caption = "Ciudad:"  'new tvcable
        lblCol(0).Visible = True 'new tvcable
        lblCol(0).Top = "400" 'new tvcable
        CboTipo.Visible = True 'new tvcable
        
        If VGTipoEjecucion% = CGNormal% Then
        Me.CboTipo.Clear
        Me.CboTipo.AddItem "Identificacion"
        Me.CboTipo.AddItem "Contrato"
        Me.CboTipo.ListIndex = 0
        CboTipo.TabIndex = 1
        CboTipo.SetFocus 'new tvcable comenta smerino
        Else
        Me.CboTipo.Enabled = False
        End If
        CboTipo.Top = "400"
        Ref.Top = "850" 'new tvcable
        lblCobAlum.Top = "850" 'new tvcable
        Me.sal_serpac.Visible = False 'new tvcable
     Case Else
        If VGTipoEjecucion% <> CGReverso% Then
            lblCol(0).Visible = True
            Proceso.Visible = True
            Proceso.Text = ""
            sal_proc.Visible = True
            sal_proc.Caption = ""
        End If
    End Select
    '<--hy-19-enero-2007
End Sub

'ref:INIesma03ago2004
Function FLConexionLocal(Tipo As String) As Boolean
Dim VLTramaRespuesta As String
    FLConexionLocal = False
    VLTramaRespuesta = ""

    SLSPCAndinatel.STipSer = VLemp_switch
    SLSPCAndinatel.SCodTrn = VLtrn_switch
    SLSPCAndinatel.ScodTer = VLCodCaj
    SLSPCAndinatel.SUsuario = VGLogin$
    SLSPCAndinatel.SOficina = str(VGOficina%)
    
    SLSPCAndinatel.SFecTrn = LTrim(RTrim(Mid(VLHoraProceso, 7, 4) + Mid(VLHoraProceso, 1, 2) + _
                        Mid(VLHoraProceso, 4, 2) + Mid(VLHoraProceso, 11, 2) + _
                        Mid(VLHoraProceso, 14, 2) + Mid(VLHoraProceso, 17, 2)))
    
    If VGTipoEjecucion% <> CGReverso% Then
        SLSPCAndinatel.STipTrn = "0"              'Original
        SLSPCAndinatel.STipoOperacion = "N"
        SLSPCAndinatel.SsecTer = Mid(Trim(str(SGSecTrn)), (Len(SGSecTrn) - 6) + 1, 6)               'obtiene de sybase
        SLSPCAndinatel.SsecTerRev = VLSecTrnCorr
        SLSPCAndinatel.Ssecuencia = SGSecTrn$
    Else
        SLSPCAndinatel.STipTrn = "7"               'Reverso
        SLSPCAndinatel.SsecTer = Mid(Trim(str(SGSecTrn)), (Len(SGSecTrn) - 6) + 1, 6)
        SLSPCAndinatel.SsecTerRev = VLSecTrnCorr
        SLSPCAndinatel.Ssecuencia = VLSecTrnCorr 'SGSecTrn$
        SLSPCAndinatel.STipoOperacion = "R"
    End If
    
    'Genera Trama y Envia Trama
    VLTramaRespuesta = FLTramaRespuesta(Tipo)
    If FLVerificaTramaRespuesta(VLTramaRespuesta) = False Then
        'ERROR DE COMUNICACION RESPONDE CON ERROR
        FLConexionLocal = False
    Else
        'COMUNICACION OK
        FLConexionLocal = True
    End If
End Function

Function FLTramaRespuesta(Tipo As String) As String
    Dim VLCodError As Integer
    Dim VLreferencia As String
    Dim VLMonto As Currency
    Dim VL_TramaPagoAndi As String
    Dim VL_estado As String
    'Dim VL_Trama_Respuesta  As String * 2000
    Dim VL_Trama_Respuesta  As String * 2053

    
    FLTramaRespuesta = ""
    
    VLreferencia = Trim(Proceso) + (Trim(Ref))
    VLMonto = FMCCurATX(efe.Text) + FMCCurATX(Debito.Text) + FMCCurATX(Loc.Text) - FMCCurATX(Comision.Text)  '/*JPM 08122204 restar comision*/
    
    SFormaPago.FPEfectivo = CCur(efe.Text)
    SFormaPago.FPChqLocal = CCur(Loc.Text)  'Local
    SFormaPago.FPTipCtaDebito = (CboTipCta.Text)
    SFormaPago.FPCtaDebito = (Cta.ClipText)
    SFormaPago.FPDebito = CCur(Debito.Text)
    If Tipo <> "C" Then
        Tipo = "P"
    End If
    
    VL_TramaPagoAndi$ = FMGenerarTramaNormal("51", Tipo, SLSPCAndinatel, SFormaPago, VLreferencia, Trim(CStr(Comprobante)), VLFechaProceso, VLHoraProceso, CCur(VLMonto))
    VGTramaAndinatel = VL_TramaPagoAndi$
    'Debug.Print VGTramaAndinatel
    'CONEXION DLL
    VL_Trama_Respuesta = FLConexionUpLoadG(VL_TramaPagoAndi, VGDatosConexionPV)
    FLTramaRespuesta = VL_Trama_Respuesta
        
End Function

Function FLInactiva(Tipo As Boolean)
    'If Tipo Then
    '    FSumIng.Hide
    '    Unload FSumIng
    'End If
    FCC51.Enabled = Tipo
    FCC51.Refresh
    efe.Enabled = Tipo
    Cta.Enabled = Tipo
    CboTipCta.Enabled = Tipo
    Debito.Enabled = Tipo
    CantChq.Enabled = Tipo
    Loc.Enabled = Tipo
    valor.Enabled = Tipo
End Function

Function FLVerificaTramaRespuesta(Trama As String) As Boolean
    Dim VLtramaCredimatic, VLTrama As String
    Dim VLposicion As Integer
    Dim VLlongCampo  As Integer
' GENERALIZADA POR FMV
'    Dim VLTipServicio, VLTipTrn, VLCodTrn, VLCodTerm, VLSecTer, VLCodResp  As String
    Dim VLTipServicio, VLTipTrn, VLCodTrn, VLCodTerm, VLSecTer As String
    Dim VLCodPro, VLSecCon, VLMesPro, VLCodActualizacion, VLResponseCode As String
    On Error GoTo TpError
    
    VLTrama$ = Trama
    
    FLVerificaTramaRespuesta = False
    VLMensajeVerificados$ = Mid(VLTrama$, 1, 4)
    
    If VLMensajeVerificados$ <> "0000" Then
        VLDescripcion = (RTrim(LTrim(Trama)))
        VLCodResp = VLMensajeVerificados$
        PMMsgError "ERROR EN PROCESO, IDENTIFICADO COMO " & (RTrim(LTrim(Trama))), "", CGErrorInformativo
        Exit Function
    End If
    VLtramaCredimatic = Mid(VLTrama$, 5, Len(VLTrama$))
    Me.txt_trama = Trama 'DGA 26AGO2006
    
    VLposicion% = 1
    VLlongCampo% = 3
    VLTipServicio = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
    
    VLposicion% = VLposicion% + VLlongCampo%
    VLlongCampo% = 1
    VLTipTrn = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
    
    VLposicion% = VLposicion% + VLlongCampo%
    VLlongCampo% = 4
    VLCodTrn = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
    
    VLposicion% = VLposicion% + VLlongCampo%
    VLlongCampo% = 8
    VLCodTerm = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
    
    VLposicion% = VLposicion% + VLlongCampo%
    VLlongCampo% = 6
    VLSecTer = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
    
    VLposicion% = VLposicion% + VLlongCampo%
    VLlongCampo% = 6
    VLCodResp = Mid(VLtramaCredimatic, VLposicion% + 2, VLlongCampo% - 2)
    mensaje = ""
    mensaje = VLCodResp
    Call VLCatalogo_Errores(mensaje, lblmensaje)
    
    If VLCodResp <> "0000" Or VLCodResp = "" Then
        FLVerificaTramaRespuesta = False
        If Trim(lblmensaje) = "" Then
            MsgBox "Transaccion No ha sido realizada intente nuevamente", vbCritical, "Mensaje de Comunicacion"
        Else
            If VLCodResp = "0020" Then
                MsgBox "NO REGISTRA VALORES PENDIENTES DE PAGO", vbInformation, "Mensaje de Comunicacion"
            Else
                MsgBox "ERROR ANDINATEL : " + (lblmensaje.Caption), vbCritical, "Mensaje de Comunicacion"
            End If
        End If
        Exit Function
    End If
    
    If vlOpcion = "C" Then
        'Datos adicionales
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 10
        VLNumTelefono = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 30
        VLNombreCliente = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        Nombre = VLNombreCliente
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 12
        vlval$ = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        VLValfactura = FLdato(vlval$, 10, 2)
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 8
        VLFec = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)                      'aaaammdd
        VLFecEmi = Mid(VLFec, 5, 2) + "/" + Mid(VLFec, 7, 2) + "/" + Mid(VLFec, 1, 4)  'mmddaaaa
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 2
        VLFactImpagas = CInt(Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%))  'validar
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 2
        VLcategoria = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 10
        VLNumFactura = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        txtfactura = VLNumFactura
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 20
        VLCedFactura = Trim(Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%))
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 12
        vlval = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        VLSubtotal = FLdato(vlval, 10, 2)         'En la Consulta
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 12
        vlval = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        VLRetencion = FLdato(vlval, 10, 2)
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 12
        vlval = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        VLBaseImponible = FLdato(vlval, 10, 2)
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 4
        VLCicloFact = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 8
        VLFec = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)                      'aaaammdd
        VLFecVen = Mid(VLFec, 5, 2) + "/" + Mid(VLFec, 7, 2) + "/" + Mid(VLFec, 1, 4)   'mmddaaaa
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 2
        VLNumRubros = CInt(Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%))
        
        valor.Text = CCur(VLValfactura)
        Minimo.Text = CCur(VLValfactura)
        
        If VLNumRubros > 1 Then
            VLposicion% = VLposicion% + VLlongCampo%
            VLlongCampo% = 216   '12 rubros
            VLDetRubros1 = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        End If
        
        If VLNumRubros > 12 Then
            VLposicion% = VLposicion% + VLlongCampo%
            VLlongCampo% = 216   '12 rubros
            VLDetRubros2 = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        End If
        
        If VLNumRubros > 24 Then
            VLposicion% = VLposicion% + VLlongCampo%
            VLlongCampo% = 126   '7 rubros
            VLDetRubros3 = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        End If
    'End If  hy-09-marzo-2007
''''''''''''''CAPTURA AUTORIZACION SRI (DGA) 26AGO2005
    VLEmpaut = Mid(Me.txt_trama, Len(txt_trama) - 29, 15)
    VLEmpaut_Andinatel = Mid(Trim$(Me.txt_trama), Len(Trim$(txt_trama)) - 24, 10)
    'Debug.Print "Autorizacion SRI No. " + VLEmpaut    hy-09-marzo-2007 comentario
    VLEmpval = Right(Me.txt_trama, 15)
    'VLEmpval_Andinatel = Right(Trim$(Me.txt_trama), 15)
    VLAutSRI = Format(Mid(Me.txt_trama, 735, 15), "###############")               'lfcm 01-noviembre-2007
    VLEmpval_Andinatel = Mid(Me.txt_trama, 750, 15)     'lfcm 01-noviembre-2007
    VLFactura = Mid(Me.txt_trama, 765, 15)              'lfcm 01-noviembre-2007
    VLCtaCobro = CLng(Mid(Me.txt_trama, 99, 8))         'lfcm 01-noviembre-2007
    VLSubIndice = CInt(Mid(Me.txt_trama, 97, 3))        'lfcm 01-noviembre-2007

    
    'Debug.Print "Valido hasta " + VLEmpval   hy-09-marzo-2007 comentario
''''''''''''''FIN CAPTURA AUTORIZACION SRI

    End If  'hy-09-marzo-2007
    
    FLVerificaTramaRespuesta = True
    Exit Function
    
TpError:
        If VLCodResp <> "0000" Or VLCodResp = "" Then
            FLVerificaTramaRespuesta = False
            If Trim(lblmensaje) = "" Then
                MsgBox "Transaccion No ha sido realizada intente nuevamente", vbCritical, "Mensaje de Comunicacion"
            Else
                MsgBox "ERROR ENVIADO POR ANDINATEL IDENTIFICADO : " + (lblmensaje.Caption), vbCritical, "Mensaje de Comunicacion"
            End If
            Exit Function
        Else
            MsgBox "PROBLEMAS DE COMUNICACION", vbExclamation, "Mensaje de Comunicacion"
        End If
'    End If
End Function

Function FLdato(varval As String, inicio As Integer, fin As Integer) As Currency
    FLdato = 0
    If IsNumeric(varval) = False Then
        Exit Function
    End If
    
    VLsvalor = Mid(varval, 1, inicio) + "." + Mid(varval, inicio + 1, fin)
    FLdato = CCur(VLsvalor)
End Function

Function FLRevForzado(tSSnCorr As String) As Integer
    Dim VTIndicadorSum As Integer
    
    VLTipoEjecucion% = VGTipoEjecucion%
    VGTipoEjecucion% = CGReverso
    
    VTIndicadorSum = 0
    
    SalvaTsn% = VGTSN%
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
'    SGSecTrn$ = "27365635"
    VGSSNCorr& = tSSnCorr
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, VLTrn, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, (Loc.Text), "Cheque", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "CompRet", "" 'RCA 09/08/20001
    PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, (Reten.Text), "Retencion", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""  'ame 27.may.03
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", "" 'TPE Solo se incluye para el Reverso.
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Nombre, "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, (valor.Text), "Valor", ""
    PMPasoValoresATX VGSqlConn, "@i_reversauto", 0, SQLVARCHAR, "REVERSO AUTO ERROR CONEXION", "Reverso Automatico", ""
    PMPasoValoresATX VGSqlConn, "@i_motivo_reversa", 0, SQLVARCHAR, "", "Motivo de Reverso Automatico", ""
    PMPasoValoresATX VGSqlConn, "@i_val_ret", 0, SQLMONEY, (VLRetencion), "Valor Retenido", ""
    PMPasoValoresATX VGSqlConn, "@i_val_imp", 0, SQLMONEY, (VLBaseImponible), "Valor base imponible", ""
    PMPasoValoresATX VGSqlConn, "@i_version", 0, SQLINT4, 1, "Version Proceso", ""  'ref:esma04ago2004
    PMPasoValoresATX VGSqlConn, "@o_empresa_switch", 1, SQLVARCHAR, (VLempresa_switch), "Empresa switch", ""
    PMPasoValoresATX VGSqlConn, "@o_cod_trn_switch", 1, SQLVARCHAR, (VLtrn_switch), "Cod Trn switch", ""
    PMPasoValoresATX VGSqlConn, "@o_hora_pro", 1, SQLVARCHAR, (VLHoraProceso), "Fecha Hora", ""
    PMPasoValoresATX VGSqlConn, "@o_fecha_ef", 1, SQLVARCHAR, (VLFechaProceso), "Fecha Pago", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "T", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_fecha_fac", 0, SQLVARCHAR, (VLFecEmi), "Fecha_Factura", ""
    'PMPasoValoresATX VGSqlConn, "@i_fecha_emi", 0, SQLDATETIME, (VLFecEmi), "Fecha Emision Factura", ""
    PMPasoValoresATX VGSqlConn, "@i_fac_imp", 0, SQLINT4, (VLFactImpagas), "Nro Facturas Impagas", ""
    PMPasoValoresATX VGSqlConn, "@i_cedula", 0, SQLVARCHAR, (VLCedFactura), "CedRuc cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_categoria", 0, SQLVARCHAR, (VLcategoria), "Categoria de abonado", ""
    PMPasoValoresATX VGSqlConn, "@i_sub_total", 0, SQLMONEY, (VLSubtotal), "Subtotal de Factura", ""
    PMPasoValoresATX VGSqlConn, "@i_ciclo_fac", 0, SQLVARCHAR, (VLCicloFact), "Ciclo de Factura", ""
    PMPasoValoresATX VGSqlConn, "@i_fec_ven", 0, SQLVARCHAR, (VLFecVen), "Fecha Vence Factura", ""
    PMPasoValoresATX VGSqlConn, "@i_area", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
    PMPasoValoresATX VGSqlConn, "@i_telefono", 0, SQLVARCHAR, (Trim(Ref)), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_num_factura", 0, SQLVARCHAR, txtfactura.Text, "Factura", ""
    PMPasoValoresATX VGSqlConn, "@i_contrato_telefono", 0, SQLVARCHAR, txtContrato.Text, "Contrato", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
    PMPasoValoresATX VGSqlConn, "@i_valor", 0, SQLMONEY, (efe.Text), "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_producto", 0, SQLCHAR, (CboTipCta.Text), "CboTipCta", ""
    PMPasoValoresATX VGSqlConn, "@o_mensaje", 1, SQLVARCHAR, "", "Mensaje", ""
    PMPasoValoresATX VGSqlConn, "@o_num_factura", 1, SQLVARCHAR, txtfactura.Text, "Mensaje", ""
    PMPasoValoresATX VGSqlConn, "@o_contrato_telefono", 1, SQLVARCHAR, txtContrato.Text, "Mensaje", ""
    PMPasoValoresATX VGSqlConn, "@i_num_rubros", 0, SQLINT4, (VLNumRubros), "Nro Rubros", ""
    If Trim(Servicio) = "1" And Trim(Empresa) = "3" Then
        PMPasoValoresATX VGSqlConn, "@o_fecha_atx", 1, SQLVARCHAR, "**********", "Fecha Pago2", ""
    Else
        PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
    End If
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, (VTIndicadorSum), "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn_corr", 1, SQLINT4, "0", "SecTrnRev", ""
    PMPasoValoresATX VGSqlConn, "@o_comprobante", 1, SQLINT4, "0", "Comprobante", ""
    
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", VLProcedure, True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
    
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        FLRevForzado = True
        VLCambio% = False
        'Comprobante = FMRetParamATX(VGSqlConn, 2)
        VLemp_switch = Trim(FMRetParamATX(VGSqlConn, 3))
        VLtrn_switch = Trim(FMRetParamATX(VGSqlConn, 4))
        VLHoraProceso = Trim(FMRetParamATX(VGSqlConn, 5))
        VLFechaProceso = Trim(FMRetParamATX(VGSqlConn, 6))
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 11)
        VLHorario = FMRetParamATX(VGSqlConn, 13)
        VLSecTrnCorr = VGSSNCorr&
        If VLMensajeVerificados$ <> "0000" Then
            If FLConexionLocal(vlOpcion) = False Then
                MsgBox "ERROR AL GENERAR REVERSO EN ANDINATEL"
            End If
        End If
    Else
        PMFinTransaccion
        VLCambio% = True
        FLRevForzado = False
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLRevForzado = False
    End If
    PMFinTransaccion
    
    VLTipoEjecucion% = VGTipoEjecucion%
    VGTipoEjecucion% = CGNormal
End Function

Function VLCatalogo_Errores(txtobj As Control, lblobj As Control)
    PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_errores_andinatel"
    PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
    PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, txtobj.Text
    If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, " Consulta de Error generado en Andinatel  " & "[" & txtobj.Text & "]") Then
        PMMapeaVariableATX VGSqlConn&, VTDetalles$
        PMChequea VGSqlConn&
        lblobj.Caption = VTDetalles$
    Else
        txtobj.Text = ""
        lblobj.Caption = ""
    End If
End Function

Public Function FLImpFactura()
    Dim AuxOrd As String
    Dim AuxId As String
    Dim AuxTel As String
    Dim AuxCta As String
    Dim AuxOfOrd As String
    Dim AuxClave As String
    Dim VLTipo As String
    Dim OfOrdenante As String
    Dim AuxIP As String
    Dim AuxFa2 As String
    Dim auxEmpAndinatel As String  'gmartillo 10/20/2008
   
    On Error GoTo ManejoErrores:
    'VTNumCopiasComp$ = 2
    VTNumCopiasComp$ = 1

    AuxIP = CStr(VGTSN%)
    auxEmpAndinatel = "CORPORACION NACIONAL DE TELECOMUNICACIONES S.A. (CNT)" 'gmartillo 10/20/2008
    'AuxEmp = Sal_Emp + " S.A" gmartillo 10/20/2008
    AuxEmp = Sal_Emp
    AuxDir = Trim(VLEmpDir)
    AuxUbi = "Quito - Ecuador"
    AuxRuc = "Ruc.:  " + Trim(VLEmpruc)
    '-->hy-09-marzo-2007 regularizar autorizacion/fecha sri
    '-->hy-11-julio-2006
    'ATENCION ATENCION ATENCION ATENCION ATENCION ATENCION ATENCION ATENCION
    'ATENCION ATENCION ATENCION ATENCION ATENCION ATENCION ATENCION ATENCION
    'REGULARIZAR POSTERIORMENTE CON LOS DATOS REALES DE LA TRAMA
    'AuxAut = "Aut. SRI:  No. " + Trim(VLEmpaut_Andinatel) + "  valido hasta :  " + Trim(VLEmpval_Andinatel)
    AuxAut = "Aut. SRI:  No. " + VLAutSRI + "  valido hasta :  " + Trim(VLEmpval_Andinatel)      'lfcm 01-noviembre-2007
    'AuxAut = "Aut. SRI:  No. " + Trim("1103530659") + "  valido hasta :  " + Trim("Febrero/2007")
    '-->hy-11-julio-2006
    '<--hy-09-marzo-2007
    AuxCon = "Contribuyente especial:   Resolucion No. " + Trim(VLEmpRes)
    'AuxFa2 = Trim(Str(Val(Mid(Trim(txtfactura), 1, 3))))
    'AuxFa2 = "            " + Space(13 - Len(AuxFa2)) + AuxFa2
    If VLCtaCobro <= 70000000 Then                                  'lfcm 01-noviembre-2007
        AuxFa2 = " " + Space(25 - Len(VLSubIndice)) + CStr(VLSubIndice)          'lfcm 01-noviembre-2007
    Else                                                            'lfcm 01-noviembre-2007
        AuxFa2 = ""                                                 'lfcm 01-noviembre-2007
    End If                                                          'lfcm 01-noviembre-2007
    
    'AuxFac = "Factura:   001-002-" + Mid(Trim(txtFactura), 4, Len(Trim(txtFactura)) - 3)        'lfcm 09-octubre-2007
    'AuxFac = "Factura:  " + VLSecParteFija + "-" + Mid(Trim(txtFactura), 4, Len(Trim(txtFactura)) - 3)    'lfcm 09-octubre-2007
    'AuxFac = "Factura:  " + VLFactura    'lfcm 09-octubre-2007
    
    'Cambio de Leyenda en la Impresion de la factura solicitado por Andinatel
    'If Me.txtfactura.Text <= (75544395) Then     'Este valor de 75544395 debe ser tomado de un Catálogo.
    '   AuxFac = "Factura:  " + VLFactura
    'Else
    '   AuxFact = "RECIBO DE PAGO"
    '   AuxFac = "REFERENCIA FACTURA N°:  " + VLFactura
    'End If
    
    
    
    AuxEmi = "Fecha de Emision:     " + Trim(VLFecEmi)
    AuxFecVen = "Fecha de Vencimiento: " + Trim(VLFecVen)
    AuxNom = "Nombre Abonado:  " + Mid(Trim(Nombre), 1, 40)
    AuxRucCli = "RUC/C.I.:   " + Mid(Trim(VLCedFactura), 1, 13)
    AuxTelf = "Numero de Telefono:  " + Trim(Proceso) + Trim(Ref)

    For i = 1 To val(VTNumCopiasComp$)
        If i = 1 Then
            VLTipo = "ORIGINAL CLIENTE"
            AuxClave = "CLAVE: " + VLClave
        Else
            VLTipo = "COPIA"
            AuxClave = ""
        End If
        FLImpFactura = True
    
        If VGModeloImp$ = "5021" Or VGModeloImp$ = "590" Then
            VGpartop$ = "10"
            VGparleft$ = "1"        '15
            VGparlong$ = "90"
            VGparrig$ = "00"
        End If
        
        If i = 2 Then
            'Tiempo para imprimir copia
            FMPRNDelayPrint1 (20000)
            'FMPRNDelayPrint1 (20000)
        End If
    
        PMSetDetalle "v" + Space(40) + IIf(FmObtenermodo() = "", "", FmObtenermodo()) + Space(1) + " " + Trim(VLTrn) + " " + FMObtenerTitulo("51")
             
        PMSetDetalle "v" + Space(40) + IIf(VGFechaProceso = "", Format(Date, VGFormatoFecha$) + Space(1), Format(VGFechaProceso, VGFormatoFecha$) + Space(1)) + Format(Now, VGFormatoHora$) + Space(1) + IIf(VGLogin$ = "", "", VGLogin$)
              
        PMSetDetalle "v" + Space(40) + IIf(SGSecTrn = "" Or SGSecTrn = "0", "", "SEC.: " & Trim(Format(VGFechaProceso, "yyyymmdd") & SGSecTrn)) + Space(1) + "Ip : " + AuxIP
    
        PMSetDetalle "v" + " "
        PMSetDetalle "v" + " "
        PMSetDetalle "v" + " "
        'gmartillo 09/11/2008 modificar recibo de cliente
'        If CLng(Me.txtfactura.Text) <= CLng(VLCtaCobroTope) Then     'Este valor de 75544395 debe ser tomado de un Catálogo.
'            PMSetDetalle "v" + AuxEmp
'            PMSetDetalle "v" + AuxDir
'            PMSetDetalle "v" + AuxUbi
'            PMSetDetalle "v" + AuxRuc
'            PMSetDetalle "v" + AuxAut
'            PMSetDetalle "v" + AuxCon
'            PMSetDetalle "v" + "     "
'            PMSetDetalle "v" + AuxFa2
'           AuxFac = "Factura:  " + VLFactura
'           PMSetDetalle "v" + AuxFac
'        Else
            PMSetDetalle "v" + auxEmpAndinatel 'gmartillo 10/20/2008
            
            PMSetDetalle "v" + AuxEmp
            
            PMSetDetalle "v" + AuxUbi
            PMSetDetalle "v" + "     "
            PMSetDetalle "v" + AuxFa2
            AuxFact = "RECIBO DE PAGO"
            AuxFac = "REFERENCIA FACTURA No.:  " + VLFactura
            PMSetDetalle "v" + AuxFact
            PMSetDetalle "v" + AuxFac
'        End If
        
        'gmartillo 09/11/2008 modificar recibo de cliente
        PMSetDetalle "v" + AuxEmi
        PMSetDetalle "v" + AuxFecVen
        PMSetDetalle "v" + AuxNom
        PMSetDetalle "v" + AuxRucCli
        PMSetDetalle "v" + AuxTelf
        PMSetDetalle "v" + "     "
    
        If Len(Trim(VLrubro1)) > 0 Then PMSetDetalle "v" + VLrubro1
        If Len(Trim(VLrubro2)) > 0 Then PMSetDetalle "v" + VLrubro2
        If Len(Trim(VLrubro3)) > 0 Then PMSetDetalle "v" + VLrubro3
        If Len(Trim(VLrubro5)) > 0 Then PMSetDetalle "v" + VLrubro5
        If Len(Trim(VLrubro6)) > 0 Then PMSetDetalle "v" + VLrubro6
        If Len(Trim(VLrubro7)) > 0 Then PMSetDetalle "v" + VLrubro7
        If Len(Trim(VLrubro27)) > 0 Then PMSetDetalle "v" + VLrubro27
        
        If VLValRubro9994 <> "" Then   'lfcm 14-noviembre-2007
           If Len(Trim(VLrubro9991)) > 0 Then PMSetDetalle "v" + VLrubro9991    'lfcm 12-noviembre-2007
        End If                       'lfcm 14-noviembre-2007
        
        PMSetDetalle "v" + "Subtotales:" & Space(35 - Len("Subtotales:")) & FMEspaciosATX(FMObtenerSimbolo("51") & Format(VLSubtotal, VGFormatoMoney), 20, CGJustificacionDerecha)
        If Len(Trim(VLrubro500)) > 0 Then PMSetDetalle "v" + VLrubro500
        If Len(Trim(VLrubro501)) > 0 Then PMSetDetalle "v" + VLrubro501
        If Len(Trim(VLrubro9992)) > 0 Then PMSetDetalle "v" + VLrubro9992
        If Len(Trim(VLrubro9993)) > 0 Then PMSetDetalle "v" + VLrubro9993
        'If Len(Trim(VLrubro9991)) > 0 Then PMSetDetalle "v" + VLrubro9991  'lfcm 12-noviembre-2007
        If Len(Trim(VLrubro9995)) > 0 Then PMSetDetalle "v" + VLrubro9995
    
        PMSetDetalle "v" + "     "
        PMSetDetalle "v" + "Total a Pagar:" & Space(35 - Len("Total a Pagar:")) & FMEspaciosATX(FMObtenerSimbolo("51") & Format(valor.Text, VGFormatoMoney), 20, CGJustificacionDerecha)
        PMSetDetalle "v" + " "
        PMSetDetalle "v" + VLTipo
        PMSetDetalle "v" + " "
        'PMSetDetalle "v" + "Sr. Cliente conserve esta factura de Pago"
        
        'gmartillo 09/12/2008 modificar recibo de pago del cliente
'        If CLng(Me.txtfactura.Text) > CLng(VLCtaCobroTope) Then     'Este valor de 75544395 debe ser tomado de un Catálogo.
           PMSetDetalle "v" + "    "
           PMSetDetalle "v" + "ESTE DOCUMENTO NO ES UNA FACTURA"
'        Else
'           PMSetDetalle "v" + "Sr. Cliente conserve esta factura de Pago"
'        End If
        
        
        '-->lfcm 13-marzo-2008
        '-->Se comenta estas lineas para no imprimir la Leyenda
           '-->lfcm 14-enero-2008
           'Imprimir solo si viene como Rubro ICE
           'If VLrubro9992 <> "" Then
           '   PMSetDetalle "v" + "     "
           '   PMSetDetalle "v" + "* POR CONSUMOS DICIEMBRE 2007"
           'End If
           '--<lfcm 14-enero-2008
        '--<lfcm 13-marzo-2008
        '--<Se comenta estas lineas para no imprimir la Leyenda
        
        FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte Factura " + VLTipo, CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False
    Next i

    Exit Function

ManejoErrores:
    MsgBox "Ha ocurrido un error inesperado #: " + CStr(Err) + ", detallado como: " + Error$(Err), 16, "Error al Cargar Reporte"
    Screen.MousePointer = 0
    FLImpFactura = False
End Function

Public Function DatoSwitch(tParametro) As String
    DatoSwitch = ""
    For i% = 1 To FReverso!grdValores(1).Rows - 1
        FReverso!grdValores(1).Row = i%
        FReverso!grdValores(1).Col = 6
        If FReverso!grdValores(1).Text = tParametro Then
            FReverso!grdValores(1).Row = i%
            FReverso!grdValores(1).Col = 2
            DatoSwitch = FReverso!grdValores(1).Text
            Exit For
        End If
    Next i%
End Function

Private Sub Total_Pagar_GotFocus()
    SendKeys ("{HOME}+{END}")
End Sub


Private Sub Total_Pagar_KeyDown(KeyCode As Integer, Shift As Integer)
    If KeyCode = 46 Then
        Me.Total_Pagar.Text = "0.00"
    ElseIf KeyCode = 13 Then
        SendKeys "{TAB}"
    End If
End Sub
Private Sub txt_CodServ_KeyDown(KeyCode As Integer, Shift As Integer)
 Select Case KeyCode%
    Case CGTeclaSUPR%
        Ref.Text = ""
    Case CGTeclaDOWN%, CGTeclaAVPAG%
        If efe.Enabled Then
            efe.SetFocus
        End If
    Case CGTeclaF5%
        If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
            Consulta_parametro_OSB
            FLConsultaCNT_MIG
        End If
    End Select
End Sub

Private Sub TxtCedula_GotFocus()
'/*JPM 08122004*/
  FPrincipal!pnlHelpLine.Caption = "Ingrese " + IIf(cmbTid.ListIndex = 0, "Identificación", cmbTid.Text)
End Sub

Private Sub TxtCedula_KeyDown(KeyCode As Integer, Shift As Integer)
'hy-31-ene-2005
    Select Case KeyCode%
    Case CGTeclaSUPR%
        txtCedula.Text = ""
    Case CGTeclaHOME%
        PMCambiarForma Me
    Case CGTeclaUP%, CGTeclaREPAG%
        SendKeys "+{TAB}"
    Case CGTeclaENTER%, CGTeclaDOWN%, CGTeclaAVPAG%
        SendKeys "{TAB}"
    End Select
End Sub

Private Sub Txtcedula_KeyPress(KeyAscii As Integer)
'hy-31-ene-2005
    Select Case cmbTid.ListIndex
    Case 0, 1   'Cedula y ruc
        If ((KeyAscii% < 48) Or (KeyAscii% > 57)) And (KeyAscii%) <> 8 Then
            KeyAscii% = 0
        End If
    Case 2      'Pasaporte
        If ((KeyAscii% < 48) Or (KeyAscii% > 57)) And (KeyAscii%) <> 8 And ((KeyAscii% < 65) Or (KeyAscii% > 90)) Then
            KeyAscii% = 0
        End If
    End Select
End Sub

Private Sub Txtcedula_LostFocus()
'/*JPM 08122004*/
Dim VLTipoID As String
On Error GoTo Msg_error

    If Not txtCedula.Enabled Then Exit Sub
    VLIdEsValida = False
    VLTipoID = Mid(Trim$(cmbTid.Text), 1, 1)
    
    If VLTipoID = "P" Or VLTipoID = "K" Then
       VLIdEsValida = True
       Exit Sub
    End If

    If Len(Trim$(txtCedula.Text)) = 0 Then
       Exit Sub
    End If
    
    If VLTipoID = "C" And Len(Trim$(txtCedula.Text)) <> 10 Then
       MsgBox "Longitud de No. de Cédula Incorrecto"
       txtCedula.SetFocus
       Exit Sub
    End If
    
    If VLTipoID = "R" And Len(Trim$(txtCedula.Text)) <> 13 Then
       MsgBox "Longitud de No. de Ruc Incorrecto"
       txtCedula.SetFocus
       Exit Sub
    End If
       
    '/*JPM 16122004 ---> admitir solo numeros*/
    If Not IsNumeric(txtCedula.Text) Then
       MsgBox "Identificación debe ser numérico"
       txtCedula.SetFocus
       Exit Sub
    End If
    '/*JPM 16122004 <--- fin admitir numeros*/
    
     If FMValidaCedulaRuc(txtCedula.Text) = False Then
        txtCedula.SetFocus
        Exit Sub
     End If
     VLIdEsValida = True
  Exit Sub
Msg_error:
    MsgBox Error & " <" & Trim$(str(Err)) & ">", 16, "Precaución:"
End Sub

'hy-31-ene-2005
'Procedimiento particular para pacifictel
Function FLConexionLocalPAC(Tipo As String) As Boolean
Dim VLTramaRespuesta As String
    FLConexionLocalPAC = False
    VLTramaRespuesta = ""

    SLSPCAndinatel.STipSer = VLemp_switch
    SLSPCAndinatel.SCodTrn = VLtrn_switch
    SLSPCAndinatel.ScodTer = VLCodCaj
    SLSPCAndinatel.SUsuario = VGLogin$
    SLSPCAndinatel.SOficina = str(VGOficina%)
    
    SLSPCAndinatel.SFecTrn = LTrim(RTrim(Mid(VLHoraProceso, 7, 4) + Mid(VLHoraProceso, 1, 2) + _
                        Mid(VLHoraProceso, 4, 2) + Mid(VLHoraProceso, 11, 2) + _
                        Mid(VLHoraProceso, 14, 2) + Mid(VLHoraProceso, 17, 2)))
    
    If VGTipoEjecucion% <> CGReverso% Then
        SLSPCAndinatel.STipTrn = "0"              'Original
        SLSPCAndinatel.STipoOperacion = "N"
        SLSPCAndinatel.SsecTer = Mid(Trim(str(SGSecTrn)), (Len(SGSecTrn) - 6) + 1, 6)               'obtiene de sybase
        SLSPCAndinatel.SsecTerRev = VLSecTrnCorr
        SLSPCAndinatel.Ssecuencia = SGSecTrn$
    Else
        SLSPCAndinatel.STipTrn = "7"               'Reverso
        SLSPCAndinatel.SsecTer = Mid(Trim(str(SGSecTrn)), (Len(SGSecTrn) - 6) + 1, 6)
        SLSPCAndinatel.SsecTerRev = VLSecTrnCorr
        SLSPCAndinatel.Ssecuencia = SGSecTrn$
        SLSPCAndinatel.STipoOperacion = "R"
    End If
    
    'Genera Trama y Envia Trama
    VLTramaRespuesta = FLTramaRespuestaPAC(Tipo)
    If FLVerificaTramaRespuestaPAC(VLTramaRespuesta) = False Then
        'ERROR DE COMUNICACION RESPONDE CON ERROR
        FLConexionLocalPAC = False
    Else
        'COMUNICACION OK
        FLConexionLocalPAC = True
    End If
End Function

'hy-31-ene-2005
'Procedimiento particular para pacifictel
Function FLTramaRespuestaPAC(Tipo As String) As String
    Dim VLCodError As Integer
    Dim VLreferencia As String
    Dim VLMonto As Currency
    Dim VL_TramaPagoAndi As String
    Dim VL_estado As String
    Dim VL_Trama_Respuesta  As String * 2000
    
    FLTramaRespuestaPAC = ""
    
    If Trim(Proceso.Text) = "99" Then   'WMH
        vtref$ = (Trim(Ref))
        If Len(vtref$) < 7 Then
            vtref$ = Mid("0000000", 1, 7 - Len(vtref$)) + vtref$
            VLreferencia = Trim(Proceso) + vtref$
        End If
        VLContrato = "0000000000000"
    Else
        VLreferencia = Trim(Proceso) + (Trim(Ref))
        VLContrato = txtContrato.Text
    End If
    
    If Tipo = "C" Then
        VLMonto = FMCCurATX("0.00")
    Else
        VLMonto = FMCCurATX(efe.Text) + FMCCurATX(Debito.Text) + FMCCurATX(Loc.Text) - FMCCurATX(Comision.Text)
    End If
    
    SFormaPago.FPEfectivo = CCur(efe.Text)
    SFormaPago.FPChqLocal = CCur(Loc.Text)  'Local
    SFormaPago.FPTipCtaDebito = (CboTipCta.Text)
    SFormaPago.FPCtaDebito = (Cta.ClipText)
    SFormaPago.FPDebito = CCur(Debito.Text)
    If Tipo <> "C" Then
        Tipo = "P"
    End If
    
    VL_TramaPagoAndi$ = FMGenerarTramaNormal("51P", Tipo, SLSPCAndinatel, SFormaPago, VLreferencia, Trim(CStr(Comprobante)), VLFechaCorte, VLHoraProceso, CCur(VLMonto), txtContrato.Text, txtfactura.Text)
    'Debug.Print VL_TramaPagoAndi$
    'CONEXION DLL
    VL_Trama_Respuesta = FLConexionUpLoadG(VL_TramaPagoAndi, VGDatosConexionPV)
    FLTramaRespuestaPAC = VL_Trama_Respuesta
End Function

'hy-31-ene-2005
'Procedimiento particular para pacifictel
Function FLVerificaTramaRespuestaPAC(Trama As String) As Boolean
    Dim VLtramaCredimatic, VLTrama As String
    Dim VLposicion As Integer
    Dim VLlongCampo  As Integer
    Dim VLTipServicio, VLTipTrn, VLCodTrn, VLCodTerm, VLSecTer As String
    Dim VLCodPro, VLSecCon, VLMesPro, VLCodActualizacion, VLResponseCode As String
    On Error GoTo TpError
    
    VLTrama$ = Trama
    FLVerificaTramaRespuestaPAC = False
    VLMensajeVerificados$ = Mid(VLTrama$, 1, 4)
    
    If VLMensajeVerificados$ <> "0000" Then
        VLDescripcion = (RTrim(LTrim(Trama)))
        VLCodResp = VLMensajeVerificados$
        PMMsgError "ERROR EN PROCESO, IDENTIFICADO COMO " & (RTrim(LTrim(Trama))), "", CGErrorInformativo
        Exit Function
    End If
    VLtramaCredimatic = Mid(VLTrama$, 5, Len(VLTrama$))
    
    VLposicion% = 1
    VLlongCampo% = 3
    VLTipServicio = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
    
    VLposicion% = VLposicion% + VLlongCampo%
    VLlongCampo% = 1
    VLTipTrn = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
    
    VLposicion% = VLposicion% + VLlongCampo%
    VLlongCampo% = 4
    VLCodTrn = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
    
    VLposicion% = VLposicion% + VLlongCampo%
    VLlongCampo% = 8
    VLCodTerm = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
    
    VLposicion% = VLposicion% + VLlongCampo%
    VLlongCampo% = 6
    VLSecTer = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
    
    VLposicion% = VLposicion% + VLlongCampo%
    VLlongCampo% = 6
    VLCodResp = Mid(VLtramaCredimatic, VLposicion% + 2, VLlongCampo% - 2)
    mensaje = ""
    mensaje = VLCodResp
    
    If VLCodResp <> "0000" Or VLCodResp = "" Then
        FLVerificaTramaRespuestaPAC = False
        If VLCodResp <> "8367" Then
            VLMensajeErrPac = Mid(VLtramaCredimatic, 214, 102)
        Else
            VLMensajeErrPac = "ERROR: SERVIDOR DE PACIFICTEL NO CONTESTA"
        End If
        MsgBox "Error Pacifictel: <" + VLCodResp + "> " + Trim$(VLMensajeErrPac), vbInformation, "Mensaje de Comunicacion"
        Exit Function
    End If
    
    'AQUI EMPIEZA EL DESGLOSE DE LA TRAMA DE PACIFICTEL
    If vlOpcion = "C" Then
        'Datos adicionales
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 9
        VLNumTelefono = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        
        'Por causa de la clave
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 20
        
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 30
        VLNombreCliente = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        Nombre = VLNombreCliente
        
        'Por causa de la direccion
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 40

        'Por causa de la lectura inicial
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 10

        'Por causa de la lectura final
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 10

        'Por causa de la periodo inicial
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 8

        'Por causa de la periodo final
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 8

        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 1
        VLcategoria = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)

        'Por causa del pbx
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 1

        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 13
        VLNumFacturaPAC = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        txtfactura = VLNumFacturaPAC

        'Por causa del codigo del sri de factura
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 13

        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 6
        VlMes = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        Select Case Mid$(VlMes, 5, 2)
        Case "01"
            VlMes = " ENE" + Mid$(VlMes, 1, 4)
        Case "02"
            VlMes = " FEB" + Mid$(VlMes, 1, 4)
        Case "03"
            VlMes = " MAR" + Mid$(VlMes, 1, 4)
        Case "04"
            VlMes = " ABR" + Mid$(VlMes, 1, 4)
        Case "05"
            VlMes = " MAY" + Mid$(VlMes, 1, 4)
        Case "06"
            VlMes = " JUN" + Mid$(VlMes, 1, 4)
        Case "07"
            VlMes = " JUL" + Mid$(VlMes, 1, 4)
        Case "08"
            VlMes = " AGO" + Mid$(VlMes, 1, 4)
        Case "09"
            VlMes = " SEP" + Mid$(VlMes, 1, 4)
        Case "10"
            VlMes = " OCT" + Mid$(VlMes, 1, 4)
        Case "11"
            VlMes = " NOV" + Mid$(VlMes, 1, 4)
        Case "12"
            VlMes = " DIC" + Mid$(VlMes, 1, 4)
        End Select
        
        'Por causa del contrato
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 13
        VLContratoPAC = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        txtContrato = VLContratoPAC

        'Por causa del numero de lineas del pbx
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 3

        'Por causa del mensaje de la factura
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 102
        VLMensajeErrPac = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)

        'Por causa del valor ultima factura
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 14

        'Por causa del valor factura acumulada
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 14

        'Valor a pagar
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 14
        vlval$ = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        VLValorTramaPAC$ = Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%)
        VLValfactura = FLdato(vlval$, 12, 2)
        
        valor.Text = CCur(VLValfactura)
        Minimo.Text = CCur(VLValfactura)
    
        'Saldo credito
        VLposicion% = VLposicion% + VLlongCampo%
        VLlongCampo% = 14
        VLValSaldoCredito = FLdato(Mid(VLtramaCredimatic, VLposicion%, VLlongCampo%), 12, 2)
    
    End If
    
    FLVerificaTramaRespuestaPAC = True
    Exit Function
    
TpError:
    If VLCodResp <> "0000" Or VLCodResp = "" Then
        FLVerificaTramaRespuestaPAC = False
        If Trim(lblmensaje) = "" Then
            MsgBox "Transaccion No ha sido realizada intente nuevamente", vbCritical, "Mensaje de Comunicacion"
        Else
            MsgBox "ERROR ENVIADO POR PACIFICTEL IDENTIFICADO : " + (lblmensaje.Caption), vbCritical, "Mensaje de Comunicacion"
        End If
    Else
        MsgBox "PROBLEMAS DE COMUNICACION", vbExclamation, "Mensaje de Comunicacion"
    End If
End Function

'hy-31-ene-2005
Function FLRevForzadoPAC(tSSnCorr As String) As Integer
    Dim VTIndicadorSum As Integer
    
    VLTipoEjecucion% = VGTipoEjecucion%
    VGTipoEjecucion% = CGReverso
    
    VTIndicadorSum = 0
    
    SalvaTsn% = VGTSN%
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    VGSSNCorr& = tSSnCorr
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, VLTrn, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, (Loc.Text), "Cheque", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "CompRet", "" 'RCA 09/08/20001
    PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, (Reten.Text), "Retencion", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""  'ame 27.may.03
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", "" 'TPE Solo se incluye para el Reverso.
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Nombre, "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, (valor.Text), "Valor", ""
    PMPasoValoresATX VGSqlConn, "@i_reversauto", 0, SQLVARCHAR, "REVERSO AUTO ERROR CONEXION", "Reverso Automatico", ""
    PMPasoValoresATX VGSqlConn, "@i_motivo_reversa", 0, SQLVARCHAR, "", "Motivo de Reverso Automatico", ""
    PMPasoValoresATX VGSqlConn, "@i_val_ret", 0, SQLMONEY, (VLRetencion), "Valor Retenido", ""
    PMPasoValoresATX VGSqlConn, "@i_val_imp", 0, SQLMONEY, (VLBaseImponible), "Valor base imponible", ""
    PMPasoValoresATX VGSqlConn, "@i_version", 0, SQLINT4, 1, "Version Proceso", ""  'ref:esma04ago2004
    PMPasoValoresATX VGSqlConn, "@o_empresa_switch", 1, SQLVARCHAR, (VLempresa_switch), "Empresa switch", ""
    PMPasoValoresATX VGSqlConn, "@o_cod_trn_switch", 1, SQLVARCHAR, (VLtrn_switch), "Cod Trn switch", ""
    PMPasoValoresATX VGSqlConn, "@o_hora_pro", 1, SQLVARCHAR, (VLHoraProceso), "Fecha Hora", ""
    PMPasoValoresATX VGSqlConn, "@o_fecha_ef", 1, SQLVARCHAR, (VLFechaProceso), "Fecha Pago", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "T", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_fecha_fac", 0, SQLVARCHAR, (VLFecEmi), "Fecha_Factura", ""
    PMPasoValoresATX VGSqlConn, "@i_fac_imp", 0, SQLINT4, (VLFactImpagas), "Nro Facturas Impagas", ""
    PMPasoValoresATX VGSqlConn, "@i_cedula", 0, SQLVARCHAR, (VLCedFactura), "CedRuc cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_categoria", 0, SQLVARCHAR, (VLcategoria), "Categoria de abonado", ""
    PMPasoValoresATX VGSqlConn, "@i_sub_total", 0, SQLMONEY, (VLSubtotal), "Subtotal de Factura", ""
    PMPasoValoresATX VGSqlConn, "@i_ciclo_fac", 0, SQLVARCHAR, (VLCicloFact), "Ciclo de Factura", ""
    PMPasoValoresATX VGSqlConn, "@i_fec_ven", 0, SQLVARCHAR, (VLFecVen), "Fecha Vence Factura", ""
    PMPasoValoresATX VGSqlConn, "@i_area", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
    PMPasoValoresATX VGSqlConn, "@i_telefono", 0, SQLVARCHAR, (Trim(Ref)), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_num_factura", 0, SQLVARCHAR, txtfactura.Text, "Factura", ""
    PMPasoValoresATX VGSqlConn, "@i_contrato_telefono", 0, SQLVARCHAR, txtContrato.Text, "Contrato", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
    PMPasoValoresATX VGSqlConn, "@i_valor", 0, SQLMONEY, (efe.Text), "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_producto", 0, SQLCHAR, (CboTipCta.Text), "CboTipCta", ""
    PMPasoValoresATX VGSqlConn, "@o_mensaje", 1, SQLVARCHAR, "", "Mensaje", ""
    PMPasoValoresATX VGSqlConn, "@o_num_factura", 1, SQLVARCHAR, txtfactura.Text, "Mensaje", ""
    PMPasoValoresATX VGSqlConn, "@o_contrato_telefono", 1, SQLVARCHAR, txtContrato.Text, "Mensaje", ""
    PMPasoValoresATX VGSqlConn, "@i_num_rubros", 0, SQLINT4, (VLNumRubros), "Nro Rubros", ""
    If Trim(Servicio) = "1" And Trim(Empresa) = "3" Then
        PMPasoValoresATX VGSqlConn, "@o_fecha_atx", 1, SQLVARCHAR, "**********", "Fecha Pago2", ""
    Else
        PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
    End If
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, (VTIndicadorSum), "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn_corr", 1, SQLINT4, "0", "SecTrnRev", ""
    PMPasoValoresATX VGSqlConn, "@o_comprobante", 1, SQLINT4, "0", "Comprobante", ""
    PMPasoValoresATX VGSqlConn, "@i_piloto", 0, SQLCHAR, "S", "Piloto", ""
    If Trim(Servicio) = "1" And Trim(Empresa) = "3" Then
        PMPasoValoresATX VGSqlConn, "@i_online", 0, SQLCHAR, VLOnLine, "On line", ""
    End If
    
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", VLProcedure, True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        FLRevForzadoPAC = True
        VLCambio% = False
        VLSecTrnCorr = VGSSNCorr&
        If VLMensajeVerificados$ <> "0000" Then
            VGTipoEjecucionTMP% = VGTipoEjecucion%
            VGTipoEjecucion% = CGReverso%
            If FLConexionLocalPAC(vlOpcion) = False Then
                MsgBox "ERROR AL GENERAR REVERSO EN PACIFICTEL"
            End If
            VGTipoEjecucion% = VGTipoEjecucionTMP%
        End If
    Else
        PMFinTransaccion
        VLCambio% = True
        FLRevForzadoPAC = False
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLRevForzadoPAC = False
    End If
    PMFinTransaccion
    
    VLTipoEjecucion% = VGTipoEjecucion%
    VGTipoEjecucion% = CGNormal
End Function

Private Sub PLArmaTrama()
    Dim VLFila As Integer
    VLTramaCodigos = ""
    grdDetalle.Col = 1
    grdDetalle.Row = 1
    If Trim$(grdDetalle.Text) = "" Then
        Exit Sub
    End If
    For VLFila = 1 To grdDetalle.Rows - 1
        grdDetalle.Col = 11 '1
        grdDetalle.Row = VLFila
        VLTramaCodigos = VLTramaCodigos + Trim$(grdDetalle.Text) + ";"
        grdDetalle.Col = 2 '3
        VLTramaCodigos = VLTramaCodigos + Trim$(grdDetalle.Text) + ";"
    Next VLFila
End Sub

Private Sub Comision_KeyDown(KeyCode As Integer, Shift As Integer)
    'lfcm 06-diciembre-2006
    'Dim VLAcumulado As Currency
    If KeyCode% = CGTeclaF5% Then
        If Comision <> 0# Then
            'Inicializo las variables
            SGComision = 0#
            SGTipoCta = ""
            SGCedula = ""
            
            VLAcumulado = SGAcumulado
            
            VGUsar15 = efe.ValueReal
            
            SGUsar = VLEfe_com

            SGComision = Comision
            SGTipoCta = FCC51.CboTipCta.ListIndex
            
            'msilvag Inicio RECA-CC-SGC00030409 - Facturacion OffLine Debitos
            SGEmpresa = Me.Empresa.Text
            If Me.Servicio.Text = "2" And Me.Empresa.Text = "361" Then
                SGEmpresa = Me.Empresa.Text
            End If
            If Me.Servicio.Text = "6" Then
                SGEmpresa = "334"
            End If
            'msilvag Fin
            
            'msilvag Inicio RECA-CC-SGC00027715  'Cta.Text
                        'If Me.Empresa = "118" Or Empresa = "8521" Or Empresa = "5994" Or Me.Empresa = "115"  Then
                        If Me.Empresa = "118" Or Empresa = "8521" Or Empresa = "5994" Or Me.Empresa = "115" Or Me.Empresa = "361" Then 'REF 13
                                Consulta_parametro_comision
                                SGEmpresa = Empresa.Text
                                If VLCobroComDeb = "S" Then
                                'If Me.Empresa.Text = 118 Or Me.Empresa.Text = 5994 Or Me.Empresa.Text = 8521 Then
                                        SGNumCuenta = FCC51.Cta.Text 'ClipText
                                End If
                        End If
            'msilvag fin
            
            'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
            'empresa 5479 es de todas las empresas de CNT
            'empresa 4994 es de todas las empresas de luz de CNEL
            If Me.Empresa = "4994" Or Me.Empresa = "81" Or Me.Empresa = "1372" Or Me.Empresa = "1373" Or Me.Empresa = "1707" _
               Or Me.Empresa = "1708" Or Me.Empresa = "6951" Or Me.Empresa = "6952" Or Me.Empresa = "5479" _
               Or Me.Empresa = "8090" Or Me.Empresa = "5488" Or Me.Empresa = "361" Or Me.Empresa = "1089" Then
                SGNumCuenta = FCC51.Cta.Text
            End If
            'msilvag Fin
            
            'msilvag Inicio RECA-CC-SGC00027895
            If Me.Servicio = "6" Or Me.Servicio = "9" Then 'msilvag Margloblal MGLOB
                SGNumCuenta = FCC51.Cta.Text
            End If
            'msilvag Fin
            
            'dolaya 08/18/2017 Ini
            If Me.Servicio = "5" And (Me.Empresa = "6087" Or Me.Empresa = "1125") Then
                SGNumCuenta = FCC51.Cta.Text
            End If
            'dolaya Fin
            
            'ref15 Ini
            If Me.Servicio = "3" And VLEmpresaMeer = "S" Then
                SGNumCuenta = FCC51.Cta.Text
                SGEmpresa = Empresa.Text
                SGActivaSum = True
            End If
            'ref15 Fin
            
            'dolaya AMAGUA Ini AMAGUA-AP-SGC00028642
            If Me.Servicio = "2" And (Me.Empresa = "6" Or Me.Empresa = "4" Or SGEmpresa = "360" Or SGEmpresa = "8269") Then
                SGNumCuenta = FCC51.Cta.Text
            End If
            'dolaya AMAGUA Fin AMAGUA-AP-SGC00028642
            
            If Trim(Empresa.Text) = 114 Or Trim(Empresa.Text) = 3 Then 'gamc - 23MAR2011
                SGValida = "S"
            End If
            
            'Cargo la pantalla de Comisiones
            'JPM 11/02/2016:144;  JPM 15/Jul/2016: 8269                            JPM       -->
            If (Trim(Servicio.Text) = "3" And Trim(Empresa.Text) = "144") _
               Or (Trim(Servicio.Text) = "2" And Trim(Empresa.Text) = "8269") _
               Or (Trim(Servicio.Text) = "8" And Trim(Empresa.Text) = "1089") Then
                                                                              '<-- JPM 08/14/2016 (megadatos)
              FCC112.Debito.Enabled = False
            Else                                                              '<-- JPM 11/02/2016
              FCC112.Debito.Enabled = True
            End If
            '<Ref 20
            If VLVerde = "S" And VGTipoEjecucion% <> CGReverso% Then
                FCC112.CargaInfoCV
            End If
            'Ref 20>
            FCC112.Show 1
            
            'Valores
            VLEfe_com = FCC112.VLEfe_com
            VLChq_com = FCC112.VLChq_com
            VLDeb_com = FCC112.VLDeb_com
            VLTipCta_com = FCC112.VLTipCta_com
            VLCta_com = FCC112.VLCta_com
            VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
            cedula = Left(SGCedula, 10)
            VLNombre = SGNombre
            If Trim(Empresa.Text) = 1127 Then
               Total.Text = CCur(Pago_Val.Text) + CCur(Comision)
            End If
            
            If Trim(Empresa.Text) = 7256 Then ' LBP BELCORP COMISION
                If VLTotCom > 0 Then
                    Comision.Text = VLTotCom 'LBP
                    Total.Text = CCur(Pago_Val.Text) + CCur(Comision)
                End If
            End If
            
            'msilvag Inicio RECA-CC-SGC00027715  'Cta.Text
                        'If Me.Empresa = "118" Or Me.Empresa = "8521" Or Me.Empresa = "5994" Or Me.Empresa = "115" Then
                        If Me.Empresa = "118" Or Me.Empresa = "8521" Or Me.Empresa = "5994" Or Me.Empresa = "115" Or Me.Empresa = "361" Then 'REF 13
                                If VLCobroComDeb = "S" Then
                                        If VLTotCom > 0 And VLDeb_com > 0 Then
                                                Comision.Text = VLTotCom
                                                Total.Text = CCur(Pago_Val.Text) + CCur(Comision)
                                        End If
                                End If
                        End If
            'msilvag fin
            
            'msilvag Inicio RECA-CC-SGC00027895
            If Me.Servicio = "6" Then
                If VLTotCom > 0 And VLDeb_com > 0 Then
                    Comision.Text = VLTotCom
                    Total.Text = CCur(Pago_Val.Text) + CCur(Comision)
                End If
            End If
            'msilvag Fin
            
            'dolaya Inicio RECA-CC-SGC00027895
            If Me.Servicio = "5" And (Me.Empresa = "6087" Or Me.Empresa = "1125") Then
                If VLTotCom > 0 And VLDeb_com > 0 Then
                    Comision.Text = VLTotCom
                    Total.Text = CCur(Pago_Val.Text) + CCur(Comision)
                    Pago_Val.Text = CCur(Pago_Val.Text) 'Ref17
                End If
            End If
            'dolaya Fin
            
            'dolaya AMAGUA INI AMAGUA-AP-SGC00028642
            If Me.Servicio = "2" And (Me.Empresa = "6" Or Me.Empresa = "360" And Me.Empresa = "8269") Then  'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
                If VLTotCom > 0 And VLDeb_com > 0 Then
                    Comision.Text = VLTotCom
                    Total.Text = CCur(Pago_Val.Text) + CCur(Comision)
                End If
            End If
            'dolaya AMAGUA FIN AMAGUA-AP-SGC00028642
            
            'gamc - 23MAR2011
            If Trim(Empresa.Text) = 3 Or Trim(Empresa.Text) = "5479" Then 'DAPV CNT-MOVIL
               Total.Text = CCur(Pago_Val.Text) + CCur(VLTotCom)
            End If
           
            'Probando estos cambios
            SGUsar = VGUsar15  'efe.ValueReal
            efe.ValueReal = SGUsar
            SGAcumulado = VLAcumulado
            VGUsar15 = VLEfe_com
        End If
    End If
    
    If KeyCode% = CGTeclaENTER% Then
      SendKeys "{TAB}"
    End If
End Sub

Function FLConsEtapaCPS(Servicio As Byte) As Boolean
'ANBE: Funcion consulta telefono y agua ETAPA(120206)
Dim NumTelef As String
Dim NameSP As String
Dim VLComision As String
Dim MesPago As String
Dim DiaPago As String
Dim PDeuda As String
Dim PPago As String

Pago_Val.Text = "0"
PMInicioTransaccion
'VLEfe_com = 0
VLComision = 0
PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3790", "Trn", ""
PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "C", "", ""
PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT2, Trim(Me.Servicio.Text), "servicio", ""
PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, "0", "comision", ""
PMPasoValoresATX VGSqlConn, "@o_costo", 1, SQLMONEY, "0", "costo", ""
If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_pago_etapa_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
    VLComision = FMRetParamATX(VGSqlConn, 2)
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    'LBP Inicio RECA-CC-SGC00025869
    If VLComision > 0 Then
        VGCom_aux = FMDevuelveComisionReal(CDbl(VLComision), False, 51)
        If VGCom_aux <> CDbl(VLComision) And VGCom_aux > 0 Then
            VGComision_original = VLComision
            VLComision = VGCom_aux
        Else
            VGComision_original = VLComision
        End If
    End If
    'LBP Fin RECA-CC-SGC00025869
End If
If VLComision = 0 Then
    Comision.Enabled = False
Else
    Comision.Enabled = True
End If
PMFinTransaccion
PMInicioTransaccion

Select Case Servicio
  Case 1: 'ETAPA Telefono
    NumTelef = Trim(Ref)
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "62001", "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLCHAR, "VEN", "", ""
    PMPasoValoresATX VGSqlConn, "@i_ptelefono", 0, SQLVARCHAR, NumTelef, "iTelefono", ""
    NameSP = "fp_consulta_etapa_telefono"
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV", "cob_procesador", NameSP, True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
      ReDim psRetorno(1, 100)
      FMMapeaMatriz VGSqlConn, psRetorno
      DiaPago = psRetorno(1, 36)
      MesPago = psRetorno(1, 37)
      If Trim(MesPago) <> "0" And Trim(DiaPago) <> "0" And Trim(MesPago) <> "" And Trim(DiaPago) <> "" Then
        MsgBox "Pago ya fue realizado", vbInformation, "Consulta ETAPA"
        FLConsEtapaCPS = False
        Comision.Enabled = False
        'VLEfe_com = 0
      Else
        Nombre.Text = psRetorno(1, 2)
        VLCalle = Trim(psRetorno(1, 4))
        PDeuda = CDbl(psRetorno(1, 34)) 'DEUDA
        PPago = CDbl(psRetorno(1, 35)) 'TOTAL
        Pago_Val.Text = PPago
        txtfactura.Text = psRetorno(1, 7)
        txtContrato.Text = psRetorno(1, 1)
        Fecha.Text = Format$(Date, "mm/dd/yyyy")
        Comision.Text = VLComision
        FLConsEtapaCPS = True
      End If
    Else
      'VLEfe_com = 0
      FLConsEtapaCPS = False
      VLComision = 0
    End If
  Case 2: 'ETAPA Agua
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "62003", "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLCHAR, "VEN", "", ""
    PMPasoValoresATX VGSqlConn, "@i_psector", 0, SQLVARCHAR, Trim(Mid(Ref, 1, 2)), "Ppsi_psector", ""
    PMPasoValoresATX VGSqlConn, "@i_psubsector", 0, SQLVARCHAR, Trim(Mid(Ref, 3, 2)), "Ppsi_psubsector", ""
    PMPasoValoresATX VGSqlConn, "@i_plectura", 0, SQLVARCHAR, Trim(Mid(Ref, 5, 5)), "Ppsi_plectura", ""
    NameSP = "fp_consulta_etapa_agua"
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV", "cob_procesador", NameSP, True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
      ReDim psRetorno(1, 100)
      FMMapeaMatriz VGSqlConn, psRetorno
      DiaPago = psRetorno(1, 35)
      MesPago = psRetorno(1, 36)
      If Trim(MesPago) <> "0" And Trim(DiaPago) <> "0" And Trim(MesPago) <> "" And Trim(DiaPago) <> "" Then
        MsgBox "Pago ya fue realizado", vbInformation, "Consulta ETAPA"
        FLConsEtapaCPS = False
        'VLEfe_com = 0
      Else
        Pago_Val.Text = CDbl(psRetorno(1, 34)) '27
        Nombre.Text = psRetorno(1, 4)
        VLCalle = Trim(psRetorno(1, 5))
        txtfactura.Text = psRetorno(1, 8)
        Fecha.Text = Format$(Date, "mm/dd/yyyy")
        Comision.Text = VLComision
        FLConsEtapaCPS = True
      End If
    Else
      'VLEfe_com = 0
      FLConsEtapaCPS = False
      VLComision = 0
    End If
End Select
PMChequeaATX VGSqlConn
If FMRetStatusATX(VGSqlConn) <> 0 Then
  VLCambio% = True
  VTIndicadorSum = 0
  If Ref.Enabled Then
    Ref.SetFocus
  End If
End If
PMFinTransaccion
End Function


Function FLPagoEtapaCPS(Servicio As Byte) As Boolean
Dim Cuenta As String
Dim trn_srv As String
Dim FechaE As String

'ANBE: Funcion pago telefono y agua ETAPA (120206)
  Cuenta = Cta.ClipText
  If Trim(Cta.ClipText) = "" Then Cuenta = -1
  PMInicioTransaccion
  If VGTipoEjecucion% <> CGReverso% Then
    PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLCHAR, "N", "correccion", ""
  End If
  PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Mon", ""
  PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
  PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Valch", ""
  PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLCHAR, Cuenta, "Cuenta", ""
  PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
  PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "Cant_chq", ""
  PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
  PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "T", "Opcion", ""
  PMPasoValoresATX VGSqlConn, "@i_num_factura", 0, SQLVARCHAR, txtfactura.Text, "Num_factura", ""
  PMPasoValoresATX VGSqlConn, "@i_costo", 0, SQLMONEY, efe.Text, "Valor", ""
  PMPasoValoresATX VGSqlConn, "@i_producto", 0, SQLVARCHAR, CboTipCta.Text, "Producto", ""
  PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (VLEfe_com), "Comision_efe", ""
  PMPasoValoresATX VGSqlConn, "@i_area", 0, SQLVARCHAR, (VLChq_com), "comisiom_che", ""
  PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLCHAR, "VEN", "", ""
  '--revisar campos q no envio solo para reverso
  PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLCHAR, Trim(Comprob), "Comprob", ""
  PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
  PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, (Reten.Text), "Retencion", ""
  
  PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""    'Para recuperar en reverso
  PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""          'Para recuperar en reverso
  PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio), "Servicio", ""         'TPE Solo se incluye para el Reverso.
  PMPasoValoresATX VGSqlConn, "@i_valor", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
  PMPasoValoresATX VGSqlConn, "@i_pagencia", 0, SQLINT4, str(VGOficina), "Pagencia", ""
  PMPasoValoresATX VGSqlConn, "@i_pdireccionclientebanco", 0, SQLVARCHAR, "", "calle_cliente", "" 'VLCalle
  PMPasoValoresATX VGSqlConn, "@i_pcajero", 0, SQLINT4, 0, "Pcajero", ""
  
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869

Select Case Servicio
  Case 1:  'PAGO TELEFONO
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62002, "Trn", ""  '3194
    PMPasoValoresATX VGSqlConn, "@i_region_telefono", 0, SQLCHAR, Proceso.Text, "Region_telefono", ""
   
    PMPasoValoresATX VGSqlConn, "@i_contrato_telefono", 0, SQLVARCHAR, txtContrato.Text, "Contrato_telefono", ""
    PMPasoValoresATX VGSqlConn, "@i_telefono", 0, SQLVARCHAR, Trim(Ref), "Telefono", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipocuenta", 0, SQLVARCHAR, Mid(CboTipCta.Text, 1, 1), "Ptipocuenta", ""
    PMPasoValoresATX VGSqlConn, "@i_ptelefono", 0, SQLVARCHAR, Trim(Ref), "Ptelefono", ""
    PMPasoValoresATX VGSqlConn, "@i_psector", 0, SQLVARCHAR, "-1", "Psector", ""
    PMPasoValoresATX VGSqlConn, "@i_psubsector", 0, SQLVARCHAR, "-1", "Psubsector", ""
    PMPasoValoresATX VGSqlConn, "@i_plectura", 0, SQLVARCHAR, "-1", "Plectura", ""
  Case 2:  'PAGO AGUA
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62004, "Trn", ""  '3137
    'PMPasoValoresATX VGSqlConn, "@i_telefono", 0, SQLVARCHAR, Trim(Ref), "Codigo", ""
        
    PMPasoValoresATX VGSqlConn, "@i_ptipocuenta", 0, SQLVARCHAR, Mid(CboTipCta.Text, 1, 1), "Ptipocuenta", ""
    PMPasoValoresATX VGSqlConn, "@i_ptelefono", 0, SQLVARCHAR, "-1", "Ptelefono", ""
    PMPasoValoresATX VGSqlConn, "@i_psector", 0, SQLVARCHAR, Trim(CStr(Mid(Ref, 1, 2))), "Psector", ""
    PMPasoValoresATX VGSqlConn, "@i_psubsector", 0, SQLVARCHAR, Trim(CStr(Mid(Ref, 3, 2))), "Psubsector", ""
    PMPasoValoresATX VGSqlConn, "@i_plectura", 0, SQLVARCHAR, Trim(CStr(Mid(Ref, 5, 5))), "Plectura", ""
End Select
  PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, "0", "Comisionven", ""
  PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, "01/01/2000", "Fecha_efe", ""
  PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SSN", ""
  PMPasoValoresATX VGSqlConn, "@o_fecha_max", 1, SQLVARCHAR, Space(35), "Fecha_SRI", ""
  PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "Factura", ""
  PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, Space(15), "Factura", ""
  PMPasoValoresATX VGSqlConn, "@o_tipo_trn", 1, SQLINT4, 0, "trn", ""
  PMPasoValoresATX VGSqlConn, "@o_fecha_atx", 1, SQLVARCHAR, Space(15), "Fecha_emision", ""
  
  If FMTransmitirRPCATX(VGSqlConn, "PSSRV", "cob_procesador", "fp_pago_etapa", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
    ReDim psRetorno(1, 5)
    FMMapeaMatriz VGSqlConn, psRetorno
    VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 2), "mm/dd/yyyy")
    SGSecTrn$ = Trim(FMRetParamATX(VGSqlConn, 3))
    VLFecvenSRI = Trim(FMRetParamATX(VGSqlConn, 4))
    VLautoriSri = Trim(FMRetParamATX(VGSqlConn, 5))
    VLSerie_Secuencia = Trim(FMRetParamATX(VGSqlConn, 6))
    trn_srv = FMRetParamATX(VGSqlConn, 7)
    FechaE = Trim(FMRetParamATX(VGSqlConn, 8))
    FLPagoEtapaCPS = True
  Else
    FLPagoEtapaCPS = False
  End If
  PMChequeaATX VGSqlConn
  If FMRetStatusATX(VGSqlConn) <> 0 Then
    VLCambio% = True
    If Ref.Enabled Then
      Ref.SetFocus
    End If
  End If
  PMFinTransaccion
    
  If FLPagoEtapaCPS Then
    If (VGTipoEjecucion% <> CGReverso%) Then
        Fecha.Text = FechaE
        PMInicioTransaccion
        'Para guardar el numero de trn de Etapa
        PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3790", "Trn", ""
        PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "A", "", ""
        PMPasoValoresATX VGSqlConn, "@i_tipo_trn", 0, SQLINT4, trn_srv, "tipo_Trn", ""
        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
        PMPasoValoresATX VGSqlConn, "@i_tssn", 0, SQLINT4, SGSecTrn$, "tssn", ""
        PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT2, Trim(Me.Servicio.Text), "servicio", ""
        PMPasoValoresATX VGSqlConn, "@i_num_factura", 0, SQLVARCHAR, Trim(psRetorno(1, 3)), "transaccion_etapa", ""
        If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_pago_etapa_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
          PMChequeaATX VGSqlConn
        End If
        PMChequeaATX VGSqlConn
        PMFinTransaccion
    End If
    If VGTipoEjecucion% <> CGReverso% Then
      If ((Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
        SGPrimeraVez = 0     ' ya no es primera vez
        If CDbl(SGUsar) > 0 Then
          PMGrabaDesglose VLTrn, CDbl(SGUsar), VLCambio%
          If VLCambio% = True Then
            MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
          End If
        End If
        SGActual = 1  'seteo Variable para borrar desglose
      Else
        SGActual = 0  'no borrar desglose en caso de Error en Transaccion
      End If
    Else  'Por REVERSO
      VLTsnTemp = VGTSN
      PMEgresoEfectivo SGUsar, VLTrn
    End If
    If SGAcumulado < 0 Then
      VLDescargar = 1
    End If
  End If


End Function

Private Sub PLCambiaForma(Tipo As Byte)
  Dim MLeft As Integer
  Dim MRight As Integer
  Dim MAlto As Integer
  Dim MWidth As Integer
  MLeft = 2050
  MRight = 400
  MAlto = 285
  MWidth = 1980
  'ANBE 113006
  Select Case Tipo
    Case 1:  'Para limpiar F2
      Pago_Val.Visible = True
      ValPago.Visible = True
      'Valor.Visible = True
      Label1(0).Visible = True
      Label1(1).Visible = True
      Comprob.Visible = True
      Reten.Visible = True
      txtContrato.Visible = True
      txtfactura.Visible = True
      lblValor(3).Visible = True
      lblValor(4).Visible = True
      Fecha.Visible = False
      lblValor(5).Visible = False
      lblValor(5).Caption = "Fecha tope de pago:"
      ValPago.Caption = "Total a Pagar:"
      ValPago.Top = 4050
      Pago_Val.Top = 4005
      Total.Top = 4695
      Total.Left = 3060
      Total.Width = 1395
      Nombre.Top = 5010
      Nombre.Width = 3500
      Nombre.Left = 960
      Comision.Top = 4695
      Comision.Left = 960
      Comision.Width = 1110
      Fecha.Top = 5310
      Me.Height = 6855
      lblValor(0).Top = 4440
      lblValor(1).Top = 5055
      lblValor(5).Top = 5355
      lblValor(6).Top = 4740
      lblValor(7).Top = 4740
      lblValor(7).Left = 2115
      If Servicio.Text = "1" Then 'cnt movil
      valor.Visible = False 'ANBE 0262207
      End If
      valor.Top = 4380 'ANBE 0262207
      valor.Left = 3060 'ANBE 0262207
      Fecha.Top = 5310 'ANBE 0262207
      txtContrato.Top = 5310  'ANBE  062207
      txtContrato.Width = 3500  'ANBE  062207
      txtContrato.Left = 960  'ANBE  062207
      txtfactura.Top = 5610  'ANBE  062207
      txtfactura.Width = 3500  'ANBE  062207
      txtfactura.Left = 960  'ANBE  062207
      lblValor(3).Top = 5055  'ANBE  062207
      lblValor(4).Top = 5655  'ANBE  062207
      lblValor(5).Top = 5355  'ANBE  062207
      VLMTop = False
    Case 2:
      Fecha.Visible = True
      lblValor(5).Visible = True
      Proceso.Enabled = False
      Pago_Val.Visible = True
      ValPago.Visible = True
      Label1(0).Visible = False
      Label1(1).Visible = False
      Comprob.Visible = False
      Reten.Visible = False
      txtContrato.Visible = False
      lblValor(3).Visible = False
      lblValor(4).Visible = False
      lblValor(14).Visible = False:  txtfactura.Width = 3500
      If VGTipoEjecucion% <> CGReverso% And Trim(Empresa.Text) = "144" Then
        Pago_Val.Tag = 0 'JPM 11/02/2016
      End If
      txtfactura.Visible = False
      lblValor(5).Caption = "Fecha Emision:"
      ValPago.Caption = "Valor Servicio:"
      ValPago.Top = 3720
      Pago_Val.Top = 3675
      Total.Top = 4270
      Total.Left = 1360
      Total.Width = 3090
      Nombre.Top = 4575
      Nombre.Width = 3090
      Nombre.Left = 1360
      Comision.Top = 3975
      Comision.Left = 1360
      Comision.Width = 3090
      Fecha.Top = 4875
      lblValor(0).Top = 4005
      lblValor(1).Top = 4620
      lblValor(5).Top = 4920
      lblValor(6).Top = 4020
      lblValor(7).Top = 4305
      lblValor(7).Left = 65
      Me.Height = 6465
      VLMTop = True
    Case 3:  'ANBE 062207 Pacifictel Abono
      Fecha.Visible = True
      lblValor(5).Visible = True
      Pago_Val.Visible = True
      ValPago.Visible = True
      Label1(0).Visible = False
      Label1(1).Visible = False
      Comprob.Visible = False
      Reten.Visible = False
      ValPago.Top = 4290
      Pago_Val.Top = 4270 '3675
      valor.Visible = True
      valor.Top = 3975 'ANBE 0262207
      valor.Left = 1360 'ANBE 0262207
      valor.Width = 3090
      Nombre.Top = 4575
      Nombre.Width = 3090
      Nombre.Left = 1360
      Comision.Top = 4575 '3975
      Comision.Left = 1360
      Comision.Width = 1145 '3090
      Total.Top = 4575
      Total.Left = 3315 '1360
      Total.Width = 1145 '3090
      Fecha.Top = 4875
        lblValor(0).Visible = True
      lblValor(0).Top = 4005
      lblValor(1).Top = 4920
      lblValor(6).Top = 4575 '4020
      lblValor(7).Top = 4575
      lblValor(7).Left = 2700 '65
      lblValor(0).Left = 65
      lblValor(8).Visible = False
      Nombre.Top = 4875
      Fecha.Top = 5310
      txtContrato.Top = 5180
      txtContrato.Width = 3090
      txtContrato.Left = 1360

      txtfactura.Top = 5490
      txtfactura.Width = 3090
      txtfactura.Left = 1360
      lblValor(3).Top = 5230
      lblValor(4).Top = 5530
      lblValor(5).Visible = True: lblValor(5).Top = 5820: Fecha.Top = 5800
      'gmartillo 10/19/2009 Temporal hasta que CNT reguralice como va a enviar estos datos
      'lblValor(10).Visible = True: txtValFec.Visible = True
      'lblValor(11).Visible = True: txtValDeu.Visible = True
      'gmartillo 10/19/2009 Temporal hasta que CNT reguralice como va a enviar estos datos
      
      Me.Height = 6555
      VLMTop = True
      Me.lblCol(3).Visible = False               'lfcm 06-agosto-2008
      Me.Nombre_oficina.Visible = False          'lfcm 06-agosto-2008
      Me.Fragua.Top = 850                        'lfcm 06-agosto-2008 Original me.Fragua.Top = 1230
      Me.Fragua.Height = 1200                    'lfcm 06-agosto-2008 Original me.Fragua.Top = 855
      
      lblCol(5).Visible = True                   'lfcm 29-julio-2008 Nuevo Campo Catalogo para servicios de Pacifictel
      Me.serpac.Visible = True                   'lfcm 29-julio-2008 Nuevo Campo Catalogo para servicios de Pacifictel
      Me.sal_serpac.Visible = True               'lfcm 29-julio-2008 Nuevo Campo Catalogo para servicios de Pacifictel
      
      Me.lblCol(5).Top = 275                     'lfcm 29-julio-2008
      Me.lblCol(5).Left = 1100                   '2040
      Me.serpac.Top = 230                        'lfcm 29-julio-2008
      Me.serpac.Left = 2040                      'lfcm 29-julio-2008
      Me.sal_serpac.Top = 230                    'lfcm 29-julio-2008
      Me.sal_serpac.Left = 2670                  'lfcm 29-julio-2008
      
      Me.lblCol(0).Top = 570                     'lfcm 29-julio-2008
      Proceso.Top = 525                          'lfcm 29-julio-2008
      Me.sal_proc.Top = 525                      'lfcm 29-julio-2008

      Me.lblCobAlum.Top = 865                    'lfcm 29-julio-2008
      Me.Ref.Top = 820                           'lfcm 29-julio-2008
      serpac.TabIndex = "69" 'cnt-movil
      Ref.TabIndex = "3"  'cnt-movil
       
       
      'Proceso.SetFocus                          'lfcm 29-julio-2008
      If (VGTipoEjecucion% <> CGReverso%) Then   'lfcm 29-julio-2008
         Me.serpac.SetFocus                      'lfcm 29-junio-2008
      End If                                     'lfcm 29-julio-2008
      
    Case 4:  'DAPV CNT-MOVIL 09NOV12
        Proceso.TableName = ""
        serpac.TableName = "sv_area_telefono"
        Height = 7000
        Fragua.Top = 850
        Fragua.Height = 1200
        Fragua.Caption = "              PAGO A " & Sal_Emp
        VLMTop = True
        lblCol(3).Visible = False
        lblCol(5).Visible = True
        lblCol(0).Visible = False
        lblValor(2).Visible = True
        lblCol(6).Visible = True
        lblValor(5).Visible = True
        Label1(0).Visible = False
        Label1(1).Visible = False
        
        Nombre_oficina.Visible = False
        serpac.Visible = True
        sal_serpac.Visible = True
        Minimo.Visible = False
        Proceso.Visible = True
        Proceso.Enabled = True
        sal_proc.Visible = True
        Pago_Val.Visible = True
        bitmap.Visible = False
        ImgStrech.Visible = False  'JPM Megadatos

        ValPago.Visible = True
        Comprob.Visible = False
        Reten.Visible = False
        txtContrato.Visible = True
        lblCol(6).Caption = "Tipo:"
        lblCol(5).Top = 550
        lblCol(5).Left = 950
        serpac.Top = 525
        serpac.Left = 2040
        sal_serpac.Top = 525
        sal_serpac.Left = 2670
        lblCol(0).Top = 570
        Proceso.Top = 230
        sal_proc.Top = 230
        lblCobAlum.Top = 865
        Ref.Top = 820
        lblCobAlum.Caption = "Telefono: "
        lblCobAlum.Left = 940
        lblCobAlum.Width = 1160
        lblValor(2).Caption = "Total Pagado: "
        lblCol(5).Caption = "Area:"
        serpac.TabIndex = "3"
        Ref.TabIndex = "4"
        Fecha.Visible = True
        ValPago.Top = 4290
        Pago_Val.Top = 4270 '3675
        valor.Visible = True
        valor.Top = 3975 'ANBE 0262207
        valor.Left = 1360 'ANBE 0262207
        valor.Width = 3090
        Nombre.Top = 4575
        Nombre.Width = 3090
        Nombre.Left = 1360
        Comision.Top = 4575 '3975
        Comision.Left = 1360
        Comision.Width = 1145 '3090
        Total.Top = 4575
        Total.Left = 3315 '1360
        Total.Width = 1145 '3090
        Fecha.Top = 4875
        lblValor(0).Visible = True
        lblValor(0).Top = 4005
        lblValor(1).Top = 4920
        lblValor(6).Top = 4575 '4020
        lblValor(7).Top = 4575
        lblValor(7).Left = 2700 '65
        lblValor(0).Left = 65
        lblValor(8).Visible = False
        Nombre.Top = 4875
        Fecha.Top = 5310
        txtContrato.Top = 5180
        txtContrato.Width = 3090
        txtContrato.Left = 1360

        txtfactura.Top = 5490
        txtfactura.Width = 3090

        txtfactura.Left = 1360
        lblValor(3).Top = 5230
        lblValor(4).Top = 5530
        lblValor(5).Visible = True: lblValor(5).Top = 5820: Fecha.Top = 5800
        DoEvents
        If (VGTipoEjecucion% <> CGReverso%) Then
        Proceso.SetFocus
        End If
'''        fragua2.Visible = True
'''        fragua2.Left = 60
'''        fragua2.Top = 850
'        cbo_tipo2.AddItem "Seleccione"
        cbo_tipo2.Clear
        cbo_tipo2.AddItem "Seleccione"
        cbo_tipo2.AddItem "Tèlefono/Celular"
        cbo_tipo2.AddItem "Cuenta Financiera"
        cbo_tipo2.ListIndex = 1
'''        If (VGTipoEjecucion% <> CGReverso%) Then
'''            cbo_tipo2.SetFocus
'''        End If
  End Select

End Sub

'-->hy-19-enero-2007
Function FLTransmitir_CPS_TVCABLE_consulta() As Boolean
    FLTransmitir_CPS_TVCABLE_consulta = False
    VLTsnTemp = 0
    'obtener la localidad
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_tvcable_localidad"
    PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
    PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, Trim$(Empresa.Text)
    If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "") Then
        PMMapeaVariableATX VGSqlConn&, VTDetalles$
        PMChequea VGSqlConn&
        VLTvCableLocalidad = VTDetalles$
        PMChequea VGSqlConn&
    Else
        VLTvCableLocalidad = ""
        PMChequea VGSqlConn&
        Exit Function
    End If
    'obtener la transaccion de consulta
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_tvcable_transac"
    PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
    PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, Trim$(Empresa.Text)
    If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "") Then
        PMMapeaVariableATX VGSqlConn&, VTDetalles$
        PMChequea VGSqlConn&
        VLTvCableTransaccion = VTDetalles$
        PMChequea VGSqlConn&
    Else
        VLTvCableTransaccion = ""
        PMChequea VGSqlConn&
        Exit Function
    End If
    'obtener la transaccion de pago
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_tvcable_transac_pag"
    PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
    PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, Trim$(Empresa.Text)
    If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "") Then
        PMMapeaVariableATX VGSqlConn&, VTDetalles$
        PMChequea VGSqlConn&
        VLTvCableTransaccionPago = VTDetalles$
        PMChequea VGSqlConn&
    Else
        VLTvCableTransaccionPago = ""
        PMChequea VGSqlConn&
        Exit Function
    End If
    
    
    'Validar envio de un Código Válido en la Consulta de TvCable lfcm 03-enero-2008
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
   'Validar envio de un Código Válido en la Consulta de TvCable lfcm 03-enero-2008
   
    
    'llamar a la consulta
    PLTipoTransaccion
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62020, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_ptrn_code", 0, SQLVARCHAR, Trim$(VLTvCableTransaccion), "", ""
    PMPasoValoresATX VGSqlConn, "@i_psource_date", 0, SQLVARCHAR, Format$(Date, "yymmdd"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_psource_time", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_psource_channel", 0, SQLVARCHAR, Trim$("01"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_ciudad", 0, SQLVARCHAR, Trim$(VLTvCableLocalidad), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_cuenta", 0, SQLVARCHAR, Trim$(Ref.Text), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pmonto", 0, SQLMONEY, 0, "", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfecha_contable", 0, SQLVARCHAR, Format$(Date, "yymmdd"), "", ""
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_consulta_tvcable", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_CPS_TVCABLE_consulta = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        Nombre.Text = FLBuscarItem("@o_ptrackIIIdata")
        VLValorTvCableOriginal = FLBuscarItem("@o_pacct_1_curr_bal")
        valor.Text = Trim$(str$(CCur(Left(VLValorTvCableOriginal, 17)) / 100))
        Total.Text = CCur(valor.Text) + CCur(Comision.Text)
        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
        If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
        End If
        If Right(VLValorTvCableOriginal, 1) = "-" Then
            MsgBox "Atención : el monto es un saldo a favor del cliente", vbInformation, "Atención"
        End If
        efe.SetFocus
    Else
        PMChequeaATX VGSqlConn
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function
'-->smerino new tvcable

Function FLTransmitir_MIG_TVCABLE_consulta() As Boolean 'SMERINO MIGRACION A WEBSERVICE
  
 
 VLTsnTemp = 0
 vlOpcion = "C"
 
 
       'Validar envio de un Código Válido en la Consulta de TvCable lfcm 03-enero-2008
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
    
    
    SGEmpresa = "334"  'msilvag RECA-CC-SGC00027895
    Consulta_Parametro 'msilvag Bus Fase2
 
  
    'llamar a la consulta
    PLTipoTransaccion
    PMInicioTransaccion
    
        PMPasoValores VGSqlConn&, "@i_canal", 0, SQLVARCHAR, "VEN"  'cambio pricaura SOA2
      If CboTipo.ListIndex = 0 Then 'identidad smerino
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62022, "Trn", ""
       Else
            'flujo de consulta por cuenta
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62030, "Trn", ""
    End If
    
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_cuenta", 0, SQLVARCHAR, Trim$(Ref.Text), "", "" 'identidad o cuenta
        
      'variables de retorno
        PMPasoValoresATX VGSqlConn, "@o_cod_error", 1, SQLINT4, 0, "cod_error", ""
        PMPasoValoresATX VGSqlConn, "@o_descp_error", 1, SQLVARCHAR, "xxx", "desc_error", ""
        PMPasoValoresATX VGSqlConn, "@o_nombre_cliente", 1, SQLVARCHAR, "xxx", "nomb_cliente", ""
     
       
      'fin de variables de salida
     
    If FMTransmitirRPCATX(VGSqlConn, VLParametroServer, "cob_procesador", "fp_cons_contratos", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
     PMMapeaGridATX VGSqlConn, grddato, False
    VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
     'ReDim psRetorno(9, 50)  ' el 50 es la cantidad de campos output
     'FMMapeaMatriz VGSqlConn, psRetorno
    PMChequeaATX VGSqlConn
     
     VLCambio% = False

    VLCodError = FMRetParamATX(VGSqlConn, 1) 'para verificar el cod de error
    VLdescerror = FMRetParamATX(VGSqlConn, 2)
    
    FLTransmitir_MIG_TVCABLE_consulta = True


         Nombre.Text = FMRetParamATX(VGSqlConn, 3)
        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
        If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
        End If
        If Right(VLValorTvCableOriginal, 1) = "-" Then
            MsgBox "Atención : el monto es un saldo a favor del cliente", vbInformation, "Atención"
        End If
        efe.SetFocus
    Else
        PMChequeaATX VGSqlConn
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function
' new tvcable smerino funcion de pago de tvcable
Function FLTransmitir_MIG_TVCABLE_pago() As Boolean
Dim VTIndicadorSum As Integer
Dim i As Integer
Dim VLValor As String
Dim VLlocaemp As String
Dim VLTotal_aux As Currency 'valor sin comision


   If VGHorarioDif Then
        VLTrn = "3926"
        VLHorario = "D"
    Else
        VLTrn = "3925"
        VLHorario = "N"
    End If


     VLIndReverso = False
    
    If VGTipoEjecucion% = CGReverso% Then
        VLIndReverso = True
      End If



  VLlocaemp = UCase(Trim$(Me.txtContrato.Text)) + "+" + UCase(Trim$(Me.txt_ciudad_tv.Text))
  
  Sal_Emp.Caption = Trim$(Me.txtContrato.Text) 'asigna empresa para comprobante
  
  
  If (VGTipoEjecucion% <> CGReverso%) Then 'smerino
  
  'obtener la transaccion de pago
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, "X", "opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_tabla", 0, SQLVARCHAR, "sv_tvcable_locali_emp", "tabla", ""
    PMPasoValoresATX VGSqlConn, "@i_valor_desc", 0, SQLVARCHAR, VLlocaemp, "descripcion", ""
    PMPasoValoresATX VGSqlConn, "@o_empresa", 1, SQLVARCHAR, "0", "empresa", ""
    
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "0", "S", "S") = True Then
        Empresa.Text = FMRetParamATX(VGSqlConn, 1)
       ' vlsecuenTv = FMRetParamATX(VGSqlConn, 2)
       PMChequeaATX VGSqlConn&
       Else
        MsgBox "Empresa no parametrizada", vbInformation, "Aviso"
        Exit Function
       'Empresa.Text = "0"
       PMChequeaATX VGSqlConn&
       PMFinTransaccion
    End If
    
  End If 'fin de la validacion
  
        
  If Right(VLValorTvCableOriginal, 1) = "-" Then
        MsgBox "El valor mostrado es a favor del cliente y no puede ser cancelado", vbInformation, "Aviso"
        Exit Function
    End If
    
    VTIndicadorSum = 0
    VLTsnTemp = 0
    
         

    VLTotal_aux2 = CCur(Total.Text) - CCur(Comision.Text)

    Consulta_Parametro 'msilvag Bus Fase2
    
 
    PMInicioTransaccion
 
        PMPasoValores VGSqlConn&, "@i_canal", 0, SQLVARCHAR, "VEN"  'cambio pricaura SOA2
        'msilvag Inicio Bus Fase2
    If VGTipoEjecucion% <> CGReverso% Then
                    PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCorr", ""
    End If
    'msilvag Fin Bus Fase2
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62606, "Trn", "" 'smerinio nueva trx
    PMPasoValoresATX VGSqlConn, "@i_ssn", 0, SQLINT4, 0, "SecAut", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Servicio.Text, "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim(Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLMONEY, (efe.Text), "efe", ""
    PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (valor.Text), "Subtotal", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_efe", 0, SQLMONEY, (VLEfe_com), "Comefectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_chq", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_db", 0, SQLMONEY, (VLDeb_com), "Com. Debito", "" 'msilvag RECA-CC-SGC00027895
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (valor.Text), "Total pagado", ""
    If CantChq.Text = "" Then
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, "0", "Cantidad de cheques", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, (CantChq.Text), "Cantidad de cheques", ""
    End If
    
    'msilvag Inicio RECA-CC-SGC00027895
    If Me.Cta.ClipText <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (CboTipCta.Text), "Cantidad de cheques", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
        If Me.Debito > 0 Then
            PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
        End If
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (VLTipCta_com), "CboTipCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    End If
    'msilvag Fin
    
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    'PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Ventanilla", ""
    PMPasoValoresATX VGSqlConn, "@i_cod_cliente", 0, SQLVARCHAR, Trim(Me.txt_cta_tvcable.Text), "Cod. Cliente", ""
   ' PMPasoValoresATX VGSqlConn, "@i_ruc_cliente", 0, SQLVARCHAR, VLCedula, "Ruc Cliente", "" 'solo por factor de prueba
    PMPasoValoresATX VGSqlConn, "@i_ruc_cliente", 0, SQLVARCHAR, CboTipo.Text, "Ruc Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre_cliente", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""
        PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLVARCHAR, "S", "Aplicacion Cobis", ""

   ' PMPasoValoresATX VGSqlConn, "@i_cod_respuesta", 0, SQLVARCHAR, VLDpCcodResp, "CodResputa", ""
    If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
        If FMSetParametro("@trnReversoManual", SQLCHAR&, 0, "S", "", "") Then
            VLServicio = "Recaudacion"
        End If
    End If
 
 'Parametros de proveedor
 
        PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "FechaComp", "" 'VLFechaContEmp
       ' PMPasoValoresATX VGSqlConn, "@i_pvalorpag", 0, SQLVARCHAR, Format((FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)), VGFormatoMoney), "ValorPag", ""
        PMPasoValoresATX VGSqlConn, "@i_pvalorpag", 0, SQLVARCHAR, Format((FMCCurATX(Pago_Val.Text)), VGFormatoMoney), "ValorPag", ""
        PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "HoraLocal", ""
    
    If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
        PMSetValorReverso txthorario, "@o_ssn"
        VLDpCSecAdq = txthorario.Text
        txthorario.Text = ""
        
     'cambia a normal
     VLIndReverso = False
    If VGTipoEjecucion% = CGReverso% Then
        VGTipoEjecucion% = CGNormal%
        VLIndReverso = True
    End If
     'fin normal
       
        PMPasoValoresATX VGSqlConn, "@i_psecadq", 0, SQLVARCHAR, VLDpCSecAdq, "SecAdq", ""
        PMPasoValoresATX VGSqlConn, "@i_cod_respuesta", 0, SQLVARCHAR, VLDpCcodResp, "CodResputa", ""
  
    'fin smerino cambia reverso
    If VLIndReverso Then
        VLIndReverso = False
        VGTipoEjecucion% = CGReverso%
    End If
        
        
    Else
        PMPasoValoresATX VGSqlConn, "@i_psecadq", 0, SQLVARCHAR, VLDpCSecAdq, "SecAdq", ""
        PMPasoValoresATX VGSqlConn, "@i_cod_respuesta", 0, SQLVARCHAR, VLDpCcodResp, "CodResputa", ""
    End If
 
      PMPasoValoresATX VGSqlConn, "@i_pcodigo_ciudad", 0, SQLVARCHAR, Trim$(Me.txt_ciudad_tv.Text), "desc_ciudad", ""
      PMPasoValoresATX VGSqlConn, "@i_pdescr_empresa", 0, SQLVARCHAR, Trim$(Me.txtContrato.Text), "desc_empresa", ""
    ' variables de proveedro
    PMPasoValoresATX VGSqlConn, "@o_fecha_contable", 1, SQLVARCHAR, "XXXXXXXXXX", "Feccontable", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "0", "sec"
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fact_elect", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_cod_respuesta", 1, SQLVARCHAR, "xxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_mensaje_respuesta", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fec_ini_vig_aut", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fec_fin_vig_aut", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fecdessri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "x", "", ""

    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
  
    If FMTransmitirRPCATX(VGSqlConn, VLParametroServer, "cob_procesador", "fp_pago_tvCable", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
      VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        VLCambio% = False
        '------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VLSSnCorreccion = FMRetParamATX(VGSqlConn, 2)
        
        VLMG_ossn = FMRetParamATX(VGSqlConn, 2)
        VLSsn = FMRetParamATX(VGSqlConn, 2)
        VLMG_autorisri = Trim(FMRetParamATX(VGSqlConn, 3))
        VLautoriSri = Trim(VLMG_autorisri)
        VLMG_fecvensri = FMRetParamATX(VGSqlConn, 4)
        VLFecvenSRI = Trim(VLMG_fecvensri)
        VLFechaCorte = FMRetParamATX(VGSqlConn, 1)
        VLFechaContable = VLFechaCorte
        VLDpCcodResp = Trim(FMRetParamATX(VGSqlConn, 8))
        VLfact_elect = Trim(FMRetParamATX(VGSqlConn, 6))
        VLSerie_Secuencia = Trim(FMRetParamATX(VGSqlConn, 5))
        
        VLMG_Fecinivig = FMRetParamATX(VGSqlConn, 9)
        VLFecinivig = Trim(VLMG_Fecinivig)
        VLMG_Fecfinvig = FMRetParamATX(VGSqlConn, 10)
        VLFecfinvig = Trim(VLMG_Fecfinvig)
        VLCodAutorizacion = Trim(FMRetParamATX(VGSqlConn, 8))
        VLNombSuscr = Nombre.Text
       
     PMChequeaATX VGSqlConn
     PMTotalesBranch "51"
     FLTransmitir_MIG_TVCABLE_pago = True
     VLCambio% = False
     'TPE ------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 1
        PMIniciaRegSum
     ' <-----

    Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_MIG_TVCABLE_pago = False
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 0
        PMChequeaATX VGSqlConn
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir_MIG_TVCABLE_pago = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    
     'smerino
    If FLTransmitir_MIG_TVCABLE_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    
    If VGTipoEjecucion% <> CGReverso% Then
        If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            'PMGrabaDesglose VLTrn, Efe.Text, VLCambio%
            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
                'FLTransmitir_CNTMOVIL_pago = False
                FLTransmitir_MIG_TVCABLE_pago = False
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
        VLTsnTemp = VGTSN
        'PMEgresoEfectivo Efe.ValueReal, VLTrn
        'PMEgresoEfectivo SGUsar, VLTrn
         PMEgresoEfectivo SGUsar, VLTrn, VGSSNCorr&
    End If
    If SGAcumulado < 0 Then
        VLDescargar = 1
    End If
        
End Function

Function FLTransmitir_CPS_TVCABLE_pago() As Boolean
Dim VTIndicadorSum As Integer
Dim i As Integer
Dim VLValor As String
    
    FLTransmitir_CPS_TVCABLE_pago = False
    
    If Right(VLValorTvCableOriginal, 1) = "-" Then
        MsgBox "El valor mostrado es a favor del cliente y no puede ser cancelado", vbInformation, "Aviso"
        Exit Function
    End If
    
    '-->OJO OJO OJO OJO OJO OJO OJO OJO OJO OJO
    'SOLUCION TEMPORAL HASTA QUE ARQ-CPS OFREZCA LA SOLUCION DEFINITIVA
    If VGTipoEjecucion% <> CGReverso% Then
        PMInicioTransaccion
        If Not VGHorarioDif Then
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3218, "Trn", ""
        Else
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3219, "Trn", ""
        End If
        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
        PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "F", "Opcion", ""
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
        PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
        If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_servicio_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
            VLTvCableFechaContable = Format$(FMRetParamATX(VGSqlConn, 1), "yymmdd")
        Else
            MsgBox "Error no se pudo obtener la fecha contable", vbCritical, "Aviso"
            PMChequeaATX VGSqlConn
            PMFinTransaccion
            Exit Function
        End If
        PMChequeaATX VGSqlConn
        PMFinTransaccion
    End If
    '<--OJO OJO OJO OJO OJO OJO OJO OJO OJO OJO
    
    VTIndicadorSum = 0
    VLTsnTemp = 0
    
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62019, "Trn", ""
    'PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    '-->
    'parametros para aplicar en el truco del reverso
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""
    PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "CompRet", ""
    PMPasoValoresATX VGSqlConn, "@i_cps", 0, SQLVARCHAR, "S", "indcps", ""
    '<--
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_efe", 0, SQLMONEY, efe.Text, "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, efe.Text, "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, Reten.Text, "Retencion", ""
    PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "P", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    'PMPasoValoresATX VGSqlConn, "@i_tsn", 0, SQLINT4, 0, "tsn", ""
    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
    PMPasoValoresATX VGSqlConn, "@i_ind_costo", 0, SQLCHAR, "", "ind_costo", ""
    PMPasoValoresATX VGSqlConn, "@i_costo", 0, SQLMONEY, 0, "costo", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
    'PMPasoValoresATX VGSqlConn, "@i_ubi", 0, SQLINT4, VGUbicacion, "tsn", ""
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (VLEfe_com), "Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, (VLDeb_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_campo_adic1", 0, SQLVARCHAR, Nombre.Text, "iadic1", ""
    VLValor = VLTvCableLocalidad + VLTvCableTransaccionPago
    PMPasoValoresATX VGSqlConn, "@i_campo_adic2", 0, SQLVARCHAR, VLValor, "iadic2", ""
    PMPasoValoresATX VGSqlConn, "@i_campo_adic3", 0, SQLINT4, 0, "iadic3", ""
    PMPasoValoresATX VGSqlConn, "@i_campo_adic4", 0, SQLINT4, 0, "iadic4", ""
    If VGTipoEjecucion% = CGReverso% Then
        VGReversoLoger$ = "N"
    End If
    PMPasoValoresATX VGSqlConn, "@i_ptrn_code", 0, SQLVARCHAR, Trim$(VLTvCableTransaccionPago), "", ""
    If VGTipoEjecucion% = CGReverso% Then
        VGReversoLoger$ = "S"
    End If
    'PMPasoValoresATX VGSqlConn, "@i_psource_date", 0, SQLVARCHAR, Format$(Date, "yymmdd"), "", ""    'VLTvCableFecha
    PMPasoValoresATX VGSqlConn, "@i_psource_date", 0, SQLVARCHAR, Mid(VGFechaReal, 9, 2) & Mid(VGFechaReal, 1, 2) & Mid(VGFechaReal, 4, 2), "", ""
    PMPasoValoresATX VGSqlConn, "@i_psource_time", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_psource_channel", 0, SQLVARCHAR, Trim$("01"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_ciudad", 0, SQLVARCHAR, Trim$(VLTvCableLocalidad), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_cuenta", 0, SQLVARCHAR, Trim$(Ref.Text), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pmonto", 0, SQLVARCHAR, Trim$(VLValorTvCableOriginal), "", ""
    PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Nombre, "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, (valor.Text), "Valor", ""
    PMPasoValoresATX VGSqlConn, "@o_minimo", 1, SQLMONEY, (valor.Text), "Valor", ""
    PMPasoValoresATX VGSqlConn, "@o_costo", 1, SQLMONEY, (valor.Text), "Valor", ""
    PMPasoValoresATX VGSqlConn, "@o_fecha_tope", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "fecha tope", ""
    PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
    PMPasoValoresATX VGSqlConn, "@o_fecha_fac", 1, SQLVARCHAR, Nombre, "fechafac", ""
    PMPasoValoresATX VGSqlConn, "@o_inddb", 1, SQLVARCHAR, Nombre, "inddb", ""
    PMPasoValoresATX VGSqlConn, "@o_referencia", 1, SQLVARCHAR, Nombre, "referencia", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, (VTIndicadorSum), "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
    PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (VLChq_com), "Mensaje", ""
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "XXXXXXXXXXXXXXXXXXXX", "AutorizacionSRI", ""
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "XXXXXXXXXXXXXXXXXXXX", "fecvensri", ""
    PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, "XXXXXXXXXXXXXXXXXXXX", "notaventa", ""
    PMPasoValoresATX VGSqlConn, "@o_campo_adic1", 1, SQLVARCHAR, "X", "oadic1", ""
    PMPasoValoresATX VGSqlConn, "@o_campo_adic2", 1, SQLVARCHAR, "X", "oadic2", ""
    PMPasoValoresATX VGSqlConn, "@o_campo_adic3", 1, SQLINT4, 0, "oadic3", ""
    PMPasoValoresATX VGSqlConn, "@o_campo_adic4", 1, SQLINT4, 0, "oadic4", ""
    PMPasoValoresATX VGSqlConn, "@i_pfecha_contable", 0, SQLVARCHAR, VLTvCableFechaContable, "", ""
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_pago_tvcable", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLTransmitir_CPS_TVCABLE_pago = True
        Dim vtma(2, 50) As String
        VTResult% = FMMapeaMatrizATX(VGSqlConn, vtma())
        VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 6), "mm/dd/yyyy")
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 10)
        VLHorario = FMRetParamATX(VGSqlConn, 12)
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
        End If
        If VLconexion <> "F" Then
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_CPS_TVCABLE_pago = True
            VLCambio% = False
        End If
    Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_CPS_TVCABLE_pago = False
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 10)
        VTIndicadorSum = FMRetParamATX(VGSqlConn, 11)
        PMChequeaATX VGSqlConn
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir_CPS_TVCABLE_pago = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    
     'smerino
    If FLTransmitir_CPS_TVCABLE_pago = True Then
        'JPM Lectora de Billetes -->
        If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
          'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
          Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
          lectoraBill.Limpiar
        End If
        '<-- JPM Lectora de Billetes
        Call PLFactura
    End If
    
    If VGTipoEjecucion% <> CGReverso% Then
        If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            'PMGrabaDesglose VLTrn, Efe.Text, VLCambio%
            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
        VLTsnTemp = VGTSN
        'PMEgresoEfectivo Efe.ValueReal, VLTrn
        PMEgresoEfectivo SGUsar, VLTrn
    End If
    If SGAcumulado < 0 Then
        VLDescargar = 1
    End If
    
End Function

Function FLBuscarItem(VLELemento As String) As String
    Dim i As Integer
    Dim hallado As Boolean
    i = 1
    hallado = False
    Do While i < 59 And Not hallado
        If vtmatrizcps(0, i) = Trim$(VLELemento) Then
            hallado = True
        Else
            i = i + 1
        End If
    Loop
    If hallado Then
        FLBuscarItem = vtmatrizcps(1, i)
    Else
        FLBuscarItem = ""
    End If
End Function


'<--hy-19-enero-2007
Function FLConsPacifictelNuevo() As Boolean
Dim VLCedRuc As String
Dim VLNumero As String
Dim VLComision As String


If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
   If Trim(Me.serpac.Text) = "" Then
       MsgBox "Debe ingresar Area, para la Consulta", vbCritical + vbOKOnly, "Atx"
       FLConsPacifictelNuevo = False
       Exit Function
    End If
    
    If Trim(Me.Ref.Text) = "" Then
       MsgBox "Debe ingresar Telefono, para la Consulta", vbCritical + vbOKOnly, "Atx"
       FLConsPacifictelNuevo = False
       Exit Function
    End If
Else
    '-->lfcm 29-julio-2008
    If Trim(Me.serpac.Text) = "" Then
      MsgBox "Debe seleccionar un Tipo de Servicio de Cobro, para la Consulta", vbCritical + vbOKOnly, "Atx"
      FLConsPacifictelNuevo = False
      Exit Function
   End If
   '--<lfcm 29-julio-2008
End If
   
   
'CODIGO DE OPERACION
'--ini dpereirv
Dim VLarreglo(30) As String
PMChequea VGSqlConn&
PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CSCNTF"
PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
  VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
  VLOperacion = LTrim(RTrim(Trim(VLarreglo(4))))
Else
  VLOperacion = ""
End If
PMChequea VGSqlConn&
'--fin dpereirv
   
Pago_Val.Text = "0"
PMInicioTransaccion
'VLEfe_com = 0
VLComision = 0
PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3792", "Trn", ""
PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "C", "", ""
PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT2, Trim(Me.Servicio.Text), "servicio", ""
PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, "0", "comision", ""
PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "Autorizacion", ""
PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "Fecha Ven", ""
PMPasoValoresATX VGSqlConn, "@o_costo", 1, SQLMONEY, "0", "costo", ""
'smerino
PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
'smerino

If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_pago_pacifictel", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
    VLComision = FMRetParamATX(VGSqlConn, 1)
    VLautoriSri = Trim(FMRetParamATX(VGSqlConn, 2))
    VLFecvenSRI = Trim(FMRetParamATX(VGSqlConn, 3))
    VlbaseImp = FMRetParamATX(VGSqlConn, 5) 'smerino
    VLiva = FMRetParamATX(VGSqlConn, 6) 'smerino
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLComision > 0 Then
        VGCom_aux = FMDevuelveComisionReal(CDbl(VLComision), False, 51)
        If VGCom_aux <> CDbl(VLComision) And VGCom_aux > 0 Then
            VGComision_original = VLComision
            VLComision = VGCom_aux
        Else
            VGComision_original = VLComision
        End If
    End If
    'LBP Fin RECA-CC-SGC00025869
    
End If

If VLComision = 0 Then
    Comision.Enabled = False
Else
    Comision.Enabled = True
End If
PMFinTransaccion



VLCedRuc = "0000000000000000"
'VLNumero = Trim(Proceso.Text) + "   " + Format(Trim(Ref.Text), "000000000#")

'VLOperacion = "ABF"
If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
    VLHoraProceso = Format$(Date, "mm/dd/yyyy") + Format$(Time(), "hh:mm:ss")

    VLFechaEnvio = LTrim(RTrim(Mid(VLHoraProceso, 7, 4) + Mid(VLHoraProceso, 1, 2) + _
                        Mid(VLHoraProceso, 4, 2)))
                        
    VLHoraEnvio = LTrim(RTrim(Mid(VLHoraProceso, 11, 2) + _
                    Mid(VLHoraProceso, 14, 2) + Mid(VLHoraProceso, 17, 2)))
                        
    'VLOperacion = "ABF"
    If Trim(serpac.Text) = "99" Then VLOperacion = "RES"
    If VLOperacion = "ABF" Then        'Numero Telefonico
       VLNumero = Trim(serpac.Text) + Mid("     ", 1, 5 - Len(Trim(serpac.Text))) + Format(Trim(Ref.Text), "000000000#")
    ElseIf VLOperacion = "ANU" Then    'Numero de Contrato
       VLNumero = Format(Trim(Ref.Text), "00000000000000#")
    ElseIf VLOperacion = "CIC" Then    'Numero de Recibo
       VLNumero = Format(Trim(Ref.Text), "00000000000000#")
    ElseIf VLOperacion = "RES" Then    'Numero de Reserva
       VLNumero = Trim(serpac.Text) + "   " + Format(Trim(Ref.Text), "000000000#")
    End If
Else
VLOperacion = Me.serpac.Text
If Trim(Proceso.Text) = "99" Then VLOperacion = "RES"
If VLOperacion = "ABF" Then        'Numero Telefonico
   'VLNumero = Trim(Proceso.Text) + "   " + Format(Trim(Ref.Text), "000000000#")
   VLNumero = Trim(Proceso.Text) + Mid("     ", 1, 5 - Len(Trim(Proceso.Text))) + Format(Trim(Ref.Text), "000000000#")
ElseIf VLOperacion = "ANU" Then    'Numero de Contrato
   VLNumero = Format(Trim(Ref.Text), "00000000000000#")
ElseIf VLOperacion = "CIC" Then    'Numero de Recibo
   VLNumero = Format(Trim(Ref.Text), "00000000000000#")
ElseIf VLOperacion = "RES" Then    'Numero de Reserva
   VLNumero = Trim(Proceso.Text) + "   " + Format(Trim(Ref.Text), "000000000#")
End If
End If

'ANBE 052807 Consulta de Pacifictel con Abono
PMInicioTransaccion
  PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "62041", "Trn", ""
  PMPasoValoresATX VGSqlConn, "@i_pfechenvio", 0, SQLINT4, VLFechaEnvio, "Pfechenvio", ""
  PMPasoValoresATX VGSqlConn, "@i_phorenvio", 0, SQLVARCHAR, VLHoraEnvio, "Phorenvio", ""
  PMPasoValoresATX VGSqlConn, "@i_ptipotrn", 0, SQLVARCHAR, "C", "Ptipotrn", ""
  PMPasoValoresATX VGSqlConn, "@i_poperacion", 0, SQLVARCHAR, VLOperacion, "Poperacion", ""
  PMPasoValoresATX VGSqlConn, "@i_pcedruc", 0, SQLVARCHAR, VLCedRuc, "Pcedruc", ""
  PMPasoValoresATX VGSqlConn, "@i_pnumsoltra", 0, SQLVARCHAR, VLNumero, "Ptelf", ""
 
  If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_cons_pacifictel", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
    ReDim psRetorno(1, 50)
    FMMapeaMatriz VGSqlConn, psRetorno
    Nombre.Text = psRetorno(1, 11)
    valor.Text = CDbl(psRetorno(1, 22)) / 100
    VLFechaEmiCNT = psRetorno(1, 15)
    VLFechaVenc = Mid(psRetorno(1, 15), 5, 2) & "/" & Mid(psRetorno(1, 15), 7, 2) & "/" & Mid(psRetorno(1, 15), 1, 4)
    Fecha.Text = VLFechaVenc
    VlMes = psRetorno(1, 20)
    VLFechFac = psRetorno(1, 20)
    VLVMes = CDbl(psRetorno(1, 24)) / 100
    VLVAcum = CDbl(psRetorno(1, 25)) / 100
    VLVTotal = CDbl(psRetorno(1, 22)) / 100
    Select Case Mid$(VlMes, 5, 2)
      Case "01": VlMes = " ENE" + Mid$(VlMes, 1, 4)
      Case "02": VlMes = " FEB" + Mid$(VlMes, 1, 4)
      Case "03": VlMes = " MAR" + Mid$(VlMes, 1, 4)
      Case "04": VlMes = " ABR" + Mid$(VlMes, 1, 4)
      Case "05": VlMes = " MAY" + Mid$(VlMes, 1, 4)
      Case "06": VlMes = " JUN" + Mid$(VlMes, 1, 4)
      Case "07": VlMes = " JUL" + Mid$(VlMes, 1, 4)
      Case "08": VlMes = " AGO" + Mid$(VlMes, 1, 4)
      Case "09": VlMes = " SEP" + Mid$(VlMes, 1, 4)
      Case "10": VlMes = " OCT" + Mid$(VlMes, 1, 4)
      Case "11": VlMes = " NOV" + Mid$(VlMes, 1, 4)
      Case "12": VlMes = " DIC" + Mid$(VlMes, 1, 4)
    End Select
    'lblValor(9).Visible = True
    lblValor(0).Visible = True
    txtValFec.Text = "0.00"
    txtValDeu.Text = "0.00"
    
    'gmartillo hasta que CNT confirme
'    If VLVMes > 0 Then
'      txtValFec.Visible = True
'      txtValFec.Text = VLVMes
'      lblValor(10).Visible = True
'    End If
'    If VLVAcum > 0 Then
'      txtValDeu.Visible = True
'      txtValDeu.Text = VLVAcum
'      lblValor(11).Visible = True
'    End If
    txtfactura.Text = psRetorno(1, 18)
    VLFacturaCNT = Format(txtfactura.Text, "0000000000000") 'gmartillo
    txtContrato.Text = psRetorno(1, 4)
    Comision.Text = VLComision
    'VLValSaldoCredito = psRetorno(1, 22)
    FLConsPacifictelNuevo = True
        'INI - DAPV CNT-MOVIL 09NOV2012
    If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then
        Total.Text = CCur(Pago_Val.Text) + CCur(Comision.Text)
        efe.Enabled = True      ' habilito controles
        Loc.Enabled = True
        CantChq.Enabled = True
        CboTipCta.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False   '
        Proceso.Enabled = False
        serpac.Enabled = False
        Ref.Enabled = False
        If FMCCurATX((Minimo.Text)) > 0 Then
            Minimo.Visible = True
            lblValor(2).Visible = True
        End If
        If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
        Else
           Total.Text = FMCCurATX(valor.Text) + FMCCurATX(Comision.Text)
        End If
        cmbTid.Enabled = True
        txtCedula.Enabled = True
        efe.SetFocus
        DoEvents
    End If
    'FIN - DAPV CNT-MOVIL 09NOV2012

  Else
    FLConsPacifictelNuevo = False
  End If
  PMChequeaATX VGSqlConn
  PMFinTransaccion
End Function

Function FLConsPacifictel() As Integer
    i% = FMBuscaMatrizSwitch("617", "C")
    VLemp_switch = VGMatrizSwitch(2, i%)
    VLtrn_switch = VGMatrizSwitch(3, i%)
    VGArregloSwitch(1) = Format$(Date, "mm/dd/yyyy") + Format$(Time(), "hh:mm:ss")
    VGArregloSwitch(3) = Format(Now, "hhmmss") 'SECUENCIAL FMV 11292004
    VLHoraProceso = VGArregloSwitch(1)
    VLFechaProceso = VGArregloSwitch(2)
    SGSecTrn$ = VGArregloSwitch(3)
    VLSecTrnCorr = 0
    tDatosEmpresa$ = VGArregloSwitch(5)
    VLDatosEmpresa() = Split(tDatosEmpresa$, ";", -1, 1)
    VLCodCaj = VLDatosEmpresa(0)
    VLEmpruc = VLDatosEmpresa(1)
    VLEmpRes = VLDatosEmpresa(2)
    VLEmpaut = VLDatosEmpresa(3)
    VLEmpval = VLDatosEmpresa(4)
    VLEmpDir = VLDatosEmpresa(5)
    Proceso.Enabled = False
    Ref.Enabled = False
    FCC51.Enabled = False
    
    VLFechaEnvio = LTrim(RTrim(Mid(VLHoraProceso, 7, 4) + Mid(VLHoraProceso, 1, 2) + _
                        Mid(VLHoraProceso, 4, 2)))
                        
    VLHoraEnvio = LTrim(RTrim(Mid(VLHoraProceso, 11, 2) + _
                        Mid(VLHoraProceso, 14, 2) + Mid(VLHoraProceso, 17, 2)))
    
   If VLPABOP = "S" Then 'ANBE 052207  PAGOS EN ABONOS
     FLConsPacifictel = FLConsPacifictelNuevo
     Exit Function
   End If
    
    PMInicioTransaccion
    'Total.Text = "0"
    'TotPago.Text = "0"
    
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3944", "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechenvio", 0, SQLVARCHAR, VLFechaEnvio, "Pfechenvio", ""
    PMPasoValoresATX VGSqlConn, "@i_phorenvio", 0, SQLVARCHAR, VLHoraEnvio, "Phorenvio", ""
    PMPasoValoresATX VGSqlConn, "@i_pregiontelf", 0, SQLCHAR, Proceso.Text, "Pregiontelf", ""
    PMPasoValoresATX VGSqlConn, "@i_ptelf", 0, SQLVARCHAR, Ref.Text, "Ptelf", ""

    
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV", "cob_procesador", "sp_cons_emetel_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        ReDim psRetorno(2, 200)
        FMMapeaMatriz VGSqlConn, psRetorno
        
        Nombre.Text = psRetorno(1, 10)
        valor.Text = CDbl(psRetorno(1, 26)) / 100
        VlMes = psRetorno(1, 20)
        
        Select Case Mid$(VlMes, 5, 2)
        Case "01"
            VlMes = " ENE" + Mid$(VlMes, 1, 4)
        Case "02"
            VlMes = " FEB" + Mid$(VlMes, 1, 4)
        Case "03"
            VlMes = " MAR" + Mid$(VlMes, 1, 4)
        Case "04"
            VlMes = " ABR" + Mid$(VlMes, 1, 4)
        Case "05"
            VlMes = " MAY" + Mid$(VlMes, 1, 4)
        Case "06"
            VlMes = " JUN" + Mid$(VlMes, 1, 4)
        Case "07"
            VlMes = " JUL" + Mid$(VlMes, 1, 4)
        Case "08"
            VlMes = " AGO" + Mid$(VlMes, 1, 4)
        Case "09"
            VlMes = " SEP" + Mid$(VlMes, 1, 4)
        Case "10"
            VlMes = " OCT" + Mid$(VlMes, 1, 4)
        Case "11"
            VlMes = " NOV" + Mid$(VlMes, 1, 4)
        Case "12"
            VlMes = " DIC" + Mid$(VlMes, 1, 4)
        End Select
        
        txtfactura.Text = psRetorno(1, 18)
        txtContrato.Text = psRetorno(1, 21)
        VLValSaldoCredito = psRetorno(1, 27)
        
'
'psRetorno(1) = FMRetParamATX(VGSqlConn, 1)   'Pcodigo_banco
'psRetorno(2) = FMRetParamATX(VGSqlConn, 2)   'Pcodigo_transaccion
'psRetorno(3) = FMRetParamATX(VGSqlConn, 3)   'Pcodigo_seguridad
'psRetorno(4) = FMRetParamATX(VGSqlConn, 4)   'Psecuencial_transaccion
'psRetorno(5) = FMRetParamATX(VGSqlConn, 5)   'Pfecha_envio
'psRetorno(6) = FMRetParamATX(VGSqlConn, 6)   'Phora_envio
'psRetorno(7) = FMRetParamATX(VGSqlConn, 7)   'Pcodigo_retorno
'psRetorno(8) = FMRetParamATX(VGSqlConn, 8)   'Pregion_telefono
'psRetorno(9) = FMRetParamATX(VGSqlConn, 9)   'Ptelefono
'psRetorno(10) = FMRetParamATX(VGSqlConn, 10)   'Pnombre
'psRetorno(11) = FMRetParamATX(VGSqlConn, 11)   'Pdireccion
'psRetorno(12) = FMRetParamATX(VGSqlConn, 12)   'Plectura_inicial
'psRetorno(13) = FMRetParamATX(VGSqlConn, 13)   'Plectura_final
'psRetorno(14) = FMRetParamATX(VGSqlConn, 14)   'Pperiodo_inicial
'psRetorno(15) = FMRetParamATX(VGSqlConn, 15)   'Pperiodo_final
'psRetorno(16) = FMRetParamATX(VGSqlConn, 16)   'Pcategoria
'psRetorno(17) = FMRetParamATX(VGSqlConn, 17)   'Ppbx
'psRetorno(18) = FMRetParamATX(VGSqlConn, 18)   'Pnumero_factura
'psRetorno(19) = FMRetParamATX(VGSqlConn, 19)   'Pcodigo_factura_sri
'psRetorno(20) = FMRetParamATX(VGSqlConn, 20)   'Pfecha_planilla
'psRetorno(21) = FMRetParamATX(VGSqlConn, 21)   'Pcontrato_telefono
'psRetorno(22) = FMRetParamATX(VGSqlConn, 22)   'Pnum_lineas_sec
'psRetorno(23) = FMRetParamATX(VGSqlConn, 23)   'Pmensaje_proveedor
'psRetorno(24) = FMRetParamATX(VGSqlConn, 24)   'Pvalor_ultima_factura
'psRetorno(25) = FMRetParamATX(VGSqlConn, 25)   'Pvalor_acumulado
'psRetorno(26) = FMRetParamATX(VGSqlConn, 26)   'Pvalor_pago
'psRetorno(27) = FMRetParamATX(VGSqlConn, 27)   'Psaldo_credito
'psRetorno(28) = FMRetParamATX(VGSqlConn, 28)   'Pestado_planilla
'psRetorno(29) = FMRetParamATX(VGSqlConn, 29)   'Prubros
        
        FLConsPacifictel = True
    Else
        FLConsPacifictel = False
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function

Function FLPagoPacifictel() As Integer
    
    'VGTrn = VLTrn
    SalvaTsn% = VGTSN%
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    
    If VLCTGP = "S" Then
    'Si esta activada la contingencia
    'entonces esta fuera de linea
        VLOnLine = "N"
    Else
        VLOnLine = "S"
    End If
   
   If VLPABOP = "S" Then 'ANBE 052207  PAGOS EN ABONOS
     FLPagoPacifictel = FLPagoPacifictelNuevo
     Exit Function
   End If
   
PMInicioTransaccion
   
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, VLTrn, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Mon", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Valch", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLCHAR, Cta.ClipText, "Cuenta", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLCHAR, Trim(Comprob), "Comprob", ""
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "Cant_chq", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "T", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_region_telefono", 0, SQLCHAR, Proceso.Text, "Region_telefono", ""
    PMPasoValoresATX VGSqlConn, "@i_telefono", 0, SQLVARCHAR, Trim(Ref), "Telefono", ""
    PMPasoValoresATX VGSqlConn, "@i_num_factura", 0, SQLVARCHAR, txtfactura.Text, "Num_factura", ""
    PMPasoValoresATX VGSqlConn, "@i_contrato_telefono", 0, SQLVARCHAR, txtContrato.Text, "Contrato_telefono", ""
    PMPasoValoresATX VGSqlConn, "@i_valor", 0, SQLMONEY, efe.Text, "Valor", ""
    'PMPasoValoresATX VGSqlConn, "@i_valor", 0, SQLMONEY, "2293", "Valor", ""
    PMPasoValoresATX VGSqlConn, "@i_producto", 0, SQLVARCHAR, CboTipCta.Text, "Producto", ""
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (Comision.Text), "Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_online", 0, SQLCHAR, VLOnLine, "Online", "" 'Chequear Valor
    If VLCTGP = "S" Then
        PMPasoValoresATX VGSqlConn, "@i_saldo_credito", 0, SQLMONEY, "0.00", "SaldoCredito", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_saldo_credito", 0, SQLMONEY, (VLValSaldoCredito), "SaldoCredito", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_piloto", 0, SQLCHAR, "S", "Piloto", ""
    PMPasoValoresATX VGSqlConn, "@i_fecha_fac", 0, SQLVARCHAR, Mid(VlMes, 2, 7), "Fechafact", ""
    PMPasoValoresATX VGSqlConn, "@i_fecha_pac", 0, SQLVARCHAR, Mid$(VGArregloSwitch(2), 7, 4) + Mid$(VGArregloSwitch(2), 1, 2) + Mid$(VGArregloSwitch(2), 4, 2), "Horapac", ""
    PMPasoValoresATX VGSqlConn, "@i_hora_pac", 0, SQLVARCHAR, Format$(Mid$(VGArregloSwitch(1), 11, 8), "hhmmss"), "Fechapac", ""
    
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", "" 'TPE Solo se incluye para el Reverso.
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_area", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
    PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, (Reten.Text), "Retencion", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
    'ANBE 060607 para impresion de reverso
    PMPasoValoresATX VGSqlConn, "@i_fechavenc", 0, SQLVARCHAR, VLFechaVenc, "fechavenc", ""
    PMPasoValoresATX VGSqlConn, "@i_vmes", 0, SQLVARCHAR, 0, "vmes", ""
    PMPasoValoresATX VGSqlConn, "@i_vacum", 0, SQLVARCHAR, 0, "vacum", ""
    PMPasoValoresATX VGSqlConn, "@i_vtotal", 0, SQLVARCHAR, 0, "vtotal", ""
    PMPasoValoresATX VGSqlConn, "@i_costo", 0, SQLMONEY, 0, "vchq_com", ""
    PMPasoValoresATX VGSqlConn, "@i_che_com", 0, SQLMONEY, (VLChq_com), "comisiom_che", ""
    
    PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Space(30), "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, "0", "Saldo", ""
    PMPasoValoresATX VGSqlConn, "@o_mensaje", 1, SQLCHAR, Space(200), "Mensaje", ""
    PMPasoValoresATX VGSqlConn, "@o_num_factura", 1, SQLVARCHAR, Space(3), "Factura", ""
    PMPasoValoresATX VGSqlConn, "@o_contrato_telefono", 1, SQLVARCHAR, Space(13), "Contrato", ""
    PMPasoValoresATX VGSqlConn, "@o_fecha_atx", 1, SQLVARCHAR, "01/01/2000", "Fecha ATX", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SSN", ""
    PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, "0", "Consulta", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, Space(1), "Horario", ""
    PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, "0", "comision", ""
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "Fecha Ven", ""
    'Parametros Virtuales
    'If VGTipoEjecucion% <> CGReverso% Then
    '    PMPasoValoresATX VGSqlConn, "@o_ptipotransaccion", 0, SQLCHAR, "P", "Ptipotransaccion", ""
    'Else
    '    PMPasoValoresATX VGSqlConn, "@o_ptipotransaccion", 0, SQLCHAR, "R", "Ptipotransaccion", ""
    'End If
    PMPasoValoresATX VGSqlConn, "@i_pcredgenerado", 0, SQLFLT8, "0", "Ptipotransaccion", ""
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV", "cob_procesador", "sp_pago_emetel_rc", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        ReDim psRetorno(1, 100)
        FMMapeaMatriz VGSqlConn, psRetorno
        
        'TPE ------> Sumadora
        VTIndicadorSum = 1
        PMIniciaRegSum
        '<-----
        PMChequeaATX VGSqlConn
        'PMTotalesBranch "51"
        FLPagoPacifictel = True
        VLCambio% = False
    Else
        VLCambio% = True
        FLPagoPacifictel = False
        VTIndicadorSum = 0     'Para que no grabe desglose
        PMFinTransaccion
        PMChequeaATX VGSqlConn
    End If
    
'''    PMChequeaATX VGSqlConn
'''    If FMRetStatusATX(VGSqlConn) <> 0 Then
'''        FLPagoPacifictel = False
'''        VLCambio% = True
'''        If FLPagoPacifictel Then
'''            VTIndicadorSum = 0
'''        End If
'''    End If

PMFinTransaccion

'''    'Sumadora -->
'''
'''    If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
'''        If (VTIndicadorSum = 1 _
'''        And (Trim$(VGStatusCon) = "A" _
'''        Or Trim$(VGStatusCon) = "")) Then
'''            SGPrimeraVez = 0     ' ya no es primera vez
'''            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
'''            If VLCambio% = True Then
'''                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
'''            End If
'''            SGActual = 1  'seteo Variable para borrar desglose
'''        ElseIf VTIndicadorSum = 0 Then
'''            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
'''        End If
'''    ElseIf VTIndicadorSum = 1 Then                'Por REVERSO
'''        PMEgresoEfectivo SGUsar, VLTrn ', VGSSNCorr&
'''    End If
'''    '<-----

'psRetorno(1) = FMRetParamATX(VGSqlConn, 1)   'Nombre
'psRetorno(2) = FMRetParamATX(VGSqlConn, 2)   'Saldo
'psRetorno(3) = FMRetParamATX(VGSqlConn, 3)   'Mensaje
'psRetorno(4) = FMRetParamATX(VGSqlConn, 4)   'Num_factura
'psRetorno(5) = FMRetParamATX(VGSqlConn, 5)   'Contrato_telefono
'psRetorno(6) = FMRetParamATX(VGSqlConn, 6)   'Fecha_atx
'psRetorno(7) = FMRetParamATX(VGSqlConn, 7)   'Ssn
'psRetorno(8) = FMRetParamATX(VGSqlConn, 8)   'Consulta
'psRetorno(9) = FMRetParamATX(VGSqlConn, 9)   'Horario
'psRetorno(10) = FMRetParamATX(VGSqlConn, 10)   'Comisionven
'psRetorno(11) = FMRetParamATX(VGSqlConn, 11)   'Autorisri
'psRetorno(12) = FMRetParamATX(VGSqlConn, 12)   'Fecvensri
'psRetorno(13) = FMRetParamATX(VGSqlConn, 13)   'Pcodigo_banco
'psRetorno(14) = FMRetParamATX(VGSqlConn, 14)   'Pcodigo_transaccion
'psRetorno(15) = FMRetParamATX(VGSqlConn, 15)   'Pcodigo_seguridad
'psRetorno(16) = FMRetParamATX(VGSqlConn, 16)   'Psecuencial_transaccion
'psRetorno(17) = FMRetParamATX(VGSqlConn, 17)   'Pfecha_envio
'psRetorno(18) = FMRetParamATX(VGSqlConn, 18)   'Phora_envio
'psRetorno(19) = FMRetParamATX(VGSqlConn, 19)   'Pcodigo_retorno
'psRetorno(20) = FMRetParamATX(VGSqlConn, 20)   'Pregion_telefono
'psRetorno(21) = FMRetParamATX(VGSqlConn, 21)   'Ptelefono
'psRetorno(22) = FMRetParamATX(VGSqlConn, 22)   'Pnombre
'psRetorno(23) = FMRetParamATX(VGSqlConn, 23)   'Pdireccion
'psRetorno(24) = FMRetParamATX(VGSqlConn, 24)   'Plectura_inicial
'psRetorno(25) = FMRetParamATX(VGSqlConn, 25)   'Plectura_final
'psRetorno(26) = FMRetParamATX(VGSqlConn, 26)   'Pperiodo_inicial
'psRetorno(27) = FMRetParamATX(VGSqlConn, 27)   'Pperiodo_final
'psRetorno(28) = FMRetParamATX(VGSqlConn, 28)   'Pcategoria
'psRetorno(29) = FMRetParamATX(VGSqlConn, 29)   'Ppbx
'psRetorno(30) = FMRetParamATX(VGSqlConn, 30)   'Pnumero_factura
'psRetorno(31) = FMRetParamATX(VGSqlConn, 31)   'Pcodigo_factura_sri
'psRetorno(32) = FMRetParamATX(VGSqlConn, 32)   'Pfecha_planilla
'psRetorno(33) = FMRetParamATX(VGSqlConn, 33)   'Pcontrato_telefono
'psRetorno(34) = FMRetParamATX(VGSqlConn, 34)   'Pnum_lineas_sec
'psRetorno(35) = FMRetParamATX(VGSqlConn, 35)   'Pmensaje_proveedor
'psRetorno(36) = FMRetParamATX(VGSqlConn, 36)   'Pvalor_ultima_factura
'psRetorno(37) = FMRetParamATX(VGSqlConn, 37)   'Pvalor_acumulado
'psRetorno(38) = FMRetParamATX(VGSqlConn, 38)   'Pvalor_pago
'psRetorno(39) = FMRetParamATX(VGSqlConn, 39)   'Psaldo_credito
'psRetorno(40) = FMRetParamATX(VGSqlConn, 40)   'Pvalor_creditos
'psRetorno(41) = FMRetParamATX(VGSqlConn, 41)   'Prubros
End Function

Function FLPagoPacifictelNuevo() As Boolean

Dim VLCedRuc As String
Dim VLNumero As String

'ANBE para cambio de conexion en nuevo CPS
Total.Text = CCur(Pago_Val.Text) + CCur(Comision.Text)  'ANBE
VLCedRuc = "0000000000000000"

If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
    VLNumero = Trim(serpac.Text) + "   " + Format(Trim(Ref.Text), "000000000#")
    If Trim(serpac.Text) = "99" Then VLOperacion = "RES"
    If VLOperacion = "ABF" Then        'Numero Telefonico
       VLNumero = Trim(serpac.Text) + Mid("     ", 1, 5 - Len(Trim(serpac.Text))) + Format(Trim(Ref.Text), "000000000#")
    ElseIf VLOperacion = "ANU" Then    'Numero de Contrato
       VLNumero = Format(Trim(Ref.Text), "00000000000000#")
    ElseIf VLOperacion = "CIC" Then    'Numero de Recibo
       VLNumero = Format(Trim(Ref.Text), "00000000000000#")
    ElseIf VLOperacion = "RES" Then    'Numero de Reserva
       VLNumero = Trim(serpac.Text) + "   " + Format(Trim(Ref.Text), "000000000#")
    End If
Else
VLNumero = Trim(Proceso.Text) + "   " + Format(Trim(Ref.Text), "000000000#")
'VLOperacion = "ABF"
VLOperacion = Me.serpac.Text   'lfcm 29-julio-2008
If Trim(Proceso.Text) = "99" Then VLOperacion = "RES"

If VLOperacion = "ABF" Then        'Numero Telefonico
   'VLNumero = Trim(Proceso.Text) + "   " + Format(Trim(Ref.Text), "000000000#")
   VLNumero = Trim(Proceso.Text) + Mid("     ", 1, 5 - Len(Trim(Proceso.Text))) + Format(Trim(Ref.Text), "000000000#")
ElseIf VLOperacion = "ANU" Then    'Numero de Contrato
   VLNumero = Format(Trim(Ref.Text), "00000000000000#")
ElseIf VLOperacion = "CIC" Then    'Numero de Recibo
   VLNumero = Format(Trim(Ref.Text), "00000000000000#")
ElseIf VLOperacion = "RES" Then    'Numero de Reserva
   VLNumero = Trim(Proceso.Text) + "   " + Format(Trim(Ref.Text), "000000000#")
End If
End If

PMInicioTransaccion
  PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "62042", "Trn", ""  'VLTrn
  PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Mon", ""
  If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Proceso.Text, "Empresa", ""
  Else
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
  End If
  PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Valch", ""
  PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLCHAR, Cta.ClipText, "Cuenta", ""
  PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
  PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "Cant_chq", ""
  PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
  PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "T", "Opcion", ""
  PMPasoValoresATX VGSqlConn, "@i_telefono", 0, SQLVARCHAR, Trim(Ref), "Telefono", ""
  PMPasoValoresATX VGSqlConn, "@i_contrato_telefono", 0, SQLVARCHAR, txtContrato.Text, "Contrato_telefono", ""
  PMPasoValoresATX VGSqlConn, "@i_valor", 0, SQLMONEY, efe.Text, "Valor", ""
  PMPasoValoresATX VGSqlConn, "@i_valor_total", 0, SQLMONEY, valor.Text, "ValorTotal", ""
  PMPasoValoresATX VGSqlConn, "@i_producto", 0, SQLVARCHAR, CboTipCta.Text, "Producto", ""
  PMPasoValoresATX VGSqlConn, "@i_fecha_fac", 0, SQLVARCHAR, VLFechFac, "Fechafact", ""
  If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
    PMPasoValoresATX VGSqlConn, "@i_area", 0, SQLVARCHAR, (serpac.Text), "Proceso", ""
  Else
    PMPasoValoresATX VGSqlConn, "@i_area", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
  End If
  PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (VLEfe_com), "Comision_efe", ""
  PMPasoValoresATX VGSqlConn, "@i_costo", 0, SQLMONEY, (VLChq_com), "comisiom_che", ""

  PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLCHAR, Trim(Comprob), "Comprob", ""
  PMPasoValoresATX VGSqlConn, "@i_num_factura", 0, SQLVARCHAR, txtfactura.Text, "Num_factura", ""
  PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
  PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
  PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", "" 'TPE Solo se incluye para el Reverso.
    If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_serpac), "DescProc", ""        'Para recupar en Reverso
  Else
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
  End If
  PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, (Reten.Text), "Retencion", ""
  PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
  PMPasoValoresATX VGSqlConn, "@i_che_com", 0, SQLMONEY, (VLChq_com), "comisiom_che", ""
  
  PMPasoValoresATX VGSqlConn, "@i_pfechenvio", 0, SQLINT4, Format(Date, "YYYYMMDD"), "Fechapac", ""  ' ame 02/08/2010
  'PMPasoValoresATX VGSqlConn, "@i_pfechenvio", 0, SQLINT4, Mid$(VGArregloSwitch(2), 7, 4) + Mid$(VGArregloSwitch(2), 1, 2) + Mid$(VGArregloSwitch(2), 4, 2), "Fechapac", ""
  PMPasoValoresATX VGSqlConn, "@i_phorenvio", 0, SQLVARCHAR, Format$(Mid$(VGArregloSwitch(1), 11, 8), "hhmmss"), "Horapac", ""
  PMPasoValoresATX VGSqlConn, "@i_ptipotrn", 0, SQLVARCHAR, "2003", "i_ptipotrn", ""  'Codigo trn pacifictel
  PMPasoValoresATX VGSqlConn, "@i_poperacion", 0, SQLVARCHAR, VLOperacion, "Poperacion", ""
    If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
    PMPasoValoresATX VGSqlConn, "@i_poperacion2", 0, SQLVARCHAR, Me.sal_proc.Caption, "Poperacion2", ""    'lfcm 04-agosto-2008
  Else
    PMPasoValoresATX VGSqlConn, "@i_poperacion2", 0, SQLVARCHAR, Me.sal_serpac.Caption, "Poperacion2", ""    'lfcm 04-agosto-2008
  End If
  PMPasoValoresATX VGSqlConn, "@i_pcedruc", 0, SQLVARCHAR, VLCedRuc, "Pcedruc", ""
  PMPasoValoresATX VGSqlConn, "@i_pnumsoltra", 0, SQLVARCHAR, VLNumero, "Pnumsoltra", ""
  PMPasoValoresATX VGSqlConn, "@i_pvalor", 0, SQLVARCHAR, Pago_Val.Text, "Pvalor", ""
  
  If VGTipoEjecucion = CGNormal% Then
    PMPasoValoresATX VGSqlConn, "@i_pnumdoc", 0, SQLVARCHAR, txtfactura.Text, "Pnumdoc", ""
  Else  'si es reverso
    pnumdoc$ = Format(txtContrato.Text, "00000000000000#")
    PMPasoValoresATX VGSqlConn, "@i_pnumdoc", 0, SQLVARCHAR, pnumdoc$, "Pnumdoc", "", True
  End If
  PMPasoValoresATX VGSqlConn, "@i_fechavenc", 0, SQLVARCHAR, VLFechaVenc, "fechavenc", ""
  PMPasoValoresATX VGSqlConn, "@i_vmes", 0, SQLVARCHAR, VLVMes, "vmes", ""
  PMPasoValoresATX VGSqlConn, "@i_vacum", 0, SQLVARCHAR, VLVAcum, "vacum", ""
  PMPasoValoresATX VGSqlConn, "@i_vtotal", 0, SQLVARCHAR, VLVTotal, "vtotal", ""

    If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
    PMPasoValoresATX VGSqlConn, "@i_cod_grupo", 0, SQLVARCHAR, Empresa.Text, "CodGrupo", ""
    PMPasoValoresATX VGSqlConn, "@i_grupo", 0, SQLVARCHAR, "S", "Grupo", ""
  Else
    PMPasoValoresATX VGSqlConn, "@i_grupo", 0, SQLVARCHAR, "N", "Grupo", ""
  End If
  
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869

  
  PMPasoValoresATX VGSqlConn, "@o_fecha_atx", 1, SQLVARCHAR, "01/01/2000", "Fecha ATX", ""
  PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SSN", ""
  PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario", ""
  'para consulta
  PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, "0", "comision", ""
  PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "X", "Autorizacion", ""
  PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "X", "Fecha Ven", ""
  PMPasoValoresATX VGSqlConn, "@o_tipo_trn", 1, SQLINT4, "0", "Tipo Trn", ""
  'sp_pago_etapa_rc  3790
  If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_pago_pacifictel", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
    ReDim psRetorno(1, 100)
    FMMapeaMatriz VGSqlConn, psRetorno
    VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 1), "mm/dd/yyyy")
    SGSecTrn$ = Trim(FMRetParamATX(VGSqlConn, 2))
    VLHorario = Trim(FMRetParamATX(VGSqlConn, 3))
    SGSecTrn2$ = SGSecTrn$
    VLSerie_Secuencia = Trim(FMRetParamATX(VGSqlConn, 5))
    TipoTrn$ = Trim(FMRetParamATX(VGSqlConn, 7))
    VTIndicadorSum = 1
    PMIniciaRegSum
    PMChequeaATX VGSqlConn
    FLPagoPacifictelNuevo = True
    VLCambio% = False
  Else
    VLCambio% = True
    FLPagoPacifictelNuevo = False
    VTIndicadorSum = 0
    PMFinTransaccion
    PMChequeaATX VGSqlConn
  End If
PMFinTransaccion

'gamc - 23MAR2011
    'ame 08/03/2010
'If FLPagoPacifictelNuevo = True Then
'    If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
'      'Call PMGuardarDsglsBillete("51", SGSecTrn$, iif(VGHorarioDif,"3203","3194"), rptBAD, CboTipCta.Text, Cta.ClipText)
'      Call PMGuardarDsglsBillete("51", SGSecTrn$, iif(VGHorarioDif,"3203","3194"), rptBAD, "REC","")
'      lectoraBill.Limpiar
'    End If
'    Call PLFactura
'End If

  If FLPagoPacifictelNuevo Then
    If (VGTipoEjecucion% <> CGReverso%) Then
        VGEjecucionSP% = True
        'PMInicioTransaccion
        'Para guardar el numero de trn de Pacifictel abono
        PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3792", "Trn", ""
        PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "A", "", ""
        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
        PMPasoValoresATX VGSqlConn, "@i_sec_trn", 0, SQLINT4, SGSecTrn$, "tssn", ""
        PMPasoValoresATX VGSqlConn, "@i_ttrn", 0, SQLINT4, TipoTrn$, "tipo_trn", ""
        PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT2, Trim(Me.Servicio.Text), "servicio", ""
        PMPasoValoresATX VGSqlConn, "@i_pnumdoc", 0, SQLVARCHAR, Trim(psRetorno(1, 18)), "codigo_concilia", ""
        PMPasoValoresATX VGSqlConn, "@i_sec_nventa", 0, SQLVARCHAR, Trim(VLFacturaCNT), "codigo_nventa", ""
        If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_pago_pacifictel", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
          PMChequeaATX VGSqlConn
        End If
        PMChequeaATX VGSqlConn
        'PMFinTransaccion
        VGEjecucionSP% = False
    End If
    
    If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
        If Not VLHorarioDif Then
            VLTrn = "3194"
        Else
            VLTrn = "3203"
        End If
    End If
    
'    If VGTipoEjecucion% <> CGReverso% Then
'      If ((Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
'        SGPrimeraVez = 0     ' ya no es primera vez
'        If CDbl(SGUsar) > 0 Then
'          PMGrabaDesglose VLTrn, CDbl(SGUsar), VLCambio%
'          If VLCambio% = True Then
'            MsgBox "Error en la Grabacion del Codigo. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
'          End If
'        End If
'        SGActual = 1  'seteo Variable para borrar desglose
'      Else
'        SGActual = 0  'no borrar desglose en caso de Error en Transaccion
'      End If
'    Else  'Por REVERSO
'      VLTsnTemp = VGTSN
'      PMEgresoEfectivo SGUsar, VLTrn
'    End If
  End If

End Function

Function FLConsAndinatel() As Integer
    PMInicioTransaccion
    
    VLreferencia = Trim(Proceso.Text) + (Trim(Ref.Text))
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3397", "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_psecuencial", 0, SQLINT4, SGSecTrn$, "Psecuencial", ""
    PMPasoValoresATX VGSqlConn, "@i_pfecha", 0, SQLVARCHAR, Format(VGFechaProceso, "DDMMYYYY"), "@i_pfecha", ""
  
    PMPasoValoresATX VGSqlConn, "@i_pcodcajero", 0, SQLINT4, VLCodCaj, "Pcod_cajero", ""
    PMPasoValoresATX VGSqlConn, "@i_ptelefono", 0, SQLVARCHAR, VLreferencia, "Ptelefono", ""
    
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV", "cob_procesador", "sp_consulta_andinatel", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        ReDim psRetorno(1, 200)
        FMMapeaMatriz VGSqlConn, psRetorno
    VLTipServicio = psRetorno(1, 3)
    VLTipTrn = psRetorno(1, 3)
    VLCodTrn = psRetorno(1, 3)
    VLCodTerm = psRetorno(1, 5)
    VLSecTer = psRetorno(1, 4)
    VLCodResp = psRetorno(1, 7)
    mensaje = ""
    mensaje = VLCodResp
    VLNumTelefono = psRetorno(1, 8)
        VLNombreCliente = psRetorno(1, 9)
        Nombre = VLNombreCliente
        vlval$ = CCur(psRetorno(1, 15)) + CCur(psRetorno(1, 16))
        VLValfactura = CCur(vlval$) / 100#
        VLFec = psRetorno(1, 14)
        VLFecEmi = Mid(VLFec, 3, 2) + "/" + Mid(VLFec, 1, 2) + "/" + Mid(VLFec, 5, 4)  'mmddaaaa
        VLFactImpagas = psRetorno(1, 10) 'validar
        VLcategoria = psRetorno(1, 11)
        VLNumFactura = psRetorno(1, 12)
        txtfactura = VLNumFactura
        VLCedFactura = psRetorno(1, 13)
        vlval = psRetorno(1, 15)
        VLSubtotal = FLdato(vlval, 10, 2)
        vlval = psRetorno(1, 16)
        VLRetencion = FLdato(vlval, 10, 2)
        vlval = psRetorno(1, 17)
        VLBaseImponible = FLdato(vlval, 10, 2)
        VLCicloFact = psRetorno(1, 18)
        VLFec = psRetorno(1, 19)                     'aaaammdd
        VLFecVen = Mid(VLFec, 3, 2) + "/" + Mid(VLFec, 1, 2) + "/" + Mid(VLFec, 5, 4)   'mmddaaaa
        VLNumRubros = CInt(psRetorno(1, 20))
        VLTempRubros = VLNumRubros
        VLDetRubros1 = ""
        
        For i% = 21 To (21 + VLNumRubros - 1)
            VLTRubros$ = VLTRubros$ + (psRetorno(0, i%) + psRetorno(1, i%))
        Next i%

        If VLNumRubros > 1 Then VLDetRubros1 = Mid(VLTRubros$, 1, 216)
        If VLNumRubros > 12 Then VLDetRubros2 = Mid(VLTRubros$, 217, 216)
        If VLNumRubros > 24 Then VLDetRubros3 = Mid(VLTRubros$, 433, 216)
        
'        If VLNumRubros > 1 Then
'            If VLTempRubros >= 12 Then
'                For i% = 21 To 32
'                    VLDetRubros1 = VLDetRubros1 + psRetorno(0, i%)
'                Next i%
'            Else
'                For i% = 21 To 32 + 12 - VLTempRubros
'                    VLDetRubros1 = VLDetRubros1 + psRetorno(0, i%)
'                Next i%
'            End If
'        End If
'        VLTempRubros = VLTempRubros - 12
'        If VLNumRubros > 12 Then
'           If VLTempRubros >= 12 Then
'                For i% = 33 To 44
'                    VLDetRubros2 = VLDetRubros2 + psRetorno(0, i%)
'                Next i%
'            Else
'                For i% = 33 To 44 - 12 + VLTempRubros
'                    VLDetRubros2 = VLDetRubros2 + psRetorno(0, i%)
'                Next i%
'            End If
'        Else
'            VLDetRubros2 = " "
'        End If
'        VLTempRubros = VLTempRubros - 12
'        If VLNumRubros > 24 Then
'           If VLTempRubros >= 12 Then
'                For i% = 45 To 66
'                    VLDetRubros3 = VLDetRubros2 + psRetorno(0, i%)
'                Next i%
'            Else
'                For i% = 45 To 66 + 12 - VLTempRubros
'                    VLDetRubros3 = VLDetRubros2 + psRetorno(0, i%)
'                Next i%
'            End If
'        Else
'            VLDetRubros3 = " "
'        End If
        
        For i% = 21 To 21 + VLNumRubros - 1
            If CInt(psRetorno(0, i%)) = 9995 Then
                    VLValfactura = CCur(psRetorno(1, i%)) / 100#
                  Total.Text = VLValfactura 'CCur(VLValfactura)
                  valor.Text = VLValfactura ' CCur(VLValfactura)
                  Minimo.Text = VLValfactura 'CCur(VLValfactura)
            End If
        
        Next i%
        FLConsAndinatel = True
    Else
        FLConsAndinatel = False
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function

Function FLPagoAndinatel() As Integer
    PMInicioTransaccion
   ' Total.Text = "0"
   ' TotPago.Text = "0"
PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3485", "Trn", ""
PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, vlOpcion, "Opcion", ""
PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Mon", ""
PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "Servname", ""
PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, (Empresa.Text), "Empresa", ""
PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "Empname", ""
PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, (Loc.Text), "Valch", ""
PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLCHAR, (Cta.ClipText), "Cuenta", ""
PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "Comprob", ""
PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, (Reten.Text), "Reten", ""
PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autoriza", ""
PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "Cant_chq", ""
PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", ""
PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "Descproc", ""
PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
PMPasoValoresATX VGSqlConn, "@i_val_ret", 0, SQLMONEY, (VLRetencion), "Val_ret", ""
PMPasoValoresATX VGSqlConn, "@i_val_imp", 0, SQLMONEY, (VLBaseImponible), "Val_imp", ""
PMPasoValoresATX VGSqlConn, "@i_version", 0, SQLINT4, 1, "Version", ""
PMPasoValoresATX VGSqlConn, "@i_fecha_fac", 0, SQLVARCHAR, (VLFecEmi), "Fecha_fac", ""
PMPasoValoresATX VGSqlConn, "@i_fac_imp", 0, SQLINT4, (VLFactImpagas), "Fac_imp", ""
PMPasoValoresATX VGSqlConn, "@i_cedula", 0, SQLVARCHAR, (VLCedFactura), "Cedula", ""
PMPasoValoresATX VGSqlConn, "@i_categoria", 0, SQLCHAR, (VLcategoria), "Categoria", ""
PMPasoValoresATX VGSqlConn, "@i_sub_total", 0, SQLMONEY, (VLSubtotal), "Sub_total", ""
PMPasoValoresATX VGSqlConn, "@i_ciclo_fac", 0, SQLVARCHAR, (VLCicloFact), "Ciclo_fac", ""
PMPasoValoresATX VGSqlConn, "@i_fec_ven", 0, SQLVARCHAR, (VLFecVen), "Fec_ven", ""
PMPasoValoresATX VGSqlConn, "@i_num_rubros", 0, SQLINT4, (VLNumRubros), "Num_rubros", ""
PMPasoValoresATX VGSqlConn, "@i_det_rubro1", 0, SQLVARCHAR, (VLDetRubros1), "Det_rubro1", ""
PMPasoValoresATX VGSqlConn, "@i_det_rubro2", 0, SQLVARCHAR, (VLDetRubros2), "Det_rubro2", ""
PMPasoValoresATX VGSqlConn, "@i_det_rubro3", 0, SQLVARCHAR, (VLDetRubros3), "Det_rubro3", ""
PMPasoValoresATX VGSqlConn, "@i_area", 0, SQLCHAR, (Proceso.Text), "Area", ""
'Debug.Print VLDetRubros1
PMPasoValoresATX VGSqlConn, "@i_telefono", 0, SQLVARCHAR, (Trim(Ref)), "Telefono", ""
PMPasoValoresATX VGSqlConn, "@i_num_factura", 0, SQLVARCHAR, txtfactura.Text, "Num_factura", ""
PMPasoValoresATX VGSqlConn, "@i_contrato_telefono", 0, SQLVARCHAR, txtContrato.Text, "Contrato_telefono", ""
PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Val", ""
PMPasoValoresATX VGSqlConn, "@i_valor", 0, SQLMONEY, (efe.Text), "Valor", ""
PMPasoValoresATX VGSqlConn, "@i_producto", 0, SQLVARCHAR, (CboTipCta.Text), "Producto", ""
PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (Comision.Text), "Comision", ""
PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Space(64), Space(64), ""
PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, "0", "0", ""
PMPasoValoresATX VGSqlConn, "@o_empresa_switch", 1, SQLCHAR, Space(10), Space(10), ""
PMPasoValoresATX VGSqlConn, "@o_cod_trn_switch", 1, SQLCHAR, Space(10), Space(10), ""
PMPasoValoresATX VGSqlConn, "@o_hora_pro", 1, SQLVARCHAR, "01/01/200012:01:01", Space(18), ""
PMPasoValoresATX VGSqlConn, "@o_fecha_ef", 1, SQLVARCHAR, "01/01/2000", Space(10), ""
PMPasoValoresATX VGSqlConn, "@o_mensaje", 1, SQLCHAR, Space(200), Space(200), ""
PMPasoValoresATX VGSqlConn, "@o_num_factura", 1, SQLVARCHAR, Space(3), Space(3), ""
PMPasoValoresATX VGSqlConn, "@o_contrato_telefono", 1, SQLVARCHAR, Space(13), Space(13), ""
PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, "01/01/2000", Space(10), ""
PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "0", ""
PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, "0", "0", ""
PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, Space(1), Space(1), ""
PMPasoValoresATX VGSqlConn, "@o_datos_emp", 1, SQLVARCHAR, Space(255), Space(255), ""
PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, "0", "0", ""
PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), Space(30), ""
PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), Space(30), ""

'Virtuales

PMPasoValoresATX VGSqlConn, "@i_psecuencial", 0, SQLINT4, SGSecTrn$, "Psecuencial", ""
PMPasoValoresATX VGSqlConn, "@i_pcodcajero", 0, SQLINT4, VLCodCaj, "Pcod_cajero", ""
PMPasoValoresATX VGSqlConn, "@i_pfecha", 0, SQLVARCHAR, Format(VGFechaProceso, "DDMMYYYY"), "@i_pfecha", ""
'PMPasoValoresATX VGSqlConn, "@i_pfecha", 0, SQLVARCHAR, Format(VGFechaProceso, "DDMMYYYY"), "@i_pfecha", ""
   
If FMTransmitirRPCATX(VGSqlConn, "PSSRV", "cob_procesador", "sp_pago_andinatel", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
 ReDim psRetorno(2, 200)
        ReDim psRetorno(1, 200)
        FMMapeaMatriz VGSqlConn, psRetorno
  ReDim psRetorno(1, 200)
        FMMapeaMatriz VGSqlConn, psRetorno
    VLTipServicio = psRetorno(1, 3)
    VLTipTrn = psRetorno(1, 3)
    VLCodTrn = psRetorno(1, 3)
    VLCodTerm = psRetorno(1, 5)
    VLSecTer = psRetorno(1, 4)
    VLCodResp = psRetorno(1, 7)
    mensaje = ""
    mensaje = VLCodResp
    VLNumTelefono = psRetorno(1, 8)
        VLNombreCliente = psRetorno(1, 9)
        Nombre = VLNombreCliente
        vlval$ = CCur(psRetorno(1, 15)) + CCur(psRetorno(1, 16))
        VLValfactura = CCur(vlval$) / 100#
        VLFec = psRetorno(1, 14)
        VLFecEmi = Mid(VLFec, 3, 2) + "/" + Mid(VLFec, 1, 2) + "/" + Mid(VLFec, 5, 4)  'mmddaaaa
        VLFactImpagas = psRetorno(1, 10) 'validar
        VLcategoria = psRetorno(1, 11)
        VLNumFactura = psRetorno(1, 12)
        txtfactura = VLNumFactura
        VLCedFactura = psRetorno(1, 13)
        vlval = psRetorno(1, 15)
        VLSubtotal = FLdato(vlval, 10, 2)
        vlval = psRetorno(1, 16)
        VLRetencion = FLdato(vlval, 10, 2)
        vlval = psRetorno(1, 17)
        VLBaseImponible = FLdato(vlval, 10, 2)
        VLCicloFact = psRetorno(1, 18)
        VLFec = psRetorno(1, 19)                     'aaaammdd
        VLFecVen = Mid(VLFec, 3, 2) + "/" + Mid(VLFec, 1, 2) + "/" + Mid(VLFec, 5, 4)   'mmddaaaa
        VLNumRubros = CInt(psRetorno(1, 20))
        VLTempRubros = VLNumRubros
        VLDetRubros1 = ""
        If VLNumRubros > 1 Then
            If VLTempRubros >= 12 Then
                For i% = 21 To 32
                    VLDetRubros1 = VLDetRubros1 + psRetorno(0, i%)
                Next i%
            Else
                For i% = 21 To 32 + 12 - VLTempRubros
                    VLDetRubros1 = VLDetRubros1 + psRetorno(0, i%)
                Next i%
            End If
        End If
        VLTempRubros = VLTempRubros - 12
        If VLNumRubros > 12 Then
           If VLTempRubros >= 12 Then
                For i% = 33 To 44
                    VLDetRubros2 = VLDetRubros2 + psRetorno(0, i%)
                Next i%
            Else
                For i% = 33 To 44 - 12 + VLTempRubros
                    VLDetRubros2 = VLDetRubros2 + psRetorno(0, i%)
                Next i%
            End If
        Else
            VLDetRubros2 = " "
        End If
        VLTempRubros = VLTempRubros - 12
        If VLNumRubros > 24 Then
           If VLTempRubros >= 12 Then
                For i% = 45 To 66
                    VLDetRubros3 = VLDetRubros2 + psRetorno(0, i%)
                Next i%
            Else
                For i% = 45 To 66 + 12 - VLTempRubros
                    VLDetRubros3 = VLDetRubros2 + psRetorno(0, i%)
                Next i%
            End If
        Else
            VLDetRubros3 = " "
        End If
        
        For i% = 21 To 21 + VLNumRubros - 1
            If CInt(psRetorno(0, i%)) = 9995 Then
                    VLValfactura = CCur(psRetorno(1, i%)) / 100#
                  Total.Text = VLValfactura 'CCur(VLValfactura)
                  valor.Text = VLValfactura ' CCur(VLValfactura)
                  Minimo.Text = VLValfactura 'CCur(VLValfactura)
            End If
        
        Next i%
        FLPagoAndinatel = True
    
    
    Else
        FLPagoAndinatel = False
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function

'->hy-categ
Function FLTransmitir_CPS_CATEG_consulta() As Boolean
    PMInicioTransaccion 'GAMC - 31/03/2008
    FLTransmitir_CPS_CATEG_consulta = False
    VLTsnTemp = 0
    PLTipoTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62007, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim$(Ref.Text), "", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo", 0, SQLINT4, Trim$("000100"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechamit", 0, SQLVARCHAR, Trim$("00000000000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pseqmit", 0, SQLINT4, Trim$("000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLINT4, Format$(Time(), "hhmmss"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechalocal", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
    
    'lfcm 19-junio-2008
    'VGUsuario = Format(VGUsuario, "000000")     'lfcm 06-junio-2008
    'PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(VGUsuario), "", ""
    PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(Format(VGUsuario, "000000")), "", ""
    
    PMPasoValoresATX VGSqlConn, "@i_pseqinst", 0, SQLINT4, Trim$("000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pnumero", 0, SQLVARCHAR, Trim$("0000000000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pseguridad", 0, SQLVARCHAR, Trim$("24080321"), "", ""
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_consulta_categ", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_CPS_CATEG_consulta = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        Nombre.Text = FLBuscarItem("@o_pnombres")
        valor.Text = Trim$(str$(CCur(FLBuscarItem("@o_ptotal_pendiente")) / 100))
        Ref = FLBuscarItem("@o_pcodigo")
        VLCedula = FLBuscarItem("@o_pcedula")
        VLi_pseguridad = FLBuscarItem("@o_pseguridad")
        VLi_pfechaemi = FLBuscarItem("@o_pfechaemi")
        VLi_pfechaven = FLBuscarItem("@o_pfechaven")
        VLi_pfactura = FLBuscarItem("@o_pfactura")
        VLic_phoralocal = FLBuscarItem("@o_phoralocal")
        If Len(Trim$(VLic_phoralocal)) < 6 Then
            VLic_phoralocal = String(6 - Len(Trim$(VLic_phoralocal)), "0") + VLic_phoralocal
        End If
        VLic_pfechalocal = FLBuscarItem("@o_pfechalocal")
        VLic_pfechacomp = FLBuscarItem("@o_pfechacomp")
        'Total.Text = CCur(Valor.Text) + CCur(Comision.Text)
        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
        If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
        End If
        efe.SetFocus
    Else
        PMChequeaATX VGSqlConn
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function

'msilvag Inicio mar-14-2013
Function FLTransmitir_ElectQuito() As Boolean
    Dim VTIndicadorSum As Integer
    Dim i As Integer
    Dim VLValor As String
    
    FLTransmitir_ElectQuito = False
    
    VTIndicadorSum = 0
    VLTsnTemp = 0
    
    If Not VGHorarioDif Then
        VLTrn = "62096"
    Else
        VLTrn = "62097"
    End If
    If vlOpcion = "C" Or vlOpcion = "V" Then
        VLReverso$ = "N"
    Else
        VLReverso$ = "S"
    End If
    
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, VLTrn, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
    'PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Mid$(Trim$(Ref), 1, Len(Trim$(Ref)) - 1), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_digver", 0, SQLCHAR, Mid$(Trim$(Ref), Len(Trim$(Ref)), 1), "DigVer", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, efe.Text, "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, Reten.Text, "Retencion", ""
    PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, vlOpcion, "Opcion", ""
    'PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "P", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
    'PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "CompRet", ""
    PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, "0", "CompRet", ""
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Nombre, "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, (valor.Text), "Valor", ""
    PMPasoValoresATX VGSqlConn, "@o_digver", 1, SQLCHAR, "0", "DigVer", ""
    PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, (VTIndicadorSum), "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
    PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (VLChq_com), "Mensaje", ""  '/*JPM 11112004*/
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (VLEfe_com), "Comision", ""
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "XXXXXXXXXXXXXXX", "AutorizacionSRI", ""   '/*JPM 08122004*/
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "XXXXXXXXXXXXXXX", "Stk", ""              '/*JPM 08122204*/
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@o_pautorizacion", 1, SQLINT4, 0, "", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", "" 'TPE Solo se incluye para el Reverso.
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Pago_Val.Text), "Efectivo", ""
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869

    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_luz_rc", True, "Transaccion Ok", "S", "N", VLReverso$, "51", "S", "S") = True Then
    'If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_pago_categ", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLTransmitir_ElectQuito = True
        Dim vtma(2, 50) As String
        VTResult% = FMMapeaMatrizATX(VGSqlConn, vtma())
        If VGTipoEjecucion% <> CGReverso% Then
            VLo_pautorizacion = FMRetParamATX(VGSqlConn, 11)
        End If
        'msilvag Inicio
        VLNombElec = FMRetParamATX(VGSqlConn, 1)
        'VLSaldoElec = FMRetParamATX(VGSqlConn, 2)
       
        VLDigVeElec = FMRetParamATX(VGSqlConn, 3)
        'msilvag Fin
        VLHorario = FMRetParamATX(VGSqlConn, 7)
        'VLo_pseqmit = FLBuscarItem("@o_pseqmit")
        VLo_pseqmit = vtma(1, 8)
        VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 4), "mm/dd/yyyy")
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
        
        If vlOpcion = "C" Then
            valor.Visible = True
            lblValor(0).Visible = True
            valor.Text = FMRetParamATX(VGSqlConn, 2)
            Me.Nombre.Text = VLNombElec
        End If
        
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
        End If
        If VLconexion <> "F" Then
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_ElectQuito = True
            VLCambio% = False
        End If
        'msilvag Inicio
        If vlOpcion = "C" Then
            ConsultaElecQuitoComision
        End If
    Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_ElectQuito = False
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
        VTIndicadorSum = FMRetParamATX(VGSqlConn, 6)
        PMChequeaATX VGSqlConn
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir_ElectQuito = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    If FLTransmitir_ElectQuito = True Then
       If vlOpcion = "T" Then
            'JPM Lectora de Billetes -->
            If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
              'Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3202", "3173"), rptBAD, CboTipCta.Text, Cta.ClipText)
              Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3202", "3173"), rptBAD, "REC", "")
              lectoraBill.Limpiar
            End If
            '<-- JPM Lectora de Billetes
            Call PLFactura
        End If
    End If

    If Not VGHorarioDif Then
        VLTrn = "3173"
    Else
        VLTrn = "3202"
    End If

    If VGTipoEjecucion% <> CGReverso% Then
        If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
        VLTsnTemp = VGTSN
        'PMEgresoEfectivo Efe.ValueReal, VLTrn
        PMEgresoEfectivo SGUsar, VLTrn
    End If
    If SGAcumulado < 0 Then
        VLDescargar = 1
    End If

End Function

Private Sub ConsultaElecQuitoComision()
         If Trim(Servicio.Text) = "3" And Trim$(Empresa.Text) = "1371" Then
          'LECTURA DE LA COMISION Y DATA DEL SRI
                PMInicioTransaccion
                PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3173, "Trn", ""
                PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
                PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
                PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "B", "Opcion", ""
                PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
                PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
                PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
                PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "AutorizacionSRI", ""
                PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "fevensri", ""
                PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, Space(15), "Nota_venta", ""
                'campos para devolver IVA, Base imponible e impuesto
                PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
                PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
                PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
                'campos para devolver IVA, Base imponible e impuesto
                If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_luz_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                    Comision = FMRetParamATX(VGSqlConn, 1)
                    VLautoriSri = FMRetParamATX(VGSqlConn, 2)
                    VLFecvenSRI = FMRetParamATX(VGSqlConn, 3)
                    VLSerie_Secuencia = FMRetParamATX(VGSqlConn, 4)
                    VlbaseImp = FMRetParamATX(VGSqlConn, 6)
                    VLiva = FMRetParamATX(VGSqlConn, 7)
                    PMChequeaATX VGSqlConn
                    PMFinTransaccion
                    'LBP Inicio RECA-CC-SGC00025869
                    If Comision > 0 Then
                        VGCom_aux = FMDevuelveComisionReal(CDbl(Comision), False, 51)
                        If VGCom_aux <> CDbl(Comision) And VGCom_aux > 0 Then
                            VGComision_original = Comision
                            Comision = VGCom_aux
                        Else
                            VGComision_original = Comision
                        End If
                    End If
                    'LBP Fin RECA-CC-SGC00025869
                    If CCur(Comision.Text) > 0 Then
                        Comision.Enabled = True
                        'Total.Text = FMCCurATX(Valor.Text) + FMCCurATX(Comision.Text)
                        Total.Text = FMCCurATX(Comision.Text)
                    End If
                    VLCCATEG = "N"
                Else
                    MsgBox "Error no se pudo obtener la comisión", vbCritical, "Aviso"
                    PMChequeaATX VGSqlConn
                    PMFinTransaccion
                End If
         End If
End Sub
'msilvag Fin

Function FLTransmitir_CPS_CATEG_pago() As Boolean
Dim VTIndicadorSum As Integer
Dim i As Integer
Dim VLValor As String
    
    FLTransmitir_CPS_CATEG_pago = False
    
    VTIndicadorSum = 0
    VLTsnTemp = 0
    
    If Not VGHorarioDif Then
        VLTrn = "62096"
    Else
        VLTrn = "62097"
    End If
    
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, VLTrn, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
    'PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Mid$(Trim$(Ref), 1, Len(Trim$(Ref)) - 1), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_digver", 0, SQLCHAR, Mid$(Trim$(Ref), Len(Trim$(Ref)), 1), "DigVer", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, efe.Text, "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, Reten.Text, "Retencion", ""
    PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "P", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
    'PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "CompRet", ""
    PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, "0", "CompRet", ""
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Nombre, "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, (valor.Text), "Valor", ""
    PMPasoValoresATX VGSqlConn, "@o_digver", 1, SQLCHAR, "0", "DigVer", ""
    PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, (VTIndicadorSum), "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
    PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (VLChq_com), "Mensaje", ""  '/*JPM 11112004*/
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (VLEfe_com), "Comision", ""
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "XXXXXXXXXXXXXXX", "AutorizacionSRI", ""   '/*JPM 08122004*/
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "XXXXXXXXXXXXXXX", "Stk", ""              '/*JPM 08122204*/
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@o_pautorizacion", 1, SQLINT4, 0, "", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", "" 'TPE Solo se incluye para el Reverso.
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Pago_Val.Text), "Efectivo", ""
    'Parámetros del cps
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Mid$(Trim$(Ref), 1, Len(Trim$(Ref)) - 1), "Cod", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo", 0, SQLINT4, Trim$("000101"), "", ""
    VLValor = Trim$(str$(CCur(valor.Text) * 100))
    PMPasoValoresATX VGSqlConn, "@i_ptotal_pendiente", 0, SQLINT4, str$(VLValor), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechamit", 0, SQLVARCHAR, Trim$("00000000000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pseqmit", 0, SQLINT4, Trim$("000000"), "", ""
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, VLic_phoralocal, "", ""
        PMPasoValoresATX VGSqlConn, "@i_pfechalocal", 0, SQLVARCHAR, VLic_pfechalocal, "", ""
        PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, VLic_pfechacomp, "", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "", ""
        PMPasoValoresATX VGSqlConn, "@i_pfechalocal", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""
        PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
    If VGTipoEjecucion% = CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@i_preverso", 0, SQLVARCHAR, "1", "", "", True
    Else
        PMPasoValoresATX VGSqlConn, "@i_preverso", 0, SQLVARCHAR, "0", "", ""
    End If
    
    'lfcm 19-junio-2008 Se aplica formato al campo @i_poperador
    'PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(VGUsuario), "", ""
    PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(Format(VGUsuario, "000000")), "", ""
    
    
    PMPasoValoresATX VGSqlConn, "@i_pseqinst", 0, SQLINT4, "", "", ""
    If VGTipoEjecucion% = CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@i_pautorizacion", 0, SQLINT4, VLo_pautorizacion, "", "", True
    Else
        PMPasoValoresATX VGSqlConn, "@i_pautorizacion", 0, SQLINT4, "", "", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_pnumero", 0, SQLVARCHAR, "0024" + StrReverse(Mid(StrReverse(Trim$(str$(VGOficina))) & "000000", 1, 6)) + Right$(VGterminal, 6), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcedula", 0, SQLVARCHAR, VLCedula, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pseguridad", 0, SQLINT4, VLi_pseguridad, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechaemi", 0, SQLVARCHAR, VLi_pfechaemi, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechaven", 0, SQLVARCHAR, VLi_pfechaven, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfactura", 0, SQLVARCHAR, VLi_pfactura, "", ""
    VLValor = Trim$(str$(CCur(Pago_Val.Text) * 100))
    PMPasoValoresATX VGSqlConn, "@i_pvalorpag", 0, SQLINT4, str$(VLValor), "", ""
    If VGTipoEjecucion% = CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@i_pdatotrxo", 0, SQLVARCHAR, "0200" + StrReverse(Mid(StrReverse(VLo_pautorizacion) & "000000", 1, 6)) + VLi_pfechalocal + VLi_phoralocal + VLi_pnumero, "", "", True
    Else
        PMPasoValoresATX VGSqlConn, "@i_pdatotrxo", 0, SQLVARCHAR, Space(30), "", ""
    End If
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_pago_categ", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLTransmitir_CPS_CATEG_pago = True
        Dim vtma(2, 50) As String
        VTResult% = FMMapeaMatrizATX(VGSqlConn, vtma())
        If VGTipoEjecucion% <> CGReverso% Then
            VLo_pautorizacion = FMRetParamATX(VGSqlConn, 11)
        End If
        VLHorario = FMRetParamATX(VGSqlConn, 7)
        'VLo_pseqmit = FLBuscarItem("@o_pseqmit")
        VLo_pseqmit = vtma(1, 8)
        VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 4), "mm/dd/yyyy")
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
        End If
        If VLconexion <> "F" Then
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_CPS_CATEG_pago = True
            VLCambio% = False
        End If
    Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_CPS_CATEG_pago = False
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
        VTIndicadorSum = FMRetParamATX(VGSqlConn, 6)
        PMChequeaATX VGSqlConn
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir_CPS_CATEG_pago = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    If FLTransmitir_CPS_CATEG_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3202", "3173"), rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3202", "3173"), rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      'ame 08/03/2010
      Call PLFactura
    End If
    
    If (VGTipoEjecucion% <> CGReverso%) Then
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3173", "Trn", ""
        PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "U", "", ""
        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_codautoriza", 0, SQLINT4, VLo_pseqmit, "tssn", ""
        PMPasoValoresATX VGSqlConn, "@i_autorizacion", 0, SQLINT4, VLo_pautorizacion, "autorizacion", ""
        PMPasoValoresATX VGSqlConn, "@i_tssn", 0, SQLINT4, SGSecTrn$, "tssn", ""
        If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_luz_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
          PMChequeaATX VGSqlConn
        End If
        PMChequeaATX VGSqlConn
        PMFinTransaccion
    End If


    If Not VGHorarioDif Then
        VLTrn = "3173"
    Else
        VLTrn = "3202"
    End If

    If VGTipoEjecucion% <> CGReverso% Then
        If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
        VLTsnTemp = VGTSN
        'PMEgresoEfectivo Efe.ValueReal, VLTrn
        PMEgresoEfectivo SGUsar, VLTrn
    End If
    If SGAcumulado < 0 Then
        VLDescargar = 1
    End If

End Function
'<-hy-categ


'-->lfcm 30-marzo-2009
Function FLTransmitir_CPS_EMELGUR_consulta() As Boolean
   PMChequea VGSqlConn&
   Dim VLarregloParametros(30) As String
   PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
   PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
   PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "EMESEG"
   PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
   If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametros())
      VLEMESEG = LTrim(RTrim(Trim(VLarregloParametros(4))))
   Else
      VLEMESEG = "00000000"
   End If
            
   PMChequea VGSqlConn&
   PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
   PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
   PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CIFIEM"
   PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
   If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametros())
      VLCIFIEM = LTrim(RTrim(Trim(VLarregloParametros(4))))
   Else
      VLCIFIEM = "00000000"
   End If
   PMChequea VGSqlConn&
   
   PMInicioTransaccion
   FLTransmitir_CPS_EMELGUR_consulta = False
   VLTsnTemp = 0
   PLTipoTransaccion   'Verificar si es necesario este procedimiento lfcm
   PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62177, "Trn", ""
   PMPasoValoresATX VGSqlConn, "@i_pcuenta", 0, SQLVARCHAR, Trim$(Ref.Text) & Mid("                   ", 1, 19 - Len(Trim$(Ref.Text))), "", ""
   'PMPasoValoresATX VGSqlConn, "@i_pfechahoramactrans", 0, SQLVARCHAR, Format$(Date, "yyyymmdd") & Format$(Time(), "hhmmss"), "Trn", ""
   PMPasoValoresATX VGSqlConn, "@i_pfechahoramactrans", 0, SQLVARCHAR, "00000000000000", "Trn", ""
   PMPasoValoresATX VGSqlConn, "@i_psecmactrans", 0, SQLVARCHAR, Trim$("000000"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_phoratrxlocal", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pfechatrxlocal", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pifi", 0, SQLVARCHAR, Format(VLCIFIEM, "000"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(Format(VGUsuario, "000000")), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pterminal", 0, SQLVARCHAR, Format(VLCIFIEM, "0000") & Trim$(Format(VGOficina, "000000")) & Trim$(Format(Mid(VGterminal, 1, 6), "000000")), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pcodseguridad", 0, SQLVARCHAR, Format(VLEMESEG, "00000000"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim$(Empresa.Text), "", ""
   If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_consulta_emelgur", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_CPS_EMELGUR_consulta = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        VLcnelIdMensaje = FLBuscarItem("@o_idmensaje")
        VLcnelCodCuenta = FLBuscarItem("@o_codcuenta")
        VLcnelTipoTrans = FLBuscarItem("@o_tipotrans")
        VLcnelDeudaTotal = FLBuscarItem("@o_deudatotal")
        VLcnelFechaHoraMt = FLBuscarItem("@o_fechahoramt")
        VLcnelSecMt = FLBuscarItem("@o_secmt")
        VLcnelHoraTransLoc = FLBuscarItem("@o_horatransloc")
        VLcnelFechaTransLoc = FLBuscarItem("@o_fechatransloc")
        VLcnelCanal = FLBuscarItem("@o_canal")
        VLcnelIfi = FLBuscarItem("@o_ifi")
        VLcnelOperador = FLBuscarItem("@o_operador")
        VLcnelSecIfi = FLBuscarItem("@o_secifi")
        VLcnelCodResultado = FLBuscarItem("@o_codresultado")
        VLcnelTerminal = FLBuscarItem("@o_terminal")
        VLcnelNombre = FLBuscarItem("@o_nombre")
        VLcnelDomicilio = FLBuscarItem("@o_domicilio")
        VLcnelCodSeguridad = FLBuscarItem("@o_codseguridad")
        VLcnelFechaVence = FLBuscarItem("@o_fechavence")
        VLcnelNumFactura = FLBuscarItem("@o_numfactura")
        VLcnelTotalMes = FLBuscarItem("@o_totalmes")

        valor.Text = Trim$(str$(CCur(VLcnelDeudaTotal) / 100))
        Total.Text = Trim$(str$(CCur(VLcnelDeudaTotal) / 100))
        Me.Nombre.Text = VLcnelNombre
        Ref = VLcnelCodCuenta
        VLCedula = FLBuscarItem("@o_pcedula")
        VLi_pseguridad = FLBuscarItem("@o_pseguridad")
        VLi_pfechaemi = FLBuscarItem("@o_pfechaemi")
        VLi_pfechaven = FLBuscarItem("@o_pfechaven")
        VLi_pfactura = FLBuscarItem("@o_pfactura")
        VLic_phoralocal = FLBuscarItem("@o_phoralocal")
        If Len(Trim$(VLic_phoralocal)) < 6 Then
            VLic_phoralocal = String(6 - Len(Trim$(VLic_phoralocal)), "0") + VLic_phoralocal
        End If
        VLic_pfechalocal = FLBuscarItem("@o_pfechalocal")
        VLic_pfechacomp = FLBuscarItem("@o_pfechacomp")
        'Total.Text = CCur(Valor.Text) + CCur(Comision.Text)
        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
        If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
        End If
        efe.SetFocus
    Else
        PMChequeaATX VGSqlConn
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function
'--<lfcm 30-marzo-2009


'-->lfcm 30-marzo-2009
Function FLTransmitir_CPS_EMELGUR_pago() As Boolean
Dim VTIndicadorSum As Integer
Dim i As Integer
Dim VLValor As String
    
    FLTransmitir_CPS_EMELGUR_pago = False
    
    VTIndicadorSum = 0
    VLTsnTemp = 0
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62178, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_pcuenta", 0, SQLVARCHAR, Trim$(Ref.Text) & Mid("                   ", 1, 19 - Len(Trim$(Ref.Text))), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, CCur(Pago_Val.Text), "Efectivo", ""
    'PMPasoValoresATX VGSqlConn, "@i_pfechahoramactrans", 0, SQLVARCHAR, Format$(Date, "yyyymmdd") & Format$(Time(), "hhmmss"), "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechahoramactrans", 0, SQLVARCHAR, "00000000000000", "Trn", ""
    'PMPasoValoresATX VGSqlConn, "@i_psecmactrans", 0, SQLVARCHAR, Format(VLcnelSecMt, "000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_psecmactrans", 0, SQLVARCHAR, "000000", "", ""
    PMPasoValoresATX VGSqlConn, "@i_phoratrxlocal", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechatrxlocal", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""   'Se debe cambiar por la fecha de proceso
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pifi", 0, SQLVARCHAR, Format(VLCIFIEM, "000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(Format(VGUsuario, "000000")), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pterminal", 0, SQLVARCHAR, Format(VLCIFIEM, "0000") & Trim$(Format(VGOficina, "000000")) & Trim$(Format(Mid(VGterminal, 1, 6), "000000")), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pdirecserv", 0, SQLVARCHAR, Trim$(Mid(VLcnelDomicilio, 1, 100)) & Mid("                   ", 1, 100 - Len(Trim$(Mid(VLcnelDomicilio, 1, 100)))), "", ""
    'PMPasoValoresATX VGSqlConn, "@i_pcodseguridad", 0, SQLVARCHAR, Format(VLEMESEG, "00000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodseguridad", 0, SQLINT4, Format(VLEMESEG, "00000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechaven", 0, SQLVARCHAR, VLcnelFechaVence, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pnumfactura", 0, SQLVARCHAR, VLcnelNumFactura, "", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, efe.Text, "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_valpend", 0, SQLMONEY, CCur(VLcnelDeudaTotal / 100), "DeudaTotal", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, "0", "CompRet", ""
    PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, Reten.Text, "Retencion", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", "" 'TPE Solo se incluye para el Reverso.
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "P", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
    PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLVARCHAR, CboTipCta.Text, "CboTipCta", ""
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (VLEfe_com), "Comision", ""
    '-->lfcm 25-febrero-2009
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    '--<lfcm 25-febrero-2009
        
    If VGTipoEjecucion% <> CGReverso% Then   'Pago
       PMPasoValoresATX VGSqlConn, "@i_preverso", 0, SQLVARCHAR, "01", "IndReverso", "", True
       PMPasoValoresATX VGSqlConn, "@i_ptrx_original", 0, SQLVARCHAR, "", "TrxOriginal", "", True
    Else                                     'Reverso
       PMPasoValoresATX VGSqlConn, "@i_preverso", 0, SQLVARCHAR, "01", "IndReverso", "", True
       PMPasoValoresATX VGSqlConn, "@i_ptrx_original", 0, SQLVARCHAR, "0200" + Format(VLrevCodSeguridad, "000000") + Format$(VLrevFechaTrxLocal, "00000000") + Format$(VLrevHoraTrxLocal, "000000") + Format(VLCIFIEM, "0000") & Trim$(Format(VGOficina, "000000")) & Trim$(Format(Mid(VGterminal, 1, 6), "000000")), "TrxOriginal", "", True
    End If
        
    
    'Parametros de salida iniciales.
'    PMPasoValoresATX VGSqlConn, "@o_fecha_comp", 1, SQLVARCHAR, ("yyyymmdd"), "FechaCompensacion", ""
'    PMPasoValoresATX VGSqlConn, "@o_secmt", 1, SQLVARCHAR, 0, "SecMt", ""    'lfcm 16-abril-2009
'    PMPasoValoresATX VGSqlConn, "@o_codautorizador", 1, SQLINT4, 0, "CodAutorizador", ""
'    PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "Nombre", ""
'    PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, 0, "Saldo", ""
'    PMPasoValoresATX VGSqlConn, "@o_digver", 1, SQLVARCHAR, "A", "DigitoVerificadorCuenta", ""
'    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, 0, "SecuencialTrx", ""
'    PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, "0", "Consulta", ""
'    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "A", "Horario", ""
'    PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, 0, "ValorComision", ""
'    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "NumeroAutorizacion", ""
'    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "FechaVencimiento", ""
'    PMPasoValoresATX VGSqlConn, "@o_fechacontable", 1, SQLVARCHAR, "AAAAAAAAAA", "FechaContable", ""

    PMPasoValoresATX VGSqlConn, "@o_fecha_comp", 1, SQLVARCHAR, ("yyyymmdd"), "FechaCompensacion", ""
    PMPasoValoresATX VGSqlConn, "@o_secmt", 1, SQLVARCHAR, 0, "SecMt", ""    'lfcm 16-abril-2009
    PMPasoValoresATX VGSqlConn, "@o_codautorizador", 1, SQLINT4, 0, "CodAutorizador", ""
    PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, 0, "Saldo", ""
    PMPasoValoresATX VGSqlConn, "@o_digver", 1, SQLVARCHAR, "A", "DigitoVerificadorCuenta", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, 0, "SecuencialTrx", ""
    PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, "0", "Consulta", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "A", "Horario", ""
    PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, 0, "ValorComision", ""
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "NumeroAutorizacion", ""
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "FechaVencimiento", ""
    PMPasoValoresATX VGSqlConn, "@o_fechacontable", 1, SQLVARCHAR, "AAAAAAAAAA", "FechaContable", ""
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "mp_pago_emelgur", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLTransmitir_CPS_EMELGUR_pago = True
        'ReDim Preserve vtma(2, 50)
        
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        'Dim vtma(2, 50) As String
        'VTResult% = FMMapeaMatrizATX(VGSqlConn, vtma())
        
        'Dim vtma(2, 50) As String
        'VTResult% = FMMapeaMatrizATX(VGSqlConn, vtma())
        
        
        
        'Obtener los valores devueltos por el ResultSet del CPS
        VLcnelIdMensaje = FLBuscarItem("@o_idmensaje")
        VLcnelCodCuenta = FLBuscarItem("@o_codcuenta")
        VLcnelTipoTrans = FLBuscarItem("@o_tipotrans")
        VLcnelDeudaTotal = FLBuscarItem("@o_deudatotal")
        VLcnelFechaHoraMt = FLBuscarItem("@o_fechahoramt")
        VLcnelSecMt = FLBuscarItem("@o_secmt")
        VLcnelHoraTransLoc = FLBuscarItem("@o_horatransloc")
        VLcnelFechaTransLoc = FLBuscarItem("@o_fechatransloc")
        VLcnelFechaCompensa = FLBuscarItem("@o_fechacompensa")
        VLcnelCanal = FLBuscarItem("@o_canal")
        VLcnelIfi = FLBuscarItem("@o_ifi")
        VLcnelOperador = FLBuscarItem("@o_operador")
        VLcnelSecIfi = FLBuscarItem("@o_secifi")
        VLcnelCodAutoriza = FLBuscarItem("@o_codautoriza")
        VLcnelCodResultado = FLBuscarItem("@o_codresultado")
        VLcnelTerminal = FLBuscarItem("@o_terminal")
        VLcnelNombre = FLBuscarItem("@o_nombre")
        VLcnelDomicilio = FLBuscarItem("@o_domicilio")
        VLcnelMoneda = FLBuscarItem("@o_moneda")
        VLcnelCodSeguridad = FLBuscarItem("@o_codseguridad")
        VLcnelFechaVence = FLBuscarItem("@o_fechavence")
        VLcnelNumFactura = FLBuscarItem("@o_numfactura")
        VLcnelValorPago = FLBuscarItem("@o_valorpago")
        
        PMChequeaATX VGSqlConn
        If VGTipoEjecucion% <> CGReverso% Then
            VLo_pautorizacion = FMRetParamATX(VGSqlConn, 11)
        End If
        VLHorario = FMRetParamATX(VGSqlConn, 9)
        'VLo_pseqmit = FLBuscarItem("@o_pseqmit")
        VLo_pseqmit = vtmatrizcps(1, 8)
        'VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 4), "mm/dd/yyyy")
        VLFechaCorte = Mid(FMRetParamATX(VGSqlConn, 1), 5, 2) + "/" + Mid(FMRetParamATX(VGSqlConn, 1), 7, 2) + "/" + Mid(FMRetParamATX(VGSqlConn, 1), 1, 4)
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 7)
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
        End If
        If VLconexion <> "F" Then
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_CPS_EMELGUR_pago = True
            VLCambio% = False
        End If
        Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_CPS_EMELGUR_pago = False
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 7)
        VTIndicadorSum = FMRetParamATX(VGSqlConn, 8)
        PMChequeaATX VGSqlConn
    End If
    SGSecTrn$ = FMRetParamATX(VGSqlConn, 7)   'Obtener secuencial de Trx
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir_CPS_EMELGUR_pago = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    
'    If (VGTipoEjecucion% <> CGReverso%) Then
'        PMInicioTransaccion
'        PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3173", "Trn", ""
'        PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "U", "", ""
'        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, Str(FMObtenerMonedaForma("51")), "Moneda", ""
'        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
'        PMPasoValoresATX VGSqlConn, "@i_codautoriza", 0, SQLINT4, VLo_pseqmit, "tssn", ""
'        PMPasoValoresATX VGSqlConn, "@i_autorizacion", 0, SQLINT4, VLo_pautorizacion, "autorizacion", ""
'        PMPasoValoresATX VGSqlConn, "@i_tssn", 0, SQLINT4, SGSecTrn$, "tssn", ""
'        If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_luz_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
'          PMChequeaATX VGSqlConn
'        End If
'        PMChequeaATX VGSqlConn
'        PMFinTransaccion
'    End If


    'ame 08/03/2010
    If FLTransmitir_CPS_EMELGUR_pago = True Then
       'JPM Lectora de Billetes -->
       If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
         'Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3202", "3173"), rptBAD, CboTipCta.Text, Cta.ClipText)
         Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3202", "3173"), rptBAD, "REC", "")
         lectoraBill.Limpiar
       End If
       '<-- JPM Lectora de Billetes
       Call PLFactura
    End If
    

    If Not VGHorarioDif Then
        VLTrn = "3173"
    Else
        VLTrn = "3202"
    End If

    
    If VGTipoEjecucion% <> CGReverso% Then
        If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
        VLTsnTemp = VGTSN
        'PMEgresoEfectivo Efe.ValueReal, VLTrn
        PMEgresoEfectivo SGUsar, VLTrn
    End If
    If SGAcumulado < 0 Then
        VLDescargar = 1
    End If

End Function
'--<lfcm 30-marzo-2009

'-->tc-12-octubre-2009
Function FLTransmitir_CPS_PORTA_consulta() As Boolean
    FLTransmitir_CPS_PORTA_consulta = False
    VLTsnTemp = 0
    'Validar envio de un Código Válido en la Consulta
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
    
    'Validar que el numero sea de 10 Digitos
    If Len(Trim(Ref.Text)) <> 10 Then 'dapv
        MsgBox "El Número de celular debe tener 10 Dígitos"
        Exit Function
    End If
    
    '******************** Consultar comision Inicio Tarea: RECA-CC-SGC00027715
    SGEmpresa = Me.Empresa.Text
    
    PMInicioTransaccion
    VLComsion = 0
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Me.Empresa, "CodigoEmpresa", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, "C", "Opcion", ""
    'PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, servicio1, "ServicioPerson", ""
    'PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, rubro, "RubroPerson", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        'MsgBox "datos de comision"
'        i_Comision = FMRetParamATX(VGSqlConn, 1)
'        i_VlbaseImp = FMRetParamATX(VGSqlConn, 3) 'base imponible
'        i_VLiva = FMRetParamATX(VGSqlConn, 4) 'IVA
        VLComsion = FMRetParamATX(VGSqlConn, 1)
        VlbaseImp = FMRetParamATX(VGSqlConn, 3)
        VLiva = FMRetParamATX(VGSqlConn, 4)

        'FLConsultarComision = True
        PMChequeaATX VGSqlConn&
        'PMFinTransaccion
    End If

    If VLComsion = 0 Then
      Comision.Enabled = False
    Else
      Comision.Enabled = True
      Me.Comision.Text = VLComsion
    
    End If
    PMFinTransaccion
    
     If Comision.Text > 0 Then
        VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
        If VGCom_aux <> CDbl(Comision.Text) Then
            VGComision_original = Comision.Text
            Comision.Text = VGCom_aux
            VLComsion = VGCom_aux
        Else
            VGComision_original = Comision.Text
        End If
     End If
    
    '******************* Fin consulta comision  RECA-CC-SGC00027715
    
    Consulta_parametro_OSB 'msilvag Bus Fase 2 Abril/20/2015 SOAF2-AP-SGC00019734-SGC00019742
    
    'llamar a la consulta
    PLTipoTransaccion
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62532, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref.Text), "", ""
    PMPasoValoresATX VGSqlConn, "@i_id_institucion", 0, SQLVARCHAR, Trim$("0018"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_id_canal", 0, SQLVARCHAR, Trim$("VENT"), "", ""
    '"PSSRV1" SOAF2-AP-SGC00019734-SGC00019742
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_cporta", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then 'msilvag Bus Fase 2 Abril/2015
      FLTransmitir_CPS_PORTA_consulta = True
      VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())                                        'lfcm 24-agosto-2009
      Nombre.Text = FLBuscarItem("@o_nombre_cliente")                   'Nombre del cliente                   lfcm 24-agosto-2009
      Total_Pagar.Text = FLBuscarItem("@o_valor")                  'Valor del cobro                      lfcm 24-agosto-2009
      VLDpCcodResp = FLBuscarItem("@o_id_repuesta")            'Código de Respuesta                  lfcm 24-agosto-2009
      VLDpCMsgError = FLBuscarItem("@o_mensaje_repuesta")                    'Mensaje de Error                     lfcm 24-agosto-2009
      efe.Enabled = True
      Loc.Enabled = True
      CantChq.Enabled = True
      Pago_Val.Enabled = True
      CboTipCta.Enabled = True
      Cta.Enabled = True
      Empresa.Enabled = False
      Servicio.Enabled = False
      Proceso.Enabled = False
      Ref.Enabled = False
      'Probar con valores negativos  lfcm 24-agosto-2009
'        If FMCCurATX((valor.Text)) > 0 Then
'            valor.Visible = True
'            lblValor(0).Visible = True
'        End If
'        If Right(VLValorTvCableOriginal, 1) = "-" Then
'            MsgBox "Atención : el monto es un saldo a favor del cliente", vbInformation, "Atención"
'        End If
      efe.SetFocus
   Else
      FLTransmitir_CPS_PORTA_consulta = False       'lfcm 24-agosto-2009
      PMChequeaATX VGSqlConn
   End If
   PMChequeaATX VGSqlConn
   PMFinTransaccion
End Function

Function FLTransmitir_CPS_PORTA_pago() As Boolean
   Dim VTIndicadorSum As Integer
   Dim i As Integer
   Dim VLValor As String
    
   FLTransmitir_CPS_PORTA_pago = False
    
'   If FMCCurATX(Me.Pago_Val) > Me.ValMaximo Then
'      MsgBox "Monto total a pagar sobrepasa al saldo de la deuda", vbExclamation, App.Title
'      Me.Pago_Val.SetFocus
'      Exit Function
'   End If
   
    If VGTipoEjecucion% <> CGReverso% Then
        PMInicioTransaccion
        If Not VGHorarioDif Then
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3925, "Trn", ""
        Else
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3926, "Trn", ""
        End If
        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
        PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "F", "Opcion", ""
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
        PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
        If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_servicio_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
            VLFechaContable = Format$(FMRetParamATX(VGSqlConn, 1), "yyyymmdd")
       Else
            MsgBox "Error no se pudo obtener la fecha contable", vbCritical, "Aviso"
            PMChequeaATX VGSqlConn
            PMFinTransaccion
            Exit Function
        End If
        PMChequeaATX VGSqlConn
        PMFinTransaccion
    End If
   
   Consulta_parametro_OSB 'msilvag Bus Fase 2 Abril/20/2015 SOAF2-AP-SGC00019734-SGC00019742
   
   VTIndicadorSum = 0
   VLTsnTemp = 0

   PMInicioTransaccion
      
   PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62531, "Trn", ""
   If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    'Else
        'PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
   End If
   'parametros para aplicar en el truco del reverso
   '-->
   'parametros para aplicar en el truco del reverso
   PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", ""
   PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
   PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
   PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""
   PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""
   PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "CompRet", ""
   PMPasoValoresATX VGSqlConn, "@i_cps", 0, SQLVARCHAR, "S", "indcps", ""
   PMPasoValoresATX VGSqlConn, "@i_saldo", 0, SQLMONEY, Total_Pagar.Text, "saldo", ""
   PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, "", "Proceso", ""
   '<--
   PMPasoValoresATX VGSqlConn, "@i_numero_telefono", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
   PMPasoValoresATX VGSqlConn, "@i_id_institucion", 0, SQLVARCHAR, Trim$("0018"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_id_canal", 0, SQLVARCHAR, "VENT", "Canal", ""
   PMPasoValoresATX VGSqlConn, "@i_pvalor", 0, SQLMONEY, Pago_Val.Text, "Efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_fecha_contable", 0, SQLVARCHAR, VLFechaContable, "", ""
   PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, Format(Date, "YYYYMMDD"), "", ""
   
   PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
   PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
   
   PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
   PMPasoValoresATX VGSqlConn, "@i_efe", 0, SQLMONEY, efe.Text, "Efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, Pago_Val.Text, "Efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
   PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
   PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, Reten.Text, "Retencion", ""
   
   'msilvag Inicio RECA-CC-SGC00027715
    If Me.Cta.ClipText <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (VLTipCta_com), "CboTipCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    End If

   PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "ComEfectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "ComCheques", ""
   PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, (VLDeb_com), "ComDebito", ""
   'msilvag Fin
   
   'PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "P", "Opcion", ""
   PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
   PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
   PMPasoValoresATX VGSqlConn, "@i_ind_costo", 0, SQLCHAR, "", "ind_costo", ""
   PMPasoValoresATX VGSqlConn, "@i_costo", 0, SQLMONEY, 0, "costo", ""
   PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
   PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
   PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (VLEfe_com), "Comision", ""
   PMPasoValoresATX VGSqlConn, "@i_campo_adic1", 0, SQLVARCHAR, "X", "id_porta", ""
   PMPasoValoresATX VGSqlConn, "@i_campo_adic2", 0, SQLVARCHAR, (Nombre), "nombre", ""
   'Output Parameters
   PMPasoValoresATX VGSqlConn, "@o_pid_porta", 1, SQLVARCHAR, "0", "Sec", ""
   PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
   PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, 0, "SecTrn", ""
   PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
   '"PSSRV1" SOAF2-AP-SGC00019734-SGC00019742
   
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
   
   If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "mp_pago_cporta", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then 'msilvag Bus Fase 2 Abril/20/2015
      'Obtengo en primer lugar los datos en ResultSet que puede devolver el CPS/CSP
      Dim psRetorno(1, 20)
      FLTransmitir_CPS_PORTA_pago = True   ''smerino comprobante de comision 23/06/2011
      FMMapeaMatriz VGSqlConn, psRetorno
      VLDpPReferenciaId = psRetorno(1, 1)         'secuencia PORTA
      VLDpPAutorizacion = psRetorno(1, 2)          'Autorizacion                      lfcm 24-agosto-2009      VLDpPMsgError = psRetorno(1, 7)        'Mensaje de Error                     lfcm 24-agosto-2009
      VLDpPMsg = psRetorno(1, 3)                   'Message
      
      'Limpio el Buffer para poder obtener los parametros de salida.
      PMChequeaATX VGSqlConn
      
      'Luego de limpiar el buffer, procedo a obtener los parametros de salida de acuerdo al Orden en que fueron pasados al CPS.
      'El orden de los parametros de salida deben ser iguales en FE, CPS, SP, etc.
      VLDpsecporta = FMRetParamATX(VGSqlConn, 1)        'SECUENCIAL
      VLDpPFechaEfectiva = FMRetParamATX(VGSqlConn, 2)        'Fecha Efectiva
      VLDpPSecuencialTrx = FMRetParamATX(VGSqlConn, 3)        'Secuencial
      If VGTipoEjecucion% <> CGReverso% Then
         VLDpPHorario = FMRetParamATX(VGSqlConn, 4)              'Horario
      End If

     'Me.ValMaximo.Text = FMRetParamATX(VGSqlConn, 4)
      'VLHorario = IIf(VLDpPHorario = "N", "N", "D")
      VLHorario = VLDpPHorario
      
      If VGTipoEjecucion% <> CGReverso% Then
         SGSecTrn$ = VLDpPSecuencialTrx
      Else
         SGSecTrn$ = VLDpPSecuencialTrx
      End If
      VLFechaCorte = Format(VLDpPFechaEfectiva, "mm/dd/yyyy")
      VTIndicadorSum = 1
      PMIniciaRegSum
      If VLconexion <> "F" Then
         VTIndicadorSum = 1
         PMIniciaRegSum
      End If
      If VLconexion <> "F" Then
         PMChequeaATX VGSqlConn
         PMTotalesBranch "51"
         FLTransmitir_CPS_PORTA_pago = True
         VLCambio% = False
      End If
   Else
      VLCambio% = True
      VLFechaCorte = ""
      FLTransmitir_CPS_PORTA_pago = False
      SGSecTrn$ = VLDpPSecuencialTrx
      VTIndicadorSum = 1
      PMChequeaATX VGSqlConn
   End If

   PMChequeaATX VGSqlConn
   If FMRetStatusATX(VGSqlConn) <> 0 Then
      FLTransmitir_CPS_PORTA_pago = False
      VLCambio% = True
      VTIndicadorSum = 0
      If Ref.Enabled Then
         Ref.SetFocus
      End If
   End If
   PMFinTransaccion
   
   
    'SMERINO IMPRESIÓN DE COMPROBANTE DE COBRO DE COMISIÓN  23/06/2011
    If FLTransmitir_CPS_PORTA_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura  'LLAMA A PROCEDIMIENTO DE FACTURA
    End If

   If VGTipoEjecucion% <> CGReverso% Then
      If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
         SGPrimeraVez = 0     ' ya no es primera vez
         'PMGrabaDesglose VLTrn, Efe.Text, VLCambio%
         PMGrabaDesglose VLTrn, SGUsar, VLCambio%
         If VLCambio% = True Then
            MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
         End If
         SGActual = 1  'seteo Variable para borrar desglose
      ElseIf VTIndicadorSum = 0 Then
         SGActual = 0  'no borrar desglose en caso de Error en Transaccion
      End If
   ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
      VLTsnTemp = VGTSN
      'PMEgresoEfectivo Efe.ValueReal, VLTrn
      PMEgresoEfectivo SGUsar, VLTrn
   End If
   If SGAcumulado < 0 Then
      VLDescargar = 1
   End If
End Function

'msilvag Inicio SGC00007024 Mar-18-2013
Sub ImprimeComprobanteElecQuito()
    VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte 'hy-31-ene-2005 Formatear fecha
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 28), 28, CGJustificacionIzquierda)
   'PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
   PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + " Proceso: " + "Factura" 'Trim(VLDpsecporta)
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   'PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Total_Pagar.Text, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms   '/*JPM 08122004*/
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + "   "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "   CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
'   If FMCCurATX((Reten.Text)) > 0 Then
'      PMSetDetalle "v" + "RETENCION:" + FMEspaciosATX(Trim(Comprob), 13, CGJustificacionIzquierda) + FMEspaciosATX(Format(Reten, VGFormatoMoney), 12, CGJustificacionDerecha)
'   End If
'   If FMCCurATX((Comision.Text)) > 0 Then
'      Coms = " COMISION: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " "
'   End If
   VLNeto = FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)  '/*cambio JPM 08122004*/
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms
   'VLSaldo = FMCCurATX(Me.ValMaximo.Text)
   'PMSetDetalle "v" + "SALDO DE LA TARJETA: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(VLDpPValorPendienteCobro), VGFormatoMoney), 12, CGJustificacionDerecha)     'tc 07272009
   '***ref14 vmirandt  inicio
     PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
     PMSetDetalle "v" + VLclave_acceso
     VGparleft$ = "10"
     VGpartop$ = "00"
   '***ref14 vmirandt fin
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))        'hy-categ agregar la moneda

End Sub

Public Sub PLImprimirElectQuito()

    If VLTotCom > 0 And VGTipoEjecucion = CGNormal% Then
        VGparlong$ = "66"  'smerino
        VGpartop$ = "00"
        VGparleft$ = "07" '05
        VGparrig$ = "00"
        
        'smerino cambia formato de fecha de emision
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
        Case Is = "01"
        mes2 = "Enero"
        Case Is = "02"
        mes2 = "Febrero"
        Case Is = "03"
           mes2 = "Marzo"
        Case Is = "04"
           mes2 = "Abril"
        Case Is = "05"
           mes2 = "Mayo"
        Case Is = "06"
           mes2 = "Junio"
        Case Is = "07"
           mes2 = "Julio"
        Case Is = "08"
           mes2 = "Agosto"
        Case Is = "09"
           mes2 = "Septiembre"
        Case Is = "10"
           mes2 = "Octubre"
        Case Is = "11"
           mes2 = "Noviembre"
        Case Is = "12"
           mes2 = "Diciembre"
       End Select
        
       VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
        
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        'PMSetDetalle "v" + "CI/RUC: " + Replace(VLCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        PMSetDetalle "v" + "Serv. Recaudacion  " + "Fecha: " + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "ENERGIA ELECTRICA            " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "Subtotal:    " + FMEspaciosATX(Format(VlbaseImp, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(VLiva, VGFormatoMoney), 8, CGJustificacionDerecha) 'dpereirv
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
        If VLTipo_imp = "O" Then
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "      " + "Original: Adquiriente"
        Else
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
        End If
        
        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If
    
        FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn
End If
    
End Sub
'msilvag Fin

'msilvag Inicio ETAPA-AP-SGC00018437-SGC00018451 25/Mayo/2015
Sub ImprimeComprobanteEtapa()
    VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte 'hy-31-ene-2005 Formatear fecha
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa1) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   'PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
   If VGTipoEjecucion = CGReverso Then
        PMSetDetalle "v" + "Tipo Servicio:" + Trim(VLDescripServicio) + " " + "Autorizacion: " + (Trim(VLNumTransaccion)) 'ref14 vmirandt
        'PMSetDetalle "v" + "Autorizacion: " + (Trim(VLNumTransaccion))
        If (Trim(VLCodDocEtapaReverso)) = "null" Then
            VLCodDocEtapaReverso = "0"
        End If
        PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + " Doc. ETAPA:: " + (Trim(VLCodDocEtapaReverso)) '(Trim(VLCodDocEtapa))
   Else
        PMSetDetalle "v" + "Tipo Servicio: " + Trim(VLDescripServicio)
        PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + " Transaccion: " + (Trim(VLNumTransaccion))
   End If
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Me.Total.Text, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + "   "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "   CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
'   If FMCCurATX((Reten.Text)) > 0 Then
'      PMSetDetalle "v" + "RETENCION:" + FMEspaciosATX(Trim(Comprob), 13, CGJustificacionIzquierda) + FMEspaciosATX(Format(Reten, VGFormatoMoney), 12, CGJustificacionDerecha)
'   End If
   If FMCCurATX((Comision.Text)) > 0 Then
      Coms = " COMISION: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " "
   End If
   VLNeto = FMCCurATX(Pago_Val.Text) '- FMCCurATX(Comision.Text)
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms
   'VLSaldo = FMCCurATX(Me.ValMaximo.Text)
   'PMSetDetalle "v" + "SALDO DE LA TARJETA: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(VLDpPValorPendienteCobro), VGFormatoMoney), 12, CGJustificacionDerecha)     'tc 07272009
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt
    
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51"))), , VLVerde      'hy-categ agregar la moneda

End Sub

Public Sub PLImprimirEtapa()

    If VLTotCom > 0 And VGTipoEjecucion = CGNormal% Then
        VGparlong$ = "66"  'smerino
        VGpartop$ = "00"
        VGparleft$ = "07" '05
        VGparrig$ = "00"
        
        'smerino cambia formato de fecha de emision
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
        Case Is = "01"
        mes2 = "Enero"
        Case Is = "02"
        mes2 = "Febrero"
        Case Is = "03"
           mes2 = "Marzo"
        Case Is = "04"
           mes2 = "Abril"
        Case Is = "05"
           mes2 = "Mayo"
        Case Is = "06"
           mes2 = "Junio"
        Case Is = "07"
           mes2 = "Julio"
        Case Is = "08"
           mes2 = "Agosto"
        Case Is = "09"
           mes2 = "Septiembre"
        Case Is = "10"
           mes2 = "Octubre"
        Case Is = "11"
           mes2 = "Noviembre"
        Case Is = "12"
           mes2 = "Diciembre"
       End Select
        
       VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
        
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        'PMSetDetalle "v" + "CI/RUC: " + Replace(VLCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        PMSetDetalle "v" + "Serv. Recaudacion  " + "Fecha: " + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "ENERGIA ELECTRICA            " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "Subtotal:    " + FMEspaciosATX(Format(VlbaseImp, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(VLiva, VGFormatoMoney), 8, CGJustificacionDerecha) 'dpereirv
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
        If VLTipo_imp = "O" Then
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "      " + "Original: Adquiriente"
        Else
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
        End If
        
        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If
    
        FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn
End If
    
End Sub

'msilvag FIn ETAPA-AP-SGC00018437-SGC00018451

Sub ImprimeComprobantePORTA()
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte 'hy-31-ene-2005 Formatear fecha
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "No. Celular: " + Trim(Ref) + " " + " No.Aut: " + Trim(VLDpsecporta)
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Total_Pagar.Text, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms   '/*JPM 08122004*/
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + "   "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "   CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   If FMCCurATX((Reten.Text)) > 0 Then
      PMSetDetalle "v" + "RETENCION:" + FMEspaciosATX(Trim(Comprob), 13, CGJustificacionIzquierda) + FMEspaciosATX(Format(Reten, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If FMCCurATX((Comision.Text)) > 0 Then
      'Coms = " COMISION: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " "
      Coms = " CARGO.SERV.F: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " " 'msilvag RECA-CC-SGC00027715
   End If
   VLNeto = FMCCurATX(Pago_Val.Text) '- FMCCurATX(Comision.Text)  '/*cambio JPM 08122004*/
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms  '/*JPM 08122004*/
   'VLSaldo = FMCCurATX(Me.ValMaximo.Text)
   'PMSetDetalle "v" + "SALDO DE LA TARJETA: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(VLDpPValorPendienteCobro), VGFormatoMoney), 12, CGJustificacionDerecha)     'tc 07272009
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGparleft$ = "10"
    VGpartop$ = "00"
    'ref14 vmirandt
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))        'hy-categ agregar la moneda
End Sub


'-->tc-17-julio-2009
Function FLTransmitir_CPS_DEPRATI_consulta() As Boolean
    FLTransmitir_CPS_DEPRATI_consulta = False
    VLTsnTemp = 0
    'Validar envio de un Código Válido en la Consulta de TvCable lfcm 03-enero-2008
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo Cédula/Tarjeta es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX" 'lgusnayc ref019
        Exit Function
    End If
   'Validar envio de un Código Válido en la Consulta de TvCable lfcm 03-enero-2008
    'llamar a la consulta
     SGEmpresa = Me.Empresa.Text

If FLObtenerComisionDEPRATI = True Then
    PLTipoTransaccion
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62206, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_transaccion", 0, SQLVARCHAR, Trim$("100"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodifi", 0, SQLVARCHAR, Trim$("00018"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pterminal", 0, SQLVARCHAR, Trim$(Mid(VGterminal, 1, 4)), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfecha_contable", 0, SQLVARCHAR, Format(VGFechaProceso, "YYYYMMDD"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechatrxlocal", 0, SQLVARCHAR, Format(Date, "YYYYMMDD"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_phora_trx_local", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref.Text), "", ""
   'If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_consulta_deprati", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
   If FMTransmitirRPCATX(VGSqlConn, "BBTSSRV", "cob_procesador", "fp_consulta_deprati", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then 'msilvag RECM-307 Deprati Migracion
      FLTransmitir_CPS_DEPRATI_consulta = True
      VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())                                        'lfcm 24-agosto-2009
      VLDpCAuxiliar = FLBuscarItem("@o_auxiliar")               'Campo no especificado en la trama    lfcm 24-agosto-2009
      Nombre.Text = FLBuscarItem("@o_nombre")                   'Nombre del cliente                   lfcm 24-agosto-2009
      ValMaximo.Text = FLBuscarItem("@o_saldo")                 'Valor del cobro                      lfcm 24-agosto-2009
      ValMinimo.Text = FLBuscarItem("@o_minimo")                'Valor Minimo del Cobro               lfcm 24-agosto-2009
      VLDpCFechaVenCobro = FLBuscarItem("@o_fecha_tope")        'Fecha de Vencimiento del Cobro       lfcm 24-agosto-2009
      VLDpCReferenciaCed = FLBuscarItem("@o_auxiliar")          'msilvag RECM-307 Referencia - Numero de Cédula        lfcm 24-agosto-2009
      'VLDpCcodResp = FLBuscarItem("@o_autorizacion")           'msilvag RECM-307  Código de Respuesta                  lfcm 24-agosto-2009
      VLDpCMsgError = FLBuscarItem("@o_msg")                    'Mensaje de Error                     lfcm 24-agosto-2009
      efe.Enabled = True
      Loc.Enabled = True
      CantChq.Enabled = True
      Pago_Val.Enabled = True
      CboTipCta.Enabled = True
      Cta.Enabled = True
      Empresa.Enabled = False
      Servicio.Enabled = False
      Proceso.Enabled = False
      Ref.Enabled = False
      efe.SetFocus
   Else
      FLTransmitir_CPS_DEPRATI_consulta = False       'lfcm 24-agosto-2009
      PMChequeaATX VGSqlConn
   End If
   PMChequeaATX VGSqlConn
   PMFinTransaccion
End If

End Function

Function FLTransmitir_CPS_DEPRATI_pago() As Boolean
   Dim VTIndicadorSum As Integer
   Dim i As Integer
   Dim VLValor As String
    
   FLTransmitir_CPS_DEPRATI_pago = False
    
   If FMCCurATX(Me.Pago_Val) > Me.ValMaximo Then
      MsgBox "Monto total a pagar sobrepasa al saldo de la deuda", vbExclamation, App.Title
      Me.Pago_Val.SetFocus
      Exit Function
   End If
   
   
   
    If VGTipoEjecucion% <> CGReverso% Then
            'LECTURA DE LA COMISION Y DATA DEL SRI
            PMInicioTransaccion
            If Not VGHorarioDif Then
                PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3925, "Trn", ""
            Else
                PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3926, "Trn", ""
            End If
            PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
            PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
            PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "B", "Opcion", ""
            PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
            PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
            PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
            PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "AutorizacionSRI", ""
            PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "fevensri", ""
            PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, Space(15), "Nota_venta", ""
            If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_servicio_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                VLautoriSri = FMRetParamATX(VGSqlConn, 2)
                VLFecvenSRI = FMRetParamATX(VGSqlConn, 3)
                VLSerie_Secuencia = FMRetParamATX(VGSqlConn, 4)
            Else
                MsgBox "Error no se pudo obtener codigo de nota de venta", vbCritical, "Aviso"
            End If
            PMChequeaATX VGSqlConn
            PMFinTransaccion
    
        PMInicioTransaccion
        If Not VGHorarioDif Then
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3925, "Trn", ""
        Else
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 3926, "Trn", ""
        End If
        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
        PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "F", "Opcion", ""
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
        PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
        If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_servicio_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
            VLFechaContable = Format$(FMRetParamATX(VGSqlConn, 1), "yyyymmdd")
        Else
            MsgBox "Error no se pudo obtener la fecha contable", vbCritical, "Aviso"
            PMChequeaATX VGSqlConn
            PMFinTransaccion
            Exit Function
        End If
        PMChequeaATX VGSqlConn
        PMFinTransaccion
    End If
   
   VTIndicadorSum = 0
   VLTsnTemp = 0

   PMInicioTransaccion
   PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62205, "Trn", ""
   
   'msilvag Inicio RECM-304 Migracion Bus Deprati
   If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
   End If
   'msilvag fin
   
   'PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
   'parametros para aplicar en el truco del reverso
   '-->
   'parametros para aplicar en el truco del reverso
   PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", ""
   PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
   PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
   PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""
   PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""
   PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "CompRet", ""
   PMPasoValoresATX VGSqlConn, "@i_cps", 0, SQLVARCHAR, "S", "indcps", ""
   PMPasoValoresATX VGSqlConn, "@i_minimo", 0, SQLMONEY, ValMinimo.Text, "minimo", ""
   PMPasoValoresATX VGSqlConn, "@i_saldo", 0, SQLMONEY, ValMaximo.Text, "maximo", ""
   PMPasoValoresATX VGSqlConn, "@i_cedula", 0, SQLVARCHAR, Trim(VLDpCReferenciaCed), "cedula", ""
   '<--
   PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
   PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
   PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
   PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
   PMPasoValoresATX VGSqlConn, "@i_efe", 0, SQLMONEY, efe.Text, "Efectivo", ""
   'PMPasoValoresATX VGSqlConn, "@i_cedula", 0, SQLVARCHAR, Trim(txtced.Text), "cedula", ""
   PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, Pago_Val.Text, "Efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
   PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
   PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, Reten.Text, "Retencion", ""
'   PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
'   PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
   PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
   PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
   PMPasoValoresATX VGSqlConn, "@i_ind_costo", 0, SQLCHAR, "", "ind_costo", ""
   PMPasoValoresATX VGSqlConn, "@i_costo", 0, SQLMONEY, Me.Comision.Text, "costo", ""  '"0" msilvag RECM-304 Deprati
   PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
   PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
   PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (Comision.Text), "Comision", ""
'   PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
'   PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""

    If Me.Cta.ClipText <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (VLTipCta_com), "CboTipCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    End If

   PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "ComEfectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "ComCheques", ""
   PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, (VLDeb_com), "ComDebito", ""

   PMPasoValoresATX VGSqlConn, "@i_campo_adic1", 0, SQLVARCHAR, Trim(VLDpCReferenciaCed), "cedula", ""
   PMPasoValoresATX VGSqlConn, "@i_ptipo_transaccion", 0, SQLVARCHAR, Trim$("200"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pcodifi", 0, SQLVARCHAR, Trim$("00018"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pterminal", 0, SQLVARCHAR, Trim$(Mid(VGterminal, 1, 4)), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pfecha_contable", 0, SQLVARCHAR, VLFechaContable, "", ""
   PMPasoValoresATX VGSqlConn, "@i_pfechatrxlocal", 0, SQLVARCHAR, Format(Date, "YYYYMMDD"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_phora_trx_local", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "", ""
   PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
   PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, 0, "SecTrn", ""
   PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
   
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
   
   'If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "mp_pago_deprati", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
   If FMTransmitirRPCATX(VGSqlConn, "BBTSSRV", "cob_procesador", "mp_pago_deprati", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then 'msilvag RECM-304 Deprati Migracion
      'Obtengo en primer lugar los datos en ResultSet que puede devolver el CPS/CSP
      'msilvag Inicio RECM-304 Comento bloque de
      'Dim psRetorno(1, 20)
      'FMMapeaMatriz VGSqlConn, psRetorno
      'VLDpPNombre = psRetorno(1, 2)               'Nombre
      'VLDpPValorPendienteCobro = CCur(psRetorno(1, 3))   'Valor Pendiente de Cobro
      'VLDpPFechaVenCobro = psRetorno(1, 4)         'Fecha Vencimiento del Cobro
      'VLDpPReferenciaCed = psRetorno(1, 5)         'Referencia Cedula
      'VLDpPMsg = psRetorno(1, 7)                   'Message
      'msilvag fin comento bloque
      
      'msilvag Inicio RECM-304 Migracion Deprati
      VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
      VLDpPNombre = FLBuscarItem("@o_nombre")
      VLDpPValorPendienteCobro = FLBuscarItem("@o_saldo_promedio")
      'If VLDpPValorPendienteCobro = "" Then
       ' VLDpPValorPendienteCobro = 0
      'End If
      VLDpPFechaVenCobro = FLBuscarItem("@o_fecha_tope")
      VLDpPReferenciaCed = FLBuscarItem("@o_identificacion")
      'msilvag Fin
        
      'Limpio el Buffer para poder obtener los parametros de salida.
      PMChequeaATX VGSqlConn
      
      'Luego de limpiar el buffer, procedo a obtener los parametros de salida de acuerdo al Orden en que fueron pasados al CPS.
      'El orden de los parametros de salida deben ser iguales en FE, CPS, SP, etc.
      VLDpPFechaEfectiva = FMRetParamATX(VGSqlConn, 1)        'Fecha Efectiva
      VLDpPFechaEfectiva = FLBuscarItem("@o_fecha_efe")      'msilvag RECM-304 Deprati
      VLDpPSecuencialTrx = FMRetParamATX(VGSqlConn, 2)        'Secuencial
      If VGTipoEjecucion% <> CGReverso% Then
         VLDpPHorario = FMRetParamATX(VGSqlConn, 3)              'Horario
      End If

      VLHorario = VLDpPHorario
      
      If VGTipoEjecucion% <> CGReverso% Then
         SGSecTrn$ = VLDpPSecuencialTrx
      Else
         SGSecTrn$ = VLDpPSecuencialTrx
      End If
      VLFechaCorte = Format(VLDpPFechaEfectiva, "mm/dd/yyyy")
      VTIndicadorSum = 1
      PMIniciaRegSum
      If VLconexion <> "F" Then
         VTIndicadorSum = 1
         PMIniciaRegSum
      End If
      If VLconexion <> "F" Then
         PMChequeaATX VGSqlConn
         PMTotalesBranch "51"
         FLTransmitir_CPS_DEPRATI_pago = True
         VLCambio% = False
      End If
   Else
      VLCambio% = True
      VLFechaCorte = ""
      FLTransmitir_CPS_DEPRATI_pago = False
      SGSecTrn$ = VLDpPSecuencialTrx
      VTIndicadorSum = 1
      PMChequeaATX VGSqlConn
   End If

   PMChequeaATX VGSqlConn
   If FMRetStatusATX(VGSqlConn) <> 0 Then
      FLTransmitir_CPS_DEPRATI_pago = False
      VLCambio% = True
      VTIndicadorSum = 0
      If Ref.Enabled Then
         Ref.SetFocus
      End If
   End If
   PMFinTransaccion
   
   'smerino 06/30/2011
    If FLTransmitir_CPS_DEPRATI_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If

   If VGTipoEjecucion% <> CGReverso% Then
      If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
         SGPrimeraVez = 0     ' ya no es primera vez
         'PMGrabaDesglose VLTrn, Efe.Text, VLCambio%
         PMGrabaDesglose VLTrn, SGUsar, VLCambio%
         If VLCambio% = True Then
            MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
         End If
         SGActual = 1  'seteo Variable para borrar desglose
      ElseIf VTIndicadorSum = 0 Then
         SGActual = 0  'no borrar desglose en caso de Error en Transaccion
      End If
   ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
      VLTsnTemp = VGTSN
      'PMEgresoEfectivo Efe.ValueReal, VLTrn
      PMEgresoEfectivo SGUsar, VLTrn
   End If
   If SGAcumulado < 0 Then
      VLDescargar = 1
   End If
   
End Function


Sub ImprimeComprobanteDePrati()
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If
   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte 'hy-31-ene-2005 Formatear fecha
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "Cedula/Tarjeta: " + Trim(Ref) + " " + IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "") 'lgusnayc ref019
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "CTA.: " + Format(Cta.ClipText, "000-000000-0") + " DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 15, CGJustificacionDerecha)
   End If
   If FMCCurATX((Reten.Text)) > 0 Then
      PMSetDetalle "v" + "RETENCION:" + FMEspaciosATX(Trim(Comprob), 13, CGJustificacionIzquierda) + FMEspaciosATX(Format(Reten, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If FMCCurATX((Comision.Text)) > 0 Then
      Coms = " COMISION: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " "
   End If
   VLNeto = FMCCurATX(Pago_Val.Text) '- FMCCurATX(Comision.Text)  '/*cambio JPM 08122004*/
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) '+ Coms  '/*JPM 08122004*/
   'VLSaldo = FMCCurATX(Me.ValMaximo.Text)
   PMSetDetalle "v" + "SALDO DE LA TARJETA: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(VLDpPValorPendienteCobro), VGFormatoMoney), 12, CGJustificacionDerecha)     'tc 07272009
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
 '***ref14 vmirandt inicio
   If VLclave_acceso <> "" Then
      PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
      PMSetDetalle "v" + VLclave_acceso '***ref14 vmirandt agua
   End If
   VGparleft$ = "8"
   VGpartop$ = "00"
 '***ref14 vmirandt  fin
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))      'hy-categ agregar la moneda
End Sub
'--> tcumbico 21/01/2010 Comision DEPRATI
Function FLObtenerComisionDEPRATI() As Boolean
FLObtenerComisionDEPRATI = False
    DoEvents
    'LECTURA DE LA COMISION Y DATA DEL SRI
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3218", "Transaccion", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "Q", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, Empresa.Text, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_rubro", 0, SQLVARCHAR, "PDPR", "RubroComision", ""
    PMPasoValoresATX VGSqlConn, "@i_servicios", 0, SQLVARCHAR, "CSPR", "ServicioComision", ""
    PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, Comision.Text, "Comision", ""
    'INI - dpereirv
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'FIN - dpereirv
    
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_servicio_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        Comision = FMRetParamATX(VGSqlConn, 1)
        VlbaseImp = FMRetParamATX(VGSqlConn, 3) 'dpereirv
        VLiva = FMRetParamATX(VGSqlConn, 4) 'dpereirv
        PMChequeaATX VGSqlConn
        PMFinTransaccion
        'LBP Inicio RECA-CC-SGC00025869
        If Comision > 0 Then
            VGCom_aux = FMDevuelveComisionReal(CDbl(Comision), False, 51)
            If VGCom_aux <> CDbl(Comision) And VGCom_aux > 0 Then
                VGComision_original = Comision
                Comision = VGCom_aux
            Else
                VGComision_original = Comision
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        FLObtenerComisionDEPRATI = True
        If CCur(Comision.Text) > 0 Then
            Comision.Enabled = True
            Total.Text = FMCCurATX(Comision.Text)
        End If
        Exit Function
    Else
        MsgBox "Error no se pudo obtener la comisión", vbCritical, "Aviso"
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function
'--> tcumbico 21/01/2010 Comision DEPRATI
'--> tcumbico 19/02/2010 impresion nota de venta TRIPLEORO inicio
Public Sub PLImprimirNotaTRIPLEORO()
    If VLTotCom > 0 And VGTipoEjecucion = CGNormal% Then
    
  
        VGparlong$ = "66"  'smerino
        VGpartop$ = "00"
        VGparleft$ = "07" '05
        VGparrig$ = "00"
        
             'smerino cambia formato de fecha de emision
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
        Case Is = "01"
        mes2 = "Enero"
        Case Is = "02"
        mes2 = "Febrero"
        Case Is = "03"
           mes2 = "Marzo"
        Case Is = "04"
           mes2 = "Abril"
        Case Is = "05"
           mes2 = "Mayo"
        Case Is = "06"
           mes2 = "Junio"
        Case Is = "07"
           mes2 = "Julio"
        Case Is = "08"
           mes2 = "Agosto"
        Case Is = "09"
           mes2 = "Septiembre"
        Case Is = "10"
           mes2 = "Octubre"
        Case Is = "11"
           mes2 = "Noviembre"
        Case Is = "12"
           mes2 = "Diciembre"
       End Select
        
       VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
 
        
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        'PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha:" + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + Trim(lblservicio.Caption) + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "Subtotal:      " + FMEspaciosATX(Format(VlbaseImp, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(VLiva, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
     If VLTipo_imp = "O" Then
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
     Else
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
     End If
        
        'PMSetDetalle "v" + " "
        
        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If
    
     
 
 FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn

    
'    'If VLTotCom > 0 Then
'        PMInicioImpresion "IMPRESORA_1"
'        PMBorrarDatosImpresion
'
'        VGparlong$ = "66"
'        VGpartop$ = "00"
'        VGparleft$ = "10"
'        VGparrig$ = "00"
'
'        PMSetLineaImpresion "x" + "Inserte COMPROBANTE Cobro Comision"
'        PMSetLineaImpresion "<"
'
'        PMSetLineaImpresion "!" & VGpartop$
'        PMSetLineaImpresion "%N" & VGparleft$
'
'        PMSetLineaImpresion "v" + "BANCO BOLIVARIANO S.A.     FACTURA"
'        PMSetLineaImpresion "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
'        PMSetLineaImpresion "v" + "Junin 200 y Panama         " + "No.Autoriz.:" + VLautoriSri
'        PMSetLineaImpresion "v" + "CONTRIBUYENTE ESPECIAL     " + "Validez :" + VLFecvenSRI
'        PMSetLineaImpresion "v" + "NOTIFICACION No. 39 de Julio 18 de 1995"
'        PMSetLineaImpresion "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
'        PMSetLineaImpresion "v" + "Sr.(es): " + (SGNombre)
'        PMSetLineaImpresion "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
'        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
'        PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
'        PMSetLineaImpresion "v" + Trim(lblServicio.Caption) + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "Subtotal:      " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(0, VGFormatoMoney), 8, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
'     If VLTipo_imp = "O" Then
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
'     Else
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
'     End If
'
'        PMSetLineaImpresion "v" + " "
'
'        If VGModeloImp$ = "590" Then
'            PMSetLineaImpresion "%R" & 8
'        End If
'
'        PMSetLineaImpresion ">"
'
'        PMImprimir "IMPRESORA_1", False
'        PMFinImpresion "IMPRESORA_1"
'        'VGHorarioDif = VLHorarioDifTemporal 'comenta ame 08/17/2010

    End If
    
End Sub
'--> tcumbico 19/02/2010 impresion nota de venta TRIPLEORO fin

'--> gmedinac 02/16/2012 impresion nota de venta MARGLOBAL INI
Public Sub PLImprimirNotaMARGLOBAL()

    If VLTotCom > 0 And VGTipoEjecucion = CGNormal% Then
    
  
        VGparlong$ = "66"  'smerino
        VGpartop$ = "00"
        VGparleft$ = "07" '05
        VGparrig$ = "00"
        
             'smerino cambia formato de fecha de emision
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
        Case Is = "01"
        mes2 = "Enero"
        Case Is = "02"
        mes2 = "Febrero"
        Case Is = "03"
           mes2 = "Marzo"
        Case Is = "04"
           mes2 = "Abril"
        Case Is = "05"
           mes2 = "Mayo"
        Case Is = "06"
           mes2 = "Junio"
        Case Is = "07"
           mes2 = "Julio"
        Case Is = "08"
           mes2 = "Agosto"
        Case Is = "09"
           mes2 = "Septiembre"
        Case Is = "10"
           mes2 = "Octubre"
        Case Is = "11"
           mes2 = "Noviembre"
        Case Is = "12"
           mes2 = "Diciembre"
       End Select
        
       VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
 
        
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        'PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha:" + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + Trim(lblservicio.Caption) + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "Subtotal:      " + FMEspaciosATX(Format(VlbaseImp, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(VLiva, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
     If VLTipo_imp = "O" Then
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
     Else
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
     End If
        
        'PMSetDetalle "v" + " "
        
        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If
    
     
 
 FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn

    
'    'If VLTotCom > 0 Then
'        PMInicioImpresion "IMPRESORA_1"
'        PMBorrarDatosImpresion
'
'        VGparlong$ = "66"
'        VGpartop$ = "00"
'        VGparleft$ = "10"
'        VGparrig$ = "00"
'
'        PMSetLineaImpresion "x" + "Inserte COMPROBANTE Cobro Comision"
'        PMSetLineaImpresion "<"
'
'        PMSetLineaImpresion "!" & VGpartop$
'        PMSetLineaImpresion "%N" & VGparleft$
'
'        PMSetLineaImpresion "v" + "BANCO BOLIVARIANO S.A.     FACTURA"
'        PMSetLineaImpresion "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
'        PMSetLineaImpresion "v" + "Junin 200 y Panama         " + "No.Autoriz.:" + VLautoriSri
'        PMSetLineaImpresion "v" + "CONTRIBUYENTE ESPECIAL     " + "Validez :" + VLFecvenSRI
'        PMSetLineaImpresion "v" + "NOTIFICACION No. 39 de Julio 18 de 1995"
'        PMSetLineaImpresion "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
'        PMSetLineaImpresion "v" + "Sr.(es): " + (SGNombre)
'        PMSetLineaImpresion "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
'        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
'        PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
'        PMSetLineaImpresion "v" + Trim(lblServicio.Caption) + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "Subtotal:      " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(0, VGFormatoMoney), 8, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
'     If VLTipo_imp = "O" Then
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
'     Else
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
'     End If
'
'        PMSetLineaImpresion "v" + " "
'
'        If VGModeloImp$ = "590" Then
'            PMSetLineaImpresion "%R" & 8
'        End If
'
'        PMSetLineaImpresion ">"
'
'        PMImprimir "IMPRESORA_1", False
'        PMFinImpresion "IMPRESORA_1"
'        'VGHorarioDif = VLHorarioDifTemporal 'comenta ame 08/17/2010

    End If
    
End Sub
'--> tcumbico 19/02/2010 impresion nota de venta TRIPLEORO fin


'smerinom belcorp
Sub ImprimeComprobanteServicio()
    VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " "
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)

   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + "   "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "   CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If

   VLNeto = FMCCurATX(Pago_Val.Text) '-FMCCurATX(Comision.Text)   '/*cambio JPM 08122004*/
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))        'hy-categ agregar la moneda

End Sub
'belcorp
Public Sub PLImprimirServicio()

    If VLTotCom > 0 And VGTipoEjecucion = CGNormal% Then
        VGparlong$ = "66"  'smerino
        VGpartop$ = "00"
        VGparleft$ = "07" '05
        VGparrig$ = "00"
        
        'smerino cambia formato de fecha de emision
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
        Case Is = "01"
        mes2 = "Enero"
        Case Is = "02"
        mes2 = "Febrero"
        Case Is = "03"
           mes2 = "Marzo"
        Case Is = "04"
           mes2 = "Abril"
        Case Is = "05"
           mes2 = "Mayo"
        Case Is = "06"
           mes2 = "Junio"
        Case Is = "07"
           mes2 = "Julio"
        Case Is = "08"
           mes2 = "Agosto"
        Case Is = "09"
           mes2 = "Septiembre"
        Case Is = "10"
           mes2 = "Octubre"
        Case Is = "11"
           mes2 = "Noviembre"
        Case Is = "12"
           mes2 = "Diciembre"
       End Select
        
       VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
        
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        'PMSetDetalle "v" + "CI/RUC: " + Replace(VLCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        PMSetDetalle "v" + "Serv. Recaudacion  " + "Fecha: " + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "ENERGIA ELECTRICA            " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "Subtotal:    " + FMEspaciosATX(Format(VlbaseImp, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(VLiva, VGFormatoMoney), 8, CGJustificacionDerecha) 'dpereirv
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
        If VLTipo_imp = "O" Then
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "      " + "Original: Adquiriente"
        Else
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
        End If
        
        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If
    
        FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn
End If
    
End Sub
'--> SMERINO 23/06/2011 nota de venta PORTA
Public Sub PLImprimirNotaPorta()

    If VLTotCom > 0 And VGTipoEjecucion = CGNormal% Then
        VGparlong$ = "66"  'smerino
        VGpartop$ = "00"
        VGparleft$ = "07" '05
        VGparrig$ = "00"
        
        'smerino cambia formato de fecha de emision
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
        Case Is = "01"
        mes2 = "Enero"
        Case Is = "02"
        mes2 = "Febrero"
        Case Is = "03"
           mes2 = "Marzo"
        Case Is = "04"
           mes2 = "Abril"
        Case Is = "05"
           mes2 = "Mayo"
        Case Is = "06"
           mes2 = "Junio"
        Case Is = "07"
           mes2 = "Julio"
        Case Is = "08"
           mes2 = "Agosto"
        Case Is = "09"
           mes2 = "Septiembre"
        Case Is = "10"
           mes2 = "Octubre"
        Case Is = "11"
           mes2 = "Noviembre"
        Case Is = "12"
           mes2 = "Diciembre"
       End Select
        
       VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
        
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        'PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha: " + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "PORTA:                   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "Subtotal:      " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(0, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
     If VLTipo_imp = "O" Then
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
     Else
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
     End If
        
       ' PMSetDetalle "v" + " "
        
        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If
    
       
 FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn
'  'PAOLA PRUEBA
'
End If
    
End Sub



'--> tcumbico 22/01/2010 nota de venta DEPRATI
Public Sub PLImprimirNotaDeprati()

    If VLTotCom > 0 And VGTipoEjecucion = CGNormal% Then
        VGparlong$ = "66"  'smerino
        VGpartop$ = "00"
        VGparleft$ = "07" '05
        VGparrig$ = "00"
        
                'smerino cambia formato de fecha de emision
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
        Case Is = "01"
        mes2 = "Enero"
        Case Is = "02"
        mes2 = "Febrero"
        Case Is = "03"
           mes2 = "Marzo"
        Case Is = "04"
           mes2 = "Abril"
        Case Is = "05"
           mes2 = "Mayo"
        Case Is = "06"
           mes2 = "Junio"
        Case Is = "07"
           mes2 = "Julio"
        Case Is = "08"
           mes2 = "Agosto"
        Case Is = "09"
           mes2 = "Septiembre"
        Case Is = "10"
           mes2 = "Octubre"
        Case Is = "11"
           mes2 = "Noviembre"
        Case Is = "12"
           mes2 = "Diciembre"
       End Select
        
       VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
        
        
        
        
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        'PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "Costo Serv. Recaudacion  " + "Fecha: " + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "Servicios Varios:                   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "Subtotal:      " + FMEspaciosATX(Format(VlbaseImp, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(VLiva, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
     If VLTipo_imp = "O" Then
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "      " + "Original: Adquiriente"
     Else
        PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
     End If
        
    If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If
    
       
 FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn

    
  
'    'If VLTotCom > 0 Then
'        PMInicioImpresion "IMPRESORA_1"
'        PMBorrarDatosImpresion
'
'        VGparlong$ = "66"
'        VGpartop$ = "00"
'        VGparleft$ = "10"
'        VGparrig$ = "00"
'
'        PMSetLineaImpresion "x" + "Inserte COMPROBANTE Cobro Comision"
'        PMSetLineaImpresion "<"
'
'        PMSetLineaImpresion "!" & VGpartop$
'        PMSetLineaImpresion "%N" & VGparleft$
'
'        PMSetLineaImpresion "v" + "BANCO BOLIVARIANO S.A.     FACTURA"
'        PMSetLineaImpresion "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
'        PMSetLineaImpresion "v" + "Junin 200 y Panama         " + "No.Autoriz.:" + VLautoriSri
'        PMSetLineaImpresion "v" + "CONTRIBUYENTE ESPECIAL     " + "Validez :" + VLFecvenSRI
'        PMSetLineaImpresion "v" + "NOTIFICACION No. 39 de Julio 18 de 1995"
'        PMSetLineaImpresion "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
'        PMSetLineaImpresion "v" + "Sr.(es): " + (SGNombre)
'        PMSetLineaImpresion "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
'        'PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
'        PMSetLineaImpresion "v" + "Costo Serv. Recaudacion  " + "Fecha: " + Format(VGFechaProceso, VGFormatoFecha$) + " " + IIf(VGHorarioDif, "H:D", "H:N")
'        PMSetLineaImpresion "v" + "DEPRATI:                   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "Subtotal:      " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(0, VGFormatoMoney), 8, CGJustificacionDerecha)
'        PMSetLineaImpresion "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
'     If VLTipo_imp = "O" Then
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
'     Else
'        PMSetLineaImpresion "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
'     End If
'
'        PMSetLineaImpresion "v" + " "
'
'        If VGModeloImp$ = "590" Then
'            PMSetLineaImpresion "%R" & 8
'        End If
'
'        PMSetLineaImpresion ">"
'
'        PMImprimir "IMPRESORA_1", False
'        PMFinImpresion "IMPRESORA_1"
'        ' VGHorarioDif = VLHorarioDifTemporal 'comenta ame 08/17/2010

    End If
    
End Sub
'--> tcumbico 22/01/2010 nota de venta DEPRATI


 
'--> tcumbico 17/02/2010 pago TRIPLEORO inicio
Function FLTransmitir_TRIPLEORO_pago() As Integer
Dim VTIndicadorSum As Integer
Dim i As Integer

FLTransmitir_TRIPLEORO_pago = False
  
  If FMCCurATX(Me.Pago_Val) > FMCCurATX(Total_Pagar.Text) Then
      MsgBox "Monto total a pagar sobrepasa al saldo de la deuda", vbExclamation, App.Title
      Me.Pago_Val.SetFocus
      Exit Function
   End If
   
    VLTsnTemp = 0
    VTIndicadorSum = 0
    PMInicioTransaccion
    VLReverso$ = "S"
    PLTipoTransaccion
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    arrParOut_init
        'Inicio de Paso de Valores al SP
        PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, VLTrn, "Trn", ""
        PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
        PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
        PMPasoValoresATX VGSqlConn, "@i_saldo", 0, SQLVARCHAR, (Total_Pagar), "saldo", ""    ' Para recuperar en reverso
        PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, (Loc.Text), "Cheque", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
        PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
        PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "CompRet", ""
        PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, (Reten.Text), "Retencion", ""
        PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
        PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
        PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", ""
        PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, ("OTROS"), "DescProc", ""        'Para recupar en Reverso
        PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
        VLCom$ = Comision.Text
        PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "T", "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, ("O"), "Proceso", ""
        PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, (Trim(Ref)), "Codigo", ""
        PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
        PMPasoValoresATX VGSqlConn, "@i_efe", 0, SQLMONEY, (efe.Text), "Efectivo", ""
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (CboTipCta.Text), "CboTipCta", ""
        PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Nombre, "Nombre", ""
        PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, "0", "Valor", ""
        PMPasoValoresATX VGSqlConn, "@o_minimo", 1, SQLMONEY, "", "Minimo", ""
        PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
        PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
        PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, (VTIndicadorSum), "SecTrn", ""
        PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
        PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, VLCom$, "Comision", ""
        PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
        PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "AutorizacionSRI", ""
        PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "Stk", ""
        PMPasoValoresATX VGSqlConn, "@o_costo", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
        PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, Space(15), "Nota_venta", ""
        PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
        PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
        If VLCTGP = "S" Then
            VLOnLine = "N"
        Else
            VLOnLine = "S"
        End If
        
        'LBP Inicio RECA-CC-SGC00025869
        If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
            VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
        ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
            VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
        ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
            VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
        ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
            VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
        ElseIf VLEfe_com > 0 Then
            VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
        ElseIf VLChq_com > 0 Then
            VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
        ElseIf VLDeb_com > 0 Then
            VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
        End If
        'LBP Fin RECA-CC-SGC00025869
        
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_agua_rc", True, "Transaccion Ok", "S", "N", VLReverso$, "51", "S", "S") = True Then
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
        VLHorario = FMRetParamATX(VGSqlConn, arrParOut_get("@o_horario"))
        VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 4), "mm/dd/yyyy")
        If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
            VLDpPValorPendienteCobro = FMRetParamATX(VGSqlConn, 2)
        End If
        VLSerie_Secuencia = FMRetParamATX(VGSqlConn, 12)
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_TRIPLEORO_pago = True
            VLCambio% = False
        End If
    Else 'Else del if del transmitir
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_TRIPLEORO_pago = False
        'TPE ------> Sumadora
        On Error GoTo Error
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
        VTIndicadorSum = FMRetParamATX(VGSqlConn, 6)
        PMChequeaATX VGSqlConn
        '<------
    End If 'Fin del if de transmitir
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir_TRIPLEORO_pago = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
        
   'ame 08/03/2010
    If FLTransmitir_TRIPLEORO_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    
      'Sumadora -->
      If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
          If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
              SGPrimeraVez = 0     ' ya no es primera vez
              PMGrabaDesglose VLTrn, SGUsar, VLCambio%
              If VLCambio% = True Then
                  MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
              End If
              SGActual = 1  'seteo Variable para borrar desglose
          ElseIf VTIndicadorSum = 0 Then
              SGActual = 0  'no borrar desglose en caso de Error en Transaccion
          End If
      ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
          VLTsnTemp = VGTSN
          PMEgresoEfectivo SGUsar, VLTrn
      End If
      If SGAcumulado < 0 Then
          VLDescargar = 1
      End If
    '<-----
    
Error:
End Function
'--> tcumbico 17/02/2010 pago TRIPLEORO fin

'--> tcumbico 19/02/2010 impresion comprobante TRIPLEORO inicio
Sub ImprimeComprobanteTRIPLEORO()
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte 'hy-31-ene-2005 Formatear fecha
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "Codigo: " + Trim(Ref)
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(Format(Total_Pagar.Text, VGFormatoMoney), 12, CGJustificacionDerecha)
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "  CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   If FMCCurATX((Reten.Text)) > 0 Then
      PMSetDetalle "v" + "RETENCION:" + FMEspaciosATX(Trim(Comprob), 13, CGJustificacionIzquierda) + FMEspaciosATX(Format(Reten, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
'   If FMCCurATX((Comision.Text)) > 0 Then
'      Coms = " COMISION: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " "
'   End If
   VLNeto = FMCCurATX(Pago_Val.Text) '- FMCCurATX(Comision.Text)  '/*cambio JPM 08122004*/
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) '+ Coms  '/*JPM 08122004*/

   PMSetDetalle "v" + "SDO. A LA FECHA: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(VLDpPValorPendienteCobro), VGFormatoMoney), 12, CGJustificacionDerecha)     'tc 07272009
  '***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt
    
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))      'hy-categ agregar la moneda
End Sub
'--> tcumbico 19/02/2010 impresion comprobante TRIPLEORO inicio

'--> gmedinac 16/02/2012 impresion comprobante MARGLOBAL INI
Sub ImprimeComprobanteMARGLOBAL()
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte 'hy-31-ene-2005 Formatear fecha
   'msilvag Inicio MGLOB MARGLOBLAL
   If Me.Proceso.Text <> "" Then
        PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Me.Proceso.Text) + " " + Mid(Trim(Me.sal_proc.Caption), 1, 24), 28, CGJustificacionIzquierda)
   Else
        PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   End If
   PMSetDetalle "v" + "No. Transaccion: " + Trim(Ref)
   'PMSetDetalle "v" + "CED/RUC: " + Trim(VLCedula) + "       AUT.: " + Trim(VLDpCcodResp)
   'msilvag Fin
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Pago_Val.Text, VGFormatoMoney), 12, CGJustificacionDerecha)
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "  CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   'If FMCCurATX((Reten.Text)) > 0 Then
   '   PMSetDetalle "v" + "RETENCION:" + FMEspaciosATX(Trim(Comprob), 13, CGJustificacionIzquierda) + FMEspaciosATX(Format(Reten, VGFormatoMoney), 12, CGJustificacionDerecha)
   'End If
'   If FMCCurATX((Comision.Text)) > 0 Then
'      Coms = " COMISION: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " "
'   End If
   VLNeto = FMCCurATX(Pago_Val.Text) '- FMCCurATX(Comision.Text)  '/*cambio JPM 08122004*/
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) '+ Coms  '/*JPM 08122004*/
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt

'   PMSetDetalle "v" + "SDO. A LA FECHA: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX(VLDpPValorPendienteCobro), VGFormatoMoney), 12, CGJustificacionDerecha)     'tc 07272009
   'If VLTsnTemp% = 0 Then
   VLTsnTemp% = VGTSN%
   'End If
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))       'hy-categ agregar la moneda
End Sub
'--> gmedinac 16/02/2012 impresion comprobante MARGLOBAL INI

'--> tcumbico 12/02/2010 consulta TRIPLEORO inicio
Function FLTransmitir_TRIPLEORO_consulta() As Integer
    Proceso.Text = "F"
    PMInicioTransaccion
    PLTipoTransaccion
    'Inicio de Paso de Valores al SP
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, VLTrn, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT2, (Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "C", "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, "O", "Proceso", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, (Trim(Ref)), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Nombre, "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, (valor.Text), "Valor", ""
    PMPasoValoresATX VGSqlConn, "@o_minimo", 1, SQLMONEY, "", "Minimo", ""
    PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, (VTIndicadorSum), "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
    PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "AutorizacionSRI", ""
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "Stk", ""
    PMPasoValoresATX VGSqlConn, "@o_costo", 1, SQLMONEY, (Comision.Text), "Mensaje", ""
    'INI - dpereirv
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'FIN - dpereirv
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_pago_agua_rc", True, "Transaccion Ok", "S", "N", VLReverso$, "51", "S", "S") = True Then
        Nombre.Text = Mid$(FMRetParamATX(VGSqlConn, 1), 1, 30)
        Comision.Enabled = True
        Total_Pagar.Text = FMRetParamATX(VGSqlConn, 2)
        Comision.Text = FMRetParamATX(VGSqlConn, 11)
        VLautoriSri = FMRetParamATX(VGSqlConn, 9)
        VLFecvenSRI = FMRetParamATX(VGSqlConn, 10)
        VlbaseImp = FMRetParamATX(VGSqlConn, 13) 'dpereirv
        VLiva = FMRetParamATX(VGSqlConn, 14) 'dpereirv
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        FLTransmitir_TRIPLEORO_consulta = True
        VLCambio% = False
        PMChequeaATX VGSqlConn
        PMFinTransaccion
        
        'LBP Inicio RECA-CC-SGC00025869
        If Comision.Text > 0 Then
            VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
            If VGCom_aux <> CDbl(Comision.Text) Then
                VGComision_original = Comision.Text
                Comision.Text = VGCom_aux
            Else
                VGComision_original = Comision.Text
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        
       Total.Text = CCur(Comision.Text)
       efe.Enabled = True      ' habilito controles
       Loc.Enabled = True
       CantChq.Enabled = True
       CboTipCta.Enabled = True
       Pago_Val.Enabled = True
       CboTipCta.Enabled = True
       Cta.Enabled = True
       Empresa.Enabled = False
       Servicio.Enabled = False
       Proceso.Enabled = False
       Ref.Enabled = False
       cmbTid.Enabled = True
       txtCedula.Enabled = True
       efe.SetFocus
       DoEvents
   Else
      FLTransmitir_TRIPLEORO_consulta = False
      PMChequeaATX VGSqlConn
      PMFinTransaccion
   End If
   
End Function
'--> tcumbico 12/02/2010 consulta TRIPLEORO fin

Public Sub PSEmpGrupo()  'DAPV/02102012/CNEL
    VGEmpGrupo = "N"
    
    'If Trim(Servicio.Text) = "3" Then
     If Trim(Servicio.Text) = "3" Or Trim(Servicio.Text) = "1" Or Trim(Servicio.Text) = "9" Then 'msilvag MGLOB MARGLOBLAL 'DAPV CNT-MOVIL 09NOV2012
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "43290", "Trn", ""
        PMPasoValoresATX VGSqlConn, "@i_modo", 0, SQLINT2, "1", "Modo", ""
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, (Trim(Empresa.Text)), "Empresa", ""
        PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLCHAR, "VEN", "Canal", ""
        If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_tr_grupo_empresas", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
            PMMapeaObjetoATX VGSqlConn&, Nombre
            PMChequeaATX VGSqlConn
            If Trim(Nombre) <> "" Then
                VGEmpGrupo = "S"
            Else
                VGEmpGrupo = "N"
            End If
        Else
            PMChequeaATX VGSqlConn
        End If
        PMFinTransaccion
    End If
End Sub

Function FLTransmitir_CPS_CNEL_consulta() As Boolean 'DAPV/02102012/CNEL
Dim VLarregloParametros(30) As String
  
   PMInicioTransaccion
   PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT2, "1579", "Trn", ""
   PMPasoValoresATX VGSqlConn, "@i_operacion", 0, SQLVARCHAR, "Q", "Operacion", ""
   PMPasoValoresATX VGSqlConn, "@i_nemonico", 0, SQLVARCHAR, "CNLSEG", "nemonico", ""
   PMPasoValoresATX VGSqlConn, "@i_producto", 0, SQLVARCHAR, "CTE", "producto", ""
    If FMTransmitirRPCATX(VGSqlConn, "", "cobis", "sp_parametro", True, "Consulta Ok", "S", "N", "N", "51", "S", "S") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametros())
      VLCNLSEG = LTrim(RTrim(Trim(VLarregloParametros(4))))
   Else
      VLCNLSEG = "00000000"
   End If
   PMChequeaATX VGSqlConn
   PMFinTransaccion

    If Trim(Proceso.Text) = "" Then
        MsgBox "Campo Regional es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Proceso.SetFocus
        Exit Function
    End If
    
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
    
    Consulta_parametro_OSB 'msilvag SOA fase2 CNEL
    
    PMInicioTransaccion
    FLTransmitir_CPS_CNEL_consulta = False
    VLTsnTemp = 0
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLVARCHAR, 62273, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim$(Ref.Text), "", ""
    'msilvag Inicio soa fase2
    If vl_servidor_BUS <> "PSSRV1" Then
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim$(Me.Proceso.Text), "", ""
        PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    End If
    'msilvag fin
    PMPasoValoresATX VGSqlConn, "@i_ptipo_trn", 0, SQLVARCHAR, Trim$("000100"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechamit", 0, SQLVARCHAR, Trim$("00000000000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pseqmit", 0, SQLVARCHAR, Trim$("000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechalocal", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, VLFechaContEmp, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodinst", 0, SQLVARCHAR, Trim$("007"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(Format(VGUsuario, "000000")), "", ""
    PMPasoValoresATX VGSqlConn, "@i_presultado", 0, SQLVARCHAR, Trim$("0000000000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_secuencial", 0, SQLVARCHAR, Trim$("0000000000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pnumero", 0, SQLVARCHAR, Format("007", "0000") & Trim$(Format(VGOficina, "000000")) & Trim$(Format(Mid(VGterminal, 1, 6), "000000")), "", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_moneda", 0, SQLVARCHAR, Trim$("840"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pseguridad", 0, SQLVARCHAR, Format(VLCNLSEG, "000000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pregional", 0, SQLVARCHAR, Format(VLCodReg, "00000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pservicio", 0, SQLVARCHAR, Trim$("001"), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pcodigo", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_ptipo", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_ptotal_pendiente", 1, SQLMONEY, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pinteres", 1, SQLMONEY, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pinfranccion", 1, SQLMONEY, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechamit", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_ptransferencia", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pseqmit", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_phoralocal", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechalocal", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechacomp", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pcanal", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pretencion", 1, SQLMONEY, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pbase_imp", 1, SQLMONEY, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pinstfin", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_poperador", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pseqinst", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_presultado", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pnumero", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pnombres", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_ptreparto", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pdireccion", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_ptipo_moneda", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pcedula", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pseguridad", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechainil", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechafinl", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechaemi", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfactpen", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechaven", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pconsumo", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfactura", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_ptotalmes", 1, SQLMONEY, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pdeuda", 1, SQLMONEY, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pregional", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pservicio", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@k_pservicio", 1, SQLVARCHAR, Trim$(""), "", ""
    'msilvag soa fase 2 cnel
    'If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_consulta_cnel", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_cnel", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
    'msilvag soa fase 2 cnel
        FLTransmitir_CPS_CNEL_consulta = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())
        
        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        VLCambio% = False
        
        If vl_servidor_BUS = "PSSRV1" Then
            VLCodCuenta = Trim(FMRetParamATX(VGSqlConn, 1))
            Ref = VLCodCuenta
            VLTipoTrans = Trim(FMRetParamATX(VGSqlConn, 2))
            VLDeudaTotal = Trim(FMRetParamATX(VGSqlConn, 3))
            valor.Text = Trim$(str$(CCur(VLDeudaTotal) / 100))
            Total.Text = Trim$(str$(CCur(VLDeudaTotal) / 100))
            VLInteresAcum = Trim(FMRetParamATX(VGSqlConn, 4))
            VLInfraccion = Trim(FMRetParamATX(VGSqlConn, 5))
            VLFechaHoraMt = Trim(FMRetParamATX(VGSqlConn, 6))
            VLtransferencia = Trim(FMRetParamATX(VGSqlConn, 7))
            VLSecMt = Trim(FMRetParamATX(VGSqlConn, 8))
            VLic_phoralocal = Trim(FMRetParamATX(VGSqlConn, 9))
            VLic_pfechalocal = Trim(FMRetParamATX(VGSqlConn, 10))
            VLic_pfechacomp = Trim(FMRetParamATX(VGSqlConn, 11))
            VLcnelCanal = Trim(FMRetParamATX(VGSqlConn, 12))
            VLRetencion = Trim$(str$(CCur(Trim(FMRetParamATX(VGSqlConn, 13))) / 100))
    '        VlbaseImp = Trim$(Str$(CCur(Trim(FMRetParamATX(VGSqlConn, 14))) / 100))
            VLIfi = Trim(FMRetParamATX(VGSqlConn, 15))
            VLOperador = Trim(FMRetParamATX(VGSqlConn, 16))
            VLSecIfi = Trim(FMRetParamATX(VGSqlConn, 17))
            VLCodResultado = Trim(FMRetParamATX(VGSqlConn, 18))
            VLTerminal = Trim(FMRetParamATX(VGSqlConn, 19))
            VLNombre = Trim(FMRetParamATX(VGSqlConn, 20))
            Nombre = VLNombre
            VLTipoReparto = FLBuscarItem2("@o_ptreparto")
            VLDomicilio = FLBuscarItem2("@o_pdireccion")
            VLTipoMoneda = Trim(FMRetParamATX(VGSqlConn, 23))
            VLCedula = Trim(FMRetParamATX(VGSqlConn, 24))
            VLCodSeguridad = Trim(FMRetParamATX(VGSqlConn, 25))
            VLFechaLecIni = Trim(FMRetParamATX(VGSqlConn, 26))
            VLFechaLecFin = Trim(FMRetParamATX(VGSqlConn, 27))
            VLi_pfechaemi = Trim(FMRetParamATX(VGSqlConn, 28))
            VLFactPend = Trim(FMRetParamATX(VGSqlConn, 29))
            VLi_pfechaven = Trim(FMRetParamATX(VGSqlConn, 30))
            VLConsumo = Trim(FMRetParamATX(VGSqlConn, 31))
            VLi_pfactura = FLBuscarItem2("@o_pfactura")
            VLTotalMes = FLBuscarItem2("@o_ptotalmes")
            VLDeudaAnt = FLBuscarItem2("@o_pdeuda")
            VLRegional = FLBuscarItem2("@o_pregional")
            VLCodServ = FLBuscarItem2("@o_pservicio")
        Else
            VLCodCuenta = FLBuscarItem2("@o_pcodigo") ' Trim(FMRetParamATX(VGSqlConn, 1))
            Ref = VLCodCuenta
            VLTipoTrans = FLBuscarItem2("@o_ptipo") 'Trim(FMRetParamATX(VGSqlConn, 2))
            VLDeudaTotal = FLBuscarItem2("@o_ptotal_pendiente") 'Trim(FMRetParamATX(VGSqlConn, 3))
            valor.Text = VLDeudaTotal 'Trim$(Str$(CCur(VLDeudaTotal) / 100))
            Total.Text = VLDeudaTotal 'Trim$(Str$(CCur(VLDeudaTotal) / 100))
            VLInteresAcum = FLBuscarItem2("@o_pinteres") 'Trim(FMRetParamATX(VGSqlConn, 4))
            VLInfraccion = FLBuscarItem2("@o_pinfranccion") 'Trim(FMRetParamATX(VGSqlConn, 5))
            VLFechaHoraMt = FLBuscarItem2("@o_pfechamit") 'Trim(FMRetParamATX(VGSqlConn, 6))
            VLtransferencia = FLBuscarItem2("@o_ptransferencia")  'Trim(FMRetParamATX(VGSqlConn, 7))
            VLSecMt = FLBuscarItem2("@o_pseqmit") 'Trim(FMRetParamATX(VGSqlConn, 8))
            VLic_phoralocal = FLBuscarItem2("@o_phoralocal")  'Trim(FMRetParamATX(VGSqlConn, 9))
            
            VLi_pfechaemi = FLBuscarItem2("@o_pfechaemi") 'Trim(FMRetParamATX(VGSqlConn, 28)) '
            VLCedula = FLBuscarItem2("@o_pidentificacion") 'Trim(FMRetParamATX(VGSqlConn, 24))'
            VLic_pfechacomp = FLBuscarItem2("@o_pfechacomp") 'Trim(FMRetParamATX(VGSqlConn, 11))
            VLic_pfechalocal = FLBuscarItem2("@o_pfechalocal") 'Trim(FMRetParamATX(VGSqlConn, 10))
            VLi_pfechaven = FLBuscarItem2("@o_pfechaven") 'Trim(FMRetParamATX(VGSqlConn, 30)) 'msilvag SOA Fase2
            
            VLcnelCanal = FLBuscarItem2("@o_pcanal") 'Trim(FMRetParamATX(VGSqlConn, 12))
            VLRetencion = FLBuscarItem2("@o_pretencion")  'Trim$(Str$(CCur(Trim(FMRetParamATX(VGSqlConn, 13))) / 100))
    '        VlbaseImp = Trim$(Str$(CCur(Trim(FMRetParamATX(VGSqlConn, 14))) / 100))
            VLIfi = FLBuscarItem2("@o_pinstfin") 'Trim(FMRetParamATX(VGSqlConn, 15))
            VLOperador = FLBuscarItem2("@o_poperador") 'Trim(FMRetParamATX(VGSqlConn, 16))
            VLSecIfi = FLBuscarItem2("@o_pseqinst") 'Trim(FMRetParamATX(VGSqlConn, 17))
            VLCodResultado = FLBuscarItem2("@o_presultado") 'Trim(FMRetParamATX(VGSqlConn, 18))
            VLTerminal = Trim(FMRetParamATX(VGSqlConn, 19))
            VLNombre = FLBuscarItem2("@o_pnombres") 'Trim(FMRetParamATX(VGSqlConn, 20))
            Nombre = VLNombre
            VLTipoReparto = FLBuscarItem2("@o_ptreparto")
            VLDomicilio = FLBuscarItem2("@o_pdireccion")
            VLTipoMoneda = Trim(FMRetParamATX(VGSqlConn, 23))
            
            VLCodSeguridad = FLBuscarItem2("@o_pseguridad") 'Trim(FMRetParamATX(VGSqlConn, 25))
            VLFechaLecIni = FLBuscarItem2("@o_pfechainil") 'Trim(FMRetParamATX(VGSqlConn, 26))
            VLFechaLecFin = FLBuscarItem2("@o_pfechafinl") 'Trim(FMRetParamATX(VGSqlConn, 27))
            
            VLFactPend = FLBuscarItem2("@o_pfactpen") 'Trim(FMRetParamATX(VGSqlConn, 29))
            VLConsumo = FLBuscarItem2("@o_pconsumo") 'Trim(FMRetParamATX(VGSqlConn, 31))
            VLi_pfactura = FLBuscarItem2("@o_pfactura")
            VLTotalMes = FLBuscarItem2("@o_ptotalmes")
            VLDeudaAnt = FLBuscarItem2("@o_pdeuda")
            VLRegional = FLBuscarItem2("@o_pregional")
            VLCodServ = FLBuscarItem2("@o_pservicio")
        End If
        Total.Text = CCur(valor.Text) + CCur(Comision.Text)
        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
        If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
        End If
        efe.SetFocus
    Else
        PMChequeaATX VGSqlConn
        Ref.SetFocus
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function


Function FLTransmitir_CPS_CNEL_pago() As Boolean
Dim VTIndicadorSum As Integer
Dim i As Integer
Dim VLValor As String
    
    FLTransmitir_CPS_CNEL_pago = False
    
    VTIndicadorSum = 0
    VLTsnTemp = 0
    
    
    If VGTipoEjecucion% <> CGReverso% Then
        VLSsn = Trim$(str$(VGSqlConn))
    End If
    If Len(Trim$(VLSsn)) > 6 Then
        VLSsn = Right$(Trim$(VLSsn), 6)
    Else
        VLSsn = String(6 - Len(Trim$(VLSsn)), "0") + Trim$(VLSsn)
    End If
    
    Consulta_parametro_OSB 'msilvag Bus Fase 2 CNEL
    
    PMFinTransaccion
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62275, "Trn", ""
    'msilvag inicio soa fase
    If vl_servidor_BUS <> "PSSRV1" Then
        PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "AplicacionCobis", "" 'msilvag SOA Fase2 CNEL
    Else
        PMPasoValoresATX VGSqlConn, "@s_ssn", 0, SQLINT4, 0, "ssn", ""
    End If
    'msilvag fin
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_grupo", 0, SQLINT4, Empresa.Text, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Proceso.Text, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_digver", 0, SQLCHAR, Mid$(Trim$(Ref), Len(Trim$(Ref)), 1), "DigVer", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, efe.Text, "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, Reten.Text, "Retencion", ""
    PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, Me.Comision.Text, "Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, (VLDeb_com), "Com. Debito", "" 'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, Nombre, "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Trim(Servicio.Text), "", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Empresa.Text), "Grupo", ""
    'PARAMETROS DE CSP
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_tran", 0, SQLINT4, Trim$("000101"), "", ""
    VLValor = valor.Text ' - (Pago_Val.Text - VLTotCom)
    VLValor = Trim$(str$(CCur(VLValor) * 100))
    PMPasoValoresATX VGSqlConn, "@i_ptotal_pendiente", 0, SQLINT4, str$(VLValor), "", ""
   If VGTipoEjecucion% <> CGReverso% Then
        VL_Hora = Format$(Time(), "hhmmss")
    
        VL_Hora = Mid("000000", 1, 6 - Len(VL_Hora)) + VL_Hora
        PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, VL_Hora, "", ""
        PMPasoValoresATX VGSqlConn, "@i_pfechalocal", 0, SQLVARCHAR, VLic_pfechalocal, "", ""
        'msilvag soa fase2 cnel
        If vl_servidor_BUS <> "PSSRV1" Then
            PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, Format$(VLic_pfechacomp, "mmddyyyy"), "", ""  'msilvag SOA fase2
            PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLCHAR, "N", "@t_corr", "" 'msilvag SOA fase2
        Else
            PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, VLic_pfechacomp, "", ""
        End If
        'msilvag fin
        PMPasoValoresATX VGSqlConn, "@i_ptran_original", 0, SQLVARCHAR, "0200" + "000000" + Format(VLic_pfechalocal, "00000000") + VL_Hora + Format(Mid(VLCNLSEG, 1, 3), "0000") + String(6 - Len(Trim$(str$(VGOficina))), "0") + Trim$(str$(VGOficina)) + Right$(VGterminal, 6), "", "", True
    Else
        VL_Hora = Format$(Time(), "hhmmss")
        VL_Hora = Mid("000000", 1, 6 - Len(VL_Hora)) + VL_Hora
        PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, VL_Hora, "", ""
        PMPasoValoresATX VGSqlConn, "@i_pfechalocal", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""
        PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""
        'msilvag Inicio
        If vl_servidor_BUS = "PSSRV1" Then
            'PMPasoValoresATX VGSqlConn, "@i_ptran_original", 0, SQLVARCHAR, "0200" + VLo_pautorizacion + Format(VLic_pfechalocal, "00000000") + VLic_phoralocal + VLo_pnumero, "", "", True  'Format(Mid(VLCNLSEG, 1, 3), "0000") + String(6 - Len(Trim$(Str$(VGOficina))), "0") + Trim$(Str$(VGOficina)) + Mid$(VGterminal, 1, 6), "", "", True
            PMPasoValoresATX VGSqlConn, "@i_ptran_original", 0, SQLVARCHAR, "0200" + VLo_pautorizacion + Format(VLic_pfechalocal, "00000000") + VLic_phoralocal + VLo_pnumero, "", "", True  'Format(Mid(VLCNLSEG, 1, 3), "0000") + String(6 - Len(Trim$(Str$(VGOficina))), "0") + Trim$(Str$(VGOficina)) + Mid$(VGterminal, 1, 6), "", "", True
        Else
            PMPasoValoresATX VGSqlConn, "@i_ptran_original", 0, SQLVARCHAR, "0200" + VLo_pautorizacion + Format(VLic_pfechalocal, "yyyymmdd") + VLic_phoralocal + VLo_pnumero, "", "", True
        End If
        'msilvag Fin
    End If
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
    If VGTipoEjecucion% = CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@i_preverso", 0, SQLVARCHAR, "1", "", "", True
    Else
        PMPasoValoresATX VGSqlConn, "@i_preverso", 0, SQLVARCHAR, "2", "", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_pinstfin", 0, SQLVARCHAR, Mid(VLCNLSEG, 1, 3), "", ""
    PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(Format(VGUsuario, "000000")), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pseqinst", 0, SQLVARCHAR, "000000", "", ""
    PMPasoValoresATX VGSqlConn, "@i_pnumero", 0, SQLVARCHAR, Format(Mid(VLCNLSEG, 1, 3), "0000") + StrReverse(Mid(StrReverse(Trim$(str$(VGOficina))) & "000000", 1, 6)) + Right$(VGterminal, 6), "", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_moneda", 0, SQLVARCHAR, Trim$("840"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcedula", 0, SQLVARCHAR, VLCedula, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pseguridad", 0, SQLINT4, Format(VLCNLSEG, "000000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_psecmactrans", 0, SQLVARCHAR, VLSecMt, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodseguridad", 0, SQLINT4, Format(VLCNLSEG, "000000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechaemi", 0, SQLVARCHAR, VLi_pfechaemi, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechaven", 0, SQLVARCHAR, VLi_pfechaven, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pfactura", 0, SQLVARCHAR, VLi_pfactura, "", ""
    VLValor = Pago_Val.Text - VLTotCom
    VLValor = Trim$(str$(CCur(VLValor) * 100))
    PMPasoValoresATX VGSqlConn, "@i_pvalorpag", 0, SQLINT4, str$(VLValor), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pregional", 0, SQLVARCHAR, Format(VLCodReg, "00000000"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pservicio", 0, SQLVARCHAR, Trim$("001"), "", ""
    If VGTipoEjecucion% = CGReverso% Then
        'msilvag cnel soa fase 2 inicio
        If vl_servidor_BUS = "PSSRV1" Then
            PMPasoValoresATX VGSqlConn, "@i_pautorizacion", 0, SQLVARCHAR, VLo_pautorizacion, "", "", True
        Else
            PMPasoValoresATX VGSqlConn, "@i_pautorizacion", 0, SQLVARCHAR, "000000", "", "", True
        End If
        'msilvag fin
    Else
        PMPasoValoresATX VGSqlConn, "@i_pautorizacion", 0, SQLVARCHAR, "000000", "", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_pnombres", 0, SQLVARCHAR, Trim(Nombre), "", ""
    
    'VARIABLES DE RETORNO
    If vl_servidor_BUS = "PSSRV1" Then
        PMPasoValoresATX VGSqlConn, "@o_fecha_comp", 1, SQLVARCHAR, VLic_pfechacomp, "", ""
        PMPasoValoresATX VGSqlConn, "@o_secmt", 1, SQLVARCHAR, "", "", ""
        PMPasoValoresATX VGSqlConn, "@o_codautorizador", 1, SQLVARCHAR, "", "", ""
        PMPasoValoresATX VGSqlConn, "@o_nombre", 1, SQLVARCHAR, Nombre, "Nombre", ""
        PMPasoValoresATX VGSqlConn, "@o_saldo", 1, SQLMONEY, (valor.Text), "Valor", ""
        PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
        PMPasoValoresATX VGSqlConn, "@o_digver", 1, SQLCHAR, "0", "DigVer", ""
        PMPasoValoresATX VGSqlConn, "@o_costo", 1, SQLMONEY, "0", "", ""
        PMPasoValoresATX VGSqlConn, "@o_fecha_efe", 1, SQLDATETIME, (Format(("01/01/1900"), "mm/dd/yyyy")), "Fecha Pago", ""
        PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, (VLChq_com), "Mensaje", ""
        PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "XXXXXXXXXXXXXXX", "AutorizacionSRI", ""
        PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "XXXXXXXXXXXXXXX", "Stk", ""
        PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, "", "", ""
        PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
        PMPasoValoresATX VGSqlConn, "@o_consulta", 1, SQLINT4, (VTIndicadorSum), "SecTrn", ""
        PMPasoValoresATX VGSqlConn, "@o_msg", 1, SQLVARCHAR, "", "", ""
        PMPasoValoresATX VGSqlConn, "@o_fecha_emision", 1, SQLVARCHAR, "XXXXXXXXXXXXXXX", "", ""
        PMPasoValoresATX VGSqlConn, "@o_fechacontable", 1, SQLVARCHAR, "XXXXXXXXXXXXXXX", "", ""
    'msilvag soa fase 2 inicio
    Else
        PMPasoValoresATX VGSqlConn, "@o_codautorizador", 1, SQLVARCHAR, "000000", "CodAutorizacion", "" 'msilvag  @o_pautorizacion_prov
        PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
        PMPasoValoresATX VGSqlConn, "@o_secmt", 1, SQLVARCHAR, "", "", ""
        PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
    End If
    'msilvag fin
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_cnel", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then  'msilvag Bus Fase2
    'If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_pago_cnel", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLTransmitir_CPS_CNEL_pago = True
        
        'VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())
        'msilvag SOA Fase2 Inicio
        If vl_servidor_BUS = "PSSRV1" Then
            VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())
        Else
            VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        End If
        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        VLCambio% = False
        'msilvag Fin

        If vl_servidor_BUS = "PSSRV1" Then
            If VGTipoEjecucion% <> CGReverso% Then
                VLo_pautorizacion = MatrizCnel(1, 18)
            End If
            VLHorario = FMRetParamATX(VGSqlConn, 6)
            VLo_pseqmit = MatrizCnel(1, 8)
            VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 9), "mm/dd/yyyy")
            SGSecTrn$ = MatrizCnel(1, 17)
            SGSecTrn$ = FMRetParamATX(VGSqlConn, 14) 'dpereirv 01/25/2013
        Else
            If VGTipoEjecucion% <> CGReverso% Then
                VLo_pautorizacion = FLBuscarItem("@o_pautorizacion_prov")
            End If
            VLHorario = FLBuscarItem("@o_horario")
            VLo_pseqmit = FLBuscarItem("@o_pseqmit")
            VLFechaCorte = FLBuscarItem("@o_fecha_efe")
            SGSecTrn$ = FLBuscarItem("@o_ssn")
            'SGSecTrn$ = FMRetParamATX(VGSqlConn, 14)
        End If
        
        
        VLValor = valor.Text - (Pago_Val.Text - VLTotCom)
        VLDpPValorPendienteCobro = VLValor
        'msilvag Inicio
        If vl_servidor_BUS <> "PSSRV1" Then
            If VGTipoEjecucion% = CGReverso% Then
                VLValor = valor.Text - (Pago_Val.Text)
                VLDpPValorPendienteCobro = VLValor

                VGTipoEjecucion% = CGNormal%
                Call Proceso_LostFocus
                VGTipoEjecucion% = CGReverso%
            End If
        End If
        'msilvag FIn
        
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
        End If
        If VLconexion <> "F" Then
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_CPS_CNEL_pago = True
            VLCambio% = False
        End If
    Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_CPS_CNEL_pago = False
        
        If vl_servidor_BUS <> "PSSRV1" Then
            SGSecTrn$ = FLBuscarItem("@o_ssn")
        Else
            SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
        End If
        
'        VTIndicadorSum = FMRetParamATX(VGSqlConn, 6)
        PMChequeaATX VGSqlConn
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir_CPS_CNEL_pago = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    If FLTransmitir_CPS_CNEL_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3202", "3173"), rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3202", "3173"), rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    
    
    If FEsEmpresaTranPers(Trim(Empresa.Text)) Then 'se realiza esto porque la empresa eléctrica de Quito guarda otro código de transacción
       If Not VLHorarioDif Then
          VLTrn = "3173"
       Else
          VLTrn = "3202"
           End If
    Else
       If Not VGHorarioDif Then
        VLTrn = "3916"
       Else
        VLTrn = "3919"
       End If
    End If
    If VGTipoEjecucion% <> CGReverso% Then
        If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
        VLTsnTemp = VGTSN
        'PMEgresoEfectivo Efe.ValueReal, VLTrn
        PMEgresoEfectivo SGUsar, VLTrn
    End If
    If SGAcumulado < 0 Then
        VLDescargar = 1
    End If

End Function

Sub ImprimeComprobanteCNEL()
'   VGparformato$ = "01"
'   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
'      VGparlong$ = "66"
'      VGpartop$ = "04"
'      VGparleft$ = "10"
'      VGparrig$ = "00"
'   End If
    If VGModeloImp$ = "5021" Or VGModeloImp$ = "590" Then
      VGpartop$ = "02"  ' Ubica la impresion con margen superior de n. Contando de abajo hacia arriba. Antes tenia un valor de 7
      VGparleft$ = "10"
    End If
'       VGparformato$ = "01"
'   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
'      VGparlong$ = "66"
'      VGpartop$ = "04"
'      VGparleft$ = "20"
'      VGparrig$ = "00"
'   End If

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte
   PMSetDetalle "v" + "EMPRESA: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda) + "-RUC CNEL:" + FMEspaciosATX(VLRucCNEL, 13, CGJustificacionIzquierda)
   PMSetDetalle "v" + "REGIONAL: " + FMEspaciosATX(Mid(Trim(Me.sal_proc.Caption), 1, 24), 20, CGJustificacionIzquierda) + "-SUMINISTRO: " + FMEspaciosATX(Trim(Ref), 10, CGJustificacionIzquierda)
   PMSetDetalle "v" + "NOMBRE: " + Mid(Nombre, 1, 25) + " CED/RUC:" + FMEspaciosATX(VLCedula, 13, CGJustificacionIzquierda)
   PMSetDetalle "v" + "VALOR: " + FMEspaciosATX("USD. " + Format(valor, VGFormatoMoney), 12, CGJustificacionDerecha) + " " + " No.AUT.:" + FMEspaciosATX(VLo_pautorizacion, 13, CGJustificacionIzquierda)
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX("USD. " + Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = " CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX("USD. " + Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "  CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
'   If FMCCurATX((Reten.Text)) > 0 Then
'      PMSetDetalle "v" + "RETENCION:" + FMEspaciosATX(Trim(Comprob), 13, CGJustificacionIzquierda) + FMEspaciosATX(Format(Reten, VGFormatoMoney), 12, CGJustificacionDerecha)
'   End If
'   If FMCCurATX((Comision.Text)) > 0 Then
'      Coms = " COMISION: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " "
'   End If
   VLNeto = FMCCurATX(Pago_Val.Text)
   'msilvag Inicio SOA fase2
    If VGTipoEjecucion% = CGReverso% And vl_servidor_BUS <> "PSSRV1" Then
        PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX("USD. " + Format((VLNeto), VGFormatoMoney), 12, CGJustificacionDerecha)   '+ Coms
    Else
        PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX("USD. " + Format((VLNeto - VLTotCom), VGFormatoMoney), 12, CGJustificacionDerecha)   '+ Coms
    End If
    'msilvag Fin SOA fase2
   PMSetDetalle "v" + "SALDO A LA FECHA: " + FMEspaciosATX("USD. " + Format(FMCCurATX(VLDpPValorPendienteCobro), VGFormatoMoney), 12, CGJustificacionDerecha)
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt
  
  
  If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51"))), , VLVerde   'hy-categ agregar la moneda
End Sub
Public Sub PLImprimirNotaCNEL()

    If VLTotCom > 0 And VGTipoEjecucion = CGNormal% Then
        VGparlong$ = "66"
        VGpartop$ = "00"
        VGparleft$ = "07"
        VGparrig$ = "00"
        
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
        Case Is = "01"
            mes2 = "Enero"
        Case Is = "02"
            mes2 = "Febrero"
        Case Is = "03"
           mes2 = "Marzo"
        Case Is = "04"
           mes2 = "Abril"
        Case Is = "05"
           mes2 = "Mayo"
        Case Is = "06"
           mes2 = "Junio"
        Case Is = "07"
           mes2 = "Julio"
        Case Is = "08"
           mes2 = "Agosto"
        Case Is = "09"
           mes2 = "Septiembre"
        Case Is = "10"
           mes2 = "Octubre"
        Case Is = "11"
           mes2 = "Noviembre"
        Case Is = "12"
           mes2 = "Diciembre"
       End Select
        
        VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
        
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        PMSetDetalle "v" + "Serv. Recaudacion  " + "Fecha: " + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "ENERGIA ELECTRICA"
        PMSetDetalle "v" + "Subtotal:    " + FMEspaciosATX(Format(VlbaseImp, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(VLiva, VGFormatoMoney), 8, CGJustificacionDerecha) 'dpereirv
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
        If VLTipo_imp = "O" Then
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "      " + "Original: Adquiriente"
        Else
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
        End If
        
        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If
    
        FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn
    End If
End Sub
Function FLBuscarItem2(VLELemento As String) As String  'DAPV/02082012/CNEL
    Dim i As Integer
    Dim hallado As Boolean
    i = 1
    hallado = False
    Do While i < 37 And Not hallado
        If MatrizCnel(0, i) = Trim$(VLELemento) Then
            hallado = True
        Else
            i = i + 1
        End If
    Loop
    If hallado Then
        FLBuscarItem2 = MatrizCnel(1, i)
    Else
        FLBuscarItem2 = ""
    End If
End Function
Function FLTransmitir_CNTMOVIL_consulta() As Boolean
On Error GoTo Error
    
    Dim VLCodigoRespuesta As String
    Dim MatrizCPS(10, 10) As String
    
    'CODIGO DE AGENCIA ASIGNADO POR CNT
    Dim VLarreglo(30) As String
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CAGCNT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLCodAgencia = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLCodAgencia = ""
    End If
    PMChequea VGSqlConn&
    
    'CODIGO DE INSTITUCION ADQUIRENTE ASIGNADO POR CNT
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CADCNT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLInstAdq = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLInstAdq = ""
    End If
    PMChequea VGSqlConn&
    
    If Trim(VLCodAgencia) = "" Then
        MsgBox "Empresa no tiene asignado un codigo de agencia", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_CNTMOVIL_consulta = False
        Ref.SetFocus
       Exit Function
    End If
    
    If Trim(VLInstAdq) = "" Then
        MsgBox "No existe Codigo de Instituciòn", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_CNTMOVIL_consulta = False
        Ref.SetFocus
       Exit Function
    End If
    
    If Trim(Me.Ref.Text) = "" Then
        MsgBox "Debe ingresar Numero Celular, para la Consulta", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_CNTMOVIL_consulta = False
        Ref.SetFocus
       Exit Function
    End If
   
    If Len(Trim$(Ref.Text)) <> 10 Then
        MsgBox "Campo código es de 10 dígitos.", vbCritical + vbOKOnly, App.Title
        Ref.SetFocus
        Exit Function
    End If
    
    
    If VGTipoEjecucion% <> CGReverso% Then
        VLSsn = Trim$(str$(VGSqlConn))
    End If
    If Len(Trim$(VLSsn)) > 12 Then
        VLSsn = Right$(Trim$(VLSsn), 12)
    Else
        VLSsn = String(12 - Len(Trim$(VLSsn)), "0") + Trim$(VLSsn)
    End If
    
    'Llamar a la consulta CNT MOVIL
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62296, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim$(Ref.Text), "ClaveServ", "" 'Identificador de Servicio
    PMPasoValoresATX VGSqlConn, "@i_ptipo_trn", 0, SQLVARCHAR, "000003", "TipoTrn", "" 'Tipo de Transaccion
    PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "HoraLocal", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechalocal", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "FechaLocal", ""
    PMPasoValoresATX VGSqlConn, "@i_pcrit_cons", 0, SQLVARCHAR, "001", "CritCons", "" 'Criterio de consulta: 001-Numero telefonico
    PMPasoValoresATX VGSqlConn, "@i_ptipo_serv", 0, SQLVARCHAR, "002", "TipoServ", "" 'Tipo de servicio: 002-Movil
    PMPasoValoresATX VGSqlConn, "@i_pcodadq", 0, SQLVARCHAR, Format(VLInstAdq, "000000"), "CodAdq", ""  'Institucion de adquirente
    PMPasoValoresATX VGSqlConn, "@i_pcod_agencia", 0, SQLVARCHAR, VLCodAgencia, "CodAgen", ""  'Codigo de agencia
    PMPasoValoresATX VGSqlConn, "@i_pcajero", 0, SQLVARCHAR, Trim(VGUsuario), "Cajero", ""
    PMPasoValoresATX VGSqlConn, "@i_psecadq", 0, SQLVARCHAR, VLSsn, "SecAdq", "" 'Secuencial Adquirente
    PMPasoValoresATX VGSqlConn, "@i_pnumero", 0, SQLVARCHAR, VGterminal, "Terminal", ""
    
    PMPasoValoresATX VGSqlConn, "@o_pcodigo", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pvalor_adeuda", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_presultado", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pdocumento", 1, SQLVARCHAR, Trim$(""), "", """"
    PMPasoValoresATX VGSqlConn, "@o_pcodadq", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pcod_agencia", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pcajero", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_psecadq", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pnumero", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pnombres", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_ptipo_moneda", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pctas_adeuda", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechaemision", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_psubtotal", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pretencion", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pbase_imp", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pice", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechaven", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pncargo", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pcargos", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pautorisri", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechaval", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfactura", 1, SQLVARCHAR, Trim$(""), "", ""

    PMPasoValoresATX VGSqlConn, "@o_pfechaini", 1, SQLVARCHAR, Trim$(""), "", ""
    
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_consulta_cnt", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_CNTMOVIL_consulta = True
        VLDpCcodResp = Trim(FMRetParamATX(VGSqlConn, 3))
      
'        If VLDpCcodResp <> "000000000000" Then
'            MsgBox "ERROR RESPUESTA DESDE EL PROVEEDOR: " + VLDpCcodResp + " - " + VLDpCMsgError, vbExclamation, App.Title
'            FLTransmitir_CNTMOVIL_consulta = False
'            PMFinTransaccion
'            PMChequeaATX VGSqlConn
'            Exit Function
'        End If
        Nombre.Text = Trim(FMRetParamATX(VGSqlConn, 10))
        VLDocumento = Trim(FMRetParamATX(VGSqlConn, 4))
          
        VLDpCcodAdq = Trim(FMRetParamATX(VGSqlConn, 5))
        VLDpCcodAgencia = Trim(FMRetParamATX(VGSqlConn, 6))
        VLDpCSecAdq = Trim(FMRetParamATX(VGSqlConn, 8))
        
        Me.valor.Text = CCur(Trim(FMRetParamATX(VGSqlConn, 2))) / 100
        
        'Valor viene en cero
        If valor.Text <= 0 Then
            MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
            FLTransmitir_CNTMOVIL_consulta = False
            PMFinTransaccion
            PMChequeaATX VGSqlConn
            Exit Function
        End If
        
    Else
        FLTransmitir_CNTMOVIL_consulta = False
        PMFinTransaccion
        PMChequeaATX VGSqlConn
        Exit Function
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    
    'CONSULTA DE COMISION
'    Dim valor As String
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Proceso.Text, "Codigo de empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, "1", "Indica Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, "CSBA", "Servicio Person", ""
    PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, "CNMP", "Rubro Person", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Rubro Person", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'IVA
    'Variables de salida
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        Comision = FMRetParamATX(VGSqlConn, 1)
        VlbaseImp = FMRetParamATX(VGSqlConn, 3) 'IVA
        VLiva = FMRetParamATX(VGSqlConn, 4) 'IVA
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        'LBP Inicio RECA-CC-SGC00025869
        If Comision.Text > 0 Then
        VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
            If VGCom_aux <> CDbl(Comision.Text) Then
                VGComision_original = Comision.Text
                Comision.Text = VGCom_aux
            Else
                VGComision_original = Comision.Text
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        If CCur(Comision.Text) > 0 Then
            Comision.Enabled = True
        End If
    Else
        FLTransmitir_CNTMOVIL_consulta = False
        Comision = 0#
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        Exit Function
    End If

    efe.Enabled = True
    Loc.Enabled = True
    CantChq.Enabled = True
    Pago_Val.Enabled = False
    CboTipCta.Enabled = True
    Cta.Enabled = True
    Empresa.Enabled = False
    Servicio.Enabled = False
    Proceso.Enabled = False
    Ref.Enabled = False
    efe.SetFocus
    DoEvents
    Exit Function
Error:
    PMChequeaATX VGSqlConn&
    PMFinTransaccion
        
End Function
Function FLTransmitir_CNTMOVIL_pago() As Boolean

On Error GoTo Error

    VLServicio = "Recaudacion"
    
    If VGHorarioDif Then
        VLTrn = "3926"
        VLHorario = "D"
    Else
        VLTrn = "3925"
        VLHorario = "N"
    End If
    
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    
    VLIndReverso = False
    
    If VGTipoEjecucion% = CGReverso% Then
        VLIndReverso = True
    End If
    
    'VALIDACIONES
    Dim Fecha As String
    Fecha = Format$(Date, "yyyymmdd")
    
    Dim fr_ced_ruc As String
    fr_ced_ruc = Replace(SGCedula, "_", "")
    
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62297, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Servicio.Text, "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim(Proceso.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLMONEY, (efe.Text), "efe", ""
    PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (valor.Text), "Subtotal", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_efe", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_chq", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (valor.Text), "Total pagado", ""
    PMPasoValoresATX VGSqlConn, "@i_totval", 0, SQLMONEY, (Pago_Val.Text), "Total a pagar", ""
    PMPasoValoresATX VGSqlConn, "@i_totapag", 0, SQLMONEY, (Total.Text), "Total", ""
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    If CantChq.Text = "" Then
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, "0", "Cantidad de cheques", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, (CantChq.Text), "Cantidad de cheques", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (CboTipCta.Text), "Cantidad de cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Ventanilla", ""
    PMPasoValoresATX VGSqlConn, "@i_cod_cliente", 0, SQLVARCHAR, (Ref.Text), "Cod. Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_ruc_cliente", 0, SQLVARCHAR, VLCedula, "Ruc Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre_cliente", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""
'    If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
'        If FMSetParametro("@trnReversoManual", SQLCHAR&, 0, "S", "", "") Then
'            VLServicio = "Recaudacion"
'        End If
'    End If

    'Parametros de proveedor
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim(Ref.Text), "ClaveServ", ""
    If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
        VGTipoEjecucion% = CGNormal%
        PMPasoValoresATX VGSqlConn, "@i_ptipo_trn", 0, SQLVARCHAR, "000002", "TipoTrn", "" 'Tipo de Transaccion
        PMPasoValoresATX VGSqlConn, "@i_psecadq", 0, SQLVARCHAR, VLDpCSecAdqRev, "SecAdq", ""
        PMPasoValoresATX VGSqlConn, "@i_prazon_rev", 0, SQLCHAR, "02", "IndRev", ""
        PMPasoValoresATX VGSqlConn, "@i_pid_pago", 0, SQLVARCHAR, VLIdPagoRev, "IdPagrev", ""
        VGTipoEjecucion% = CGReverso%
    Else
        If Trim(Servicio.Text) = "1" And Trim(VGEmpGrupo) = "S" Then 'DAPV CNT-MOVIL 09NOV2012
            PMPasoValoresATX VGSqlConn, "@i_cod_grupo", 0, SQLVARCHAR, Empresa.Text, "CodGrupo", ""
            PMPasoValoresATX VGSqlConn, "@i_grupo", 0, SQLVARCHAR, "S", "Grupo", ""
        Else
            PMPasoValoresATX VGSqlConn, "@i_grupo", 0, SQLVARCHAR, "N", "Grupo", ""
        End If
        PMPasoValoresATX VGSqlConn, "@i_ptipo_trn", 0, SQLVARCHAR, "000001", "TipoTrn", "" 'Tipo de Transaccion
        PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, VLFechaContEmp, "FechaComp", ""  'Format$(Date, "yyyymmdd")
        PMPasoValoresATX VGSqlConn, "@i_cod_respuesta", 0, SQLVARCHAR, VLDpCcodResp, "Cod. Respuesta", ""
        PMPasoValoresATX VGSqlConn, "@i_psecadq", 0, SQLVARCHAR, VLDpCSecAdq, "SecAdq", ""
        PMPasoValoresATX VGSqlConn, "@i_prazon_rev", 0, SQLCHAR, "", "IndRev", ""
        PMPasoValoresATX VGSqlConn, "@i_pid_pago", 0, SQLVARCHAR, "", "IdPagrev", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_pvalorpag", 0, SQLVARCHAR, Format((FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)), VGFormatoMoney), "ValorPag", ""
    PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "HoraLocal", ""
    PMPasoValoresATX VGSqlConn, "@i_pfechalocal", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "FechaLocal", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_serv", 0, SQLVARCHAR, "002", "TipoServ", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodadq", 0, SQLVARCHAR, Format(VLDpCcodAdq, "000000"), "CodAdq", ""
    PMPasoValoresATX VGSqlConn, "@i_pcod_agencia", 0, SQLVARCHAR, Format(VLDpCcodAgencia, "000"), "CodAgenc", ""
    PMPasoValoresATX VGSqlConn, "@i_pcajero", 0, SQLVARCHAR, Trim(VGUsuario), "Cajero", ""

    PMPasoValoresATX VGSqlConn, "@i_pnumero", 0, SQLVARCHAR, VGterminal, "Numero", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_moneda", 0, SQLVARCHAR, "USD", "TipoMon", ""
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, "VEN", "Canal", ""
'    PMPasoValoresATX VGSqlConn, "@i_pdocumento", 0, SQLVARCHAR, VLCedula, "Documento", ""

    'Valores de salida
    PMPasoValoresATX VGSqlConn, "@o_fecha_contable", 1, SQLVARCHAR, "XXXXXXXXXX", "Feccontable", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "0", "sec"
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fact_elect", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_cod_respuesta", 1, SQLVARCHAR, "xxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_mensaje_respuesta", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fec_ini_vig_aut", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fec_fin_vig_aut", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fecdessri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_pid_pago", 1, SQLVARCHAR, "xxxxxxxxxxxx", "", ""

    
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_pago_cnt", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        VLCambio% = False
        '------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VLSSnCorreccion = FMRetParamATX(VGSqlConn, 2)
        
        VLMG_ossn = FMRetParamATX(VGSqlConn, 2)
        VLSsn = FMRetParamATX(VGSqlConn, 2)
        VLMG_autorisri = Trim(FMRetParamATX(VGSqlConn, 3))
        VLautoriSri = Trim(VLMG_autorisri)
        VLMG_fecvensri = FMRetParamATX(VGSqlConn, 4)
        VLFecvenSRI = Trim(VLMG_fecvensri)
        VLFechaCorte = FMRetParamATX(VGSqlConn, 1)
        VLFechaContable = VLFechaCorte
        VLDpCcodResp = Trim(FMRetParamATX(VGSqlConn, 8))
        VLfact_elect = Trim(FMRetParamATX(VGSqlConn, 6))
        VLSerie_Secuencia = Trim(FMRetParamATX(VGSqlConn, 5))
        
        VLMG_Fecinivig = FMRetParamATX(VGSqlConn, 9)
        VLFecinivig = Trim(VLMG_Fecinivig)
        VLMG_Fecfinvig = FMRetParamATX(VGSqlConn, 10)
        VLFecfinvig = Trim(VLMG_Fecfinvig)
        VLCodAutorizacion = Trim(FMRetParamATX(VGSqlConn, 13))
        VLNombSuscr = Nombre.Text
       
'        VLImprCompComi = FMRetParamATX(VGSqlConn, 6)
'        VLNombSuscr = FMRetParamATX(VGSqlConn, 9)
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        FLTransmitir_CNTMOVIL_pago = True
        VLCambio% = False
        VLCambioCedruc% = False
        'TPE ------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 1
        PMIniciaRegSum
        '<-----
    Else
        VLCambio% = True
        VLCambioCedruc% = True
        FLTransmitir_CNTMOVIL_pago = False
        'TPE ------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 0
        PMChequeaATX VGSqlConn
        '<------
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        VTIndicadorSum = 0
        FLTransmitir_CNTMOVIL_pago = False
    End If
    
    PMFinTransaccion
    
    If FLTransmitir_CNTMOVIL_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    'Sumadora -->
    If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
        If (VTIndicadorSum = 1 _
        And (Trim$(VGStatusCon) = "A" _
        Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
                FLTransmitir_CNTMOVIL_pago = False
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then                'Por REVERSO
        PMEgresoEfectivo SGUsar, VLTrn, VGSSNCorr&
    End If
    
    Exit Function
    
Error:
    MsgBox "Error al transmitir la transaccion " & Chr(13) & "Error:" & Err.Description, vbCritical
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    FLTransmitir_CNTMOVIL_pago = False
    
End Function

'--> DAPV 10/DIC/2012 Impresion comprobante CNT-MOVIL INI
Sub ImprimeComprobanteCNTMOVIL()
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   If VGHorarioDif = True Then
        VLTrn = "3927"
   Else
        VLTrn = "3925"
   End If
'   PMSetDetalle "v" + CStr(VGTSN%) + " " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + CStr(VGOficina%) + " " + CStr(FMObtenerMonedaForma("141")) + " " + VGLogin$
'   PMSetDetalle "v" + "BCO. BOLIVARIANO SEC.:" + Trim(Format(VGFechaProceso, "yyyymmdd") & SGSecTrn)
'   PMSetDetalle "v" + VGMensImpr + FmObtenermodo() + " " + VLTrn + " TRANFERENCIAS EXTERIOR " + IIf(VLHorario = "D", "H:D", "H:N")


   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte 'hy-31-ene-2005 Formatear fecha
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Me.Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "Tipo de Servicio: " + FMEspaciosATX(Trim(Proceso.Text) + " " + Mid(Trim(Me.sal_proc.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "No. Celular: " + Trim(Ref)
'   PMSetDetalle "v" + "CED/RUC: " + Trim(VLCedula) + "       AUT.: " + Trim(VLDpCcodResp)
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(valor.Text, VGFormatoMoney), 12, CGJustificacionDerecha)
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "  CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   
   VLNeto = FMCCurATX(Pago_Val.Text) '- FMCCurATX(Comision.Text)  '/*cambio JPM 08122004*/
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto - FMCCurATX(Comision.Text), VGFormatoMoney), 12, CGJustificacionDerecha) '+ Coms  '/*JPM 08122004*/
   If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
        PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
   Else
        PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)) - ((FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text))), VGFormatoMoney), 13, CGJustificacionIzquierda)
   End If
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt
   VLTsnTemp% = VGTSN%
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))       'hy-categ agregar la moneda
End Sub
'--> DAPV 10/DIC/2012 Impresion comprobante CNT-MOVIL INI


'--> DAPV 10/DIC/2012 Impresion nota de venta CNTMOVIL INI
Public Sub PLImprimirNotaCNTMOVIL()

    If VLTotCom > 0 And VGTipoEjecucion = CGNormal% Then
        VGparlong$ = "66"
        VGpartop$ = "00"
        VGparleft$ = "07"
        VGparrig$ = "00"
        
        'smerino cambia formato de fecha de emision
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
            Case Is = "01"
                mes2 = "Enero"
            Case Is = "02"
                mes2 = "Febrero"
            Case Is = "03"
                mes2 = "Marzo"
            Case Is = "04"
                mes2 = "Abril"
            Case Is = "05"
                mes2 = "Mayo"
            Case Is = "06"
                mes2 = "Junio"
            Case Is = "07"
                mes2 = "Julio"
            Case Is = "08"
                mes2 = "Agosto"
            Case Is = "09"
                mes2 = "Septiembre"
            Case Is = "10"
                mes2 = "Octubre"
            Case Is = "11"
                mes2 = "Noviembre"
            Case Is = "12"
                mes2 = "Diciembre"
        End Select
        
        VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
 
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        PMSetDetalle "v" + "Serv. Recaudacion  " + "Fecha:" + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        PMSetDetalle "v" + "TELEFONIA MOVIL " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "Subtotal:      " + FMEspaciosATX(Format(VlbaseImp, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(VLiva, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
        If VLTipo_imp = "O" Then
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
        Else
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
        End If
        
        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If
    
        FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn
    End If
End Sub
'--> DAPV 10/DIC/2012 Impresion nota de venta CNTMOVIL fin

'msilvag Inicio Etapa
Function FLTransmitir_Etapa_consulta() As Boolean
On Error GoTo Error
    
    Dim VLCodigoRespuesta As String
    Dim MatrizCPS(10, 10) As String
    Dim i_Comision As Long
    Dim i_VlbaseImp As Long
    Dim i_VLiva As Long

    If Trim(Me.Ref.Text) = "" Then
        MsgBox "Debe ingresar el codigo del servicio, para la Consulta", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_Etapa_consulta = False
        Me.Ref.SetFocus
        Exit Function
    End If
    
    If VGTipoEjecucion% <> CGReverso% Then
        VLSsn = Trim$(str$(VGSqlConn))
    End If
    If Len(Trim$(VLSsn)) > 12 Then
        VLSsn = Right$(Trim$(VLSsn), 12)
    Else
        VLSsn = String(12 - Len(Trim$(VLSsn)), "0") + Trim$(VLSsn)
    End If
    
    Consulta_parametro_OSB
    
    'Llamar a la consulta Etapa
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62642, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "canal", "" 'Canal
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim$(Me.Empresa.Text), "Empresa", "" 'Empresa
    PMPasoValoresATX VGSqlConn, "@i_tipo_deuda", 0, SQLVARCHAR, "", "TipoDeuda", "" 'Tipo de deuda
    PMPasoValoresATX VGSqlConn, "@i_cod_deuda", 0, SQLVARCHAR, Trim$(Me.Ref.Text), "CodDeuda", "" 'Codigo de deuda
    
    'variables de retorno Etapa
'    PMPasoValoresATX VGSqlConn, "@o_cod_error", 1, SQLINT4, 0, "cod_error", "" 'codigo error
'    PMPasoValoresATX VGSqlConn, "@o_descp_error", 1, SQLVARCHAR, "xxx", "desc_error", "" 'mensaje de error
'    PMPasoValoresATX VGSqlConn, "@o_nombre_cliente", 1, SQLVARCHAR, "xxx", "nomb_cliente", "" 'nombre del cliente
    'If FMTransmitirRPCATX(VGSqlConn, "PSSRV1" "BBTSSRV", "cob_procesador", "fp_consulta_cporta", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_Etapa", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_Etapa_consulta = True
    
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        Nombre.Text = FLBuscarItem("@o_nombre")                   'Nombre del cliente
        'Total_Pagar.Text = FLBuscarItem("@o_deuda_actual")                  'Valor de la deuda
        VLTotal = FLBuscarItem("@o_deuda_actual")                 'Valor de la deuda
        VLDeudaActual = FLBuscarItem("@o_deuda_actual")
        VTotal1 = CDbl(VLTotal)
        VTotal2 = VTotal1 / 100
        If VTotal2 = "0" Or VTotal2 = "0.00" Or VTotal2 = 0 Then 'msilvag ETAPA Marzo-03-2016
            MsgBox "No tiene deuda Pendiente"
            FLTransmitir_Etapa_consulta = False
            Me.Ref.SetFocus
            Exit Function
        End If
        'Total_Pagar.Text = VTotal2
        Me.Pago_Val.Text = VTotal2
        VLIdentificadorDeduda = FLBuscarItem("@o_identificador_deuda")
        VLServicioNombre = FLBuscarItem("@o_servicio_nombre")
        VLTipoServicio = FLBuscarItem("@o_tipo_servicio")
        VLDocPendiente = FLBuscarItem("@o_doc_pendiente")
        VLFechaUltPago = FLBuscarItem("@o_fec_ult_pago")
        VLEstado = FLBuscarItem("@o_estado")
    Else
        FLTransmitir_Etapa_consulta = False
        PMFinTransaccion
        PMChequeaATX VGSqlConn
        Exit Function
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    
    'MsgBox "salio consula proveedor"
    
    'CONSULTA DE COMISION
    'Dim servicio1 As String
    'Dim rubro As String
    
    If VLTipoServicio = "TLF" Or VLTipoServicio = "AGP" Then
            servicio1 = "CSBA"
            If VLTipoServicio = "TLF" Then
                VLDescripServicio = "Telefono"
                rubro = "ETEL"
                Empresa1 = "1707"
                Me.Empresa.Text = "1707"
                Me.Servicio.Text = "1"
                Me.Sal_Emp.Caption = "ETAPA TELEFONO"
                Me.lblservicio.Caption = "TELEFONO"
            Else
                VLDescripServicio = "Agua"
                rubro = "EAGU"
                Empresa1 = "1708"
                Me.Empresa.Text = "1708"
                Me.Servicio.Text = "2"
                Me.Sal_Emp.Caption = "ETAPA AGUA"
                Me.lblservicio.Caption = "AGUA POTABLE"
            End If
        End If
    
        If VLTipoServicio = "INT" Or VLTipoServicio = "TVD" Or VLTipoServicio = "RDD" Then
            servicio1 = "CSPR"
            If VLTipoServicio = "INT" Or VLTipoServicio = "RDD" Then
                VLDescripServicio = "Internet"
                rubro = "EINT"
                Empresa1 = "6952"
                Me.Empresa.Text = "6952"
                Me.Servicio.Text = "8"
                Me.Sal_Emp.Caption = "ETAPA INTERNET"
                Me.lblservicio.Caption = "INTERNET"
            Else
                VLDescripServicio = "Television Pagada"
                rubro = "ETVP"
                Empresa1 = "6951"
                Me.Empresa.Text = "6951"
                Me.Servicio.Text = "7"
                Me.Sal_Emp.Caption = "ETAPA TV"
                Me.lblservicio.Caption = "TV PAGADA"
            End If
        End If
    
    'MsgBox "parametros de rubro y servicio por empresa"
    
'        PLConsultarComision

    PMInicioTransaccion
    VLComisionEtapa = 0
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Empresa1, "CodigoEmpresa", ""
    PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, 1, "IndicaComision", ""
    PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, servicio1, "ServicioPerson", ""
    PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, rubro, "RubroPerson", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        'MsgBox "datos de comision"
'        i_Comision = FMRetParamATX(VGSqlConn, 1)
'        i_VlbaseImp = FMRetParamATX(VGSqlConn, 3) 'base imponible
'        i_VLiva = FMRetParamATX(VGSqlConn, 4) 'IVA
        VLComisionEtapa = FMRetParamATX(VGSqlConn, 1)
        VlbaseImp = FMRetParamATX(VGSqlConn, 3)
        VLiva = FMRetParamATX(VGSqlConn, 4)

        'FLConsultarComision = True
        PMChequeaATX VGSqlConn&
        'PMFinTransaccion
    End If

    If VLComisionEtapa = 0 Then
      Comision.Enabled = False
    Else
      Comision.Enabled = True
      Me.Comision.Text = VLComisionEtapa
    End If
    PMFinTransaccion
    
     'LBP Inicio RECA-CC-SGC00025869
     If Comision.Text > 0 Then
        VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
        If VGCom_aux <> CDbl(Comision.Text) Then
            VGComision_original = Comision.Text
            Comision.Text = VGCom_aux
            VLComisionEtapa = VGCom_aux
        Else
            VGComision_original = Comision.Text
        End If
     End If
    'LBP Fin RECA-CC-SGC00025869
    
'    If FLConsultarComision("4050", Empresa1, "1", servicio1, rubro, "VEN", _
'        i_Comision, i_VlbaseImp, i_VLiva) Then
'        Icomision = i_Comision
'        Me.Comision.Text = Icomision
'        VlbaseImp = i_VlbaseImp 'Iva base Imponible
'        VLiva = i_VLiva 'IVA
'    End If

    'MsgBox "Salida de Consulta Comision"
    
    efe.Enabled = True
    Loc.Enabled = True
    CantChq.Enabled = True
    Pago_Val.Enabled = True
    CboTipCta.Enabled = True
    Cta.Enabled = True
    Empresa.Enabled = False
    Servicio.Enabled = False
    Proceso.Enabled = False
    Ref.Enabled = False
    Me.Total.Text = VTotal2 + Comision 'Comision.Text + Me.Total_Pagar.Text
    
    efe.SetFocus
    DoEvents

    Exit Function
Error:
    PMChequeaATX VGSqlConn&
    PMFinTransaccion
        
End Function

Sub PLConsultarComision()

 'CONSULTA DE COMISION

    PMInicioTransaccion
    VLComisionEtapa = 0
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Empresa1, "CodigoEmpresa", ""
    PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, 1, "IndicaComision", ""
    PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, servicio1, "ServicioPerson", ""
    PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, rubro, "RubroPerson", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        'MsgBox "datos de comision"
'        i_Comision = FMRetParamATX(VGSqlConn, 1)
'        i_VlbaseImp = FMRetParamATX(VGSqlConn, 3) 'base imponible
'        i_VLiva = FMRetParamATX(VGSqlConn, 4) 'IVA
        VLComisionEtapa = FMRetParamATX(VGSqlConn, 1)
        VlbaseImp = FMRetParamATX(VGSqlConn, 3)
        VLiva = FMRetParamATX(VGSqlConn, 4)

        'FLConsultarComision = True
        PMChequeaATX VGSqlConn&
        'PMFinTransaccion
    End If

    If VLComisionEtapa = 0 Then
      Comision.Enabled = False
    Else
      Comision.Enabled = True
    End If
    PMFinTransaccion
    
     'LBP Inicio RECA-CC-SGC00025869
     If VLComisionEtapa > 0 Then
        VGCom_aux = FMDevuelveComisionReal(CDbl(VLComisionEtapa), False, 51)
        If VGCom_aux <> CDbl(VLComisionEtapa) Then
            VGComision_original = VLComisionEtapa
            VLComisionEtapa = VGCom_aux
        Else
            VGComision_original = VLComisionEtapa
        End If
     End If
    'LBP Fin RECA-CC-SGC00025869

    ' MsgBox "fin de funcion Consulta Comision"
End Sub

Private Sub Consulta_Parametro_Banco()
'Consulta parametro para la entidad que se debe enviar de ETAPA
    Dim VLarregloParametro(30) As String
    
    If VGTipoEjecucion% = CGReverso% Then
        VGTipoEjecucion% = CGNormal%
        
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn&, "@t_trn", 0, SQLINT2, 1579, "", ""
        PMPasoValoresATX VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CBETA", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE", "", ""
        If FMTransmitirRPCATX(VGSqlConn&, ServerName$, "cobis", "sp_parametro", True, " Consulta de motivos ", "N", "N", "N", "51", "N", "N") Then
            VTR1% = FMMapeaArregloATX(VGSqlConn, VLarregloParametro())
            VLParametroBanco = LTrim(RTrim(Trim(VLarregloParametro(4))))
        Else
            VLParametroBanco = ""
        End If
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        VGTipoEjecucion% = CGReverso%
    Else
        'Dim VLarregloParametro(30) As String
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn&, "@t_trn", 0, SQLINT2, 1579, "", ""
        PMPasoValoresATX VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CBETA", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE", "", ""
        If FMTransmitirRPCATX(VGSqlConn&, ServerName$, "cobis", "sp_parametro", True, " Consulta de motivos ", "N", "N", "N", "51", "N", "N") Then
           VTR1% = FMMapeaArregloATX(VGSqlConn, VLarregloParametro())
           VLParametroBanco = LTrim(RTrim(Trim(VLarregloParametro(4))))
        Else
           VLParametroBanco = ""
        End If
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
    End If
End Sub

Function FLTransmitir_Etapa_pago() As Boolean
   Dim VTIndicadorSum As Integer
   Dim i As Integer
   Dim VLValor As String
    
    If VGHorarioDif Then
        VLTrn = "3926"
        VLHorario = "D"
    Else
        VLTrn = "3925"
        VLHorario = "N"
    End If
    
    FLTransmitir_Etapa_pago = False
    
    Consulta_Parametro_Banco
    Consulta_parametro_OSB
    
    VTIndicadorSum = 0
    VLTsnTemp = 0

    PMInicioTransaccion

    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62643, "Trn", ""
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    Else
        VGTipoEjecucion% = CGNormal%
        PMPasoValoresATX VGSqlConn, "@i_num_transaccion", 0, SQLVARCHAR, VLNumTransaccionReverso, "NumTrx", ""
        VGTipoEjecucion% = CGReverso%
    End If
    
    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLVARCHAR, "S", "AplCobis", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "ValorComision", ""
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "ComEfectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "ComCheques", ""
    PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, (VLDeb_com), "ComDebito", ""  'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLMONEY, efe.Text, "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, Loc.Text, "ValCheque", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Empresa1, "Empresa", ""
    
    'msilvag Inicio RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    If Me.Cta.ClipText <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (CboTipCta.Text), "Cantidad de cheques", ""
        PMPasoValoresATX VGSqlConn, "@i_cta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
        If Me.Debito > 0 Then
            PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
        End If
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (VLTipCta_com), "CboTipCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    End If
    
    'comento bloque de codigo para cobro de comisión con debito a cuenta
    'PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
    'PMPasoValoresATX VGSqlConn, "@i_cta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
    'PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, Me.NomCta.Text, "Nombre", ""
    'msilvag Fin
    PMPasoValoresATX VGSqlConn, "@i_nombre_cliente", 0, SQLVARCHAR, Me.Nombre.Text, "NombreCliente", ""
    PMPasoValoresATX VGSqlConn, "@i_entidad_finaciera", 0, SQLVARCHAR, VLParametroBanco, "CodBanco", ""
    PMPasoValoresATX VGSqlConn, "@i_identificador_deuda", 0, SQLVARCHAR, VLIdentificadorDeduda, "IdentDeuda", ""
    PMPasoValoresATX VGSqlConn, "@i_valor", 0, SQLVARCHAR, VLDeudaActual, "DeudaActual", "" 'valor total
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, Me.Pago_Val.Text, "Total", ""  'valor total
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, "VENT", "CanalProveedor", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipoPago", 0, SQLVARCHAR, "EFE", "TipoPago", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Trim(Servicio.Text), "", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
    PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Empresa.Text), "Grupo", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
    'Inicio Output Parameters
    PMPasoValoresATX VGSqlConn, "@o_num_transaccion", 1, SQLVARCHAR, "XXXXXXXXXX", "NumTransaccion", ""
    PMPasoValoresATX VGSqlConn, "@o_coddoc_Etapa", 1, SQLVARCHAR, "XXXXXXXXXXXXXXX", "CodDocEtapa", ""
'    PMPasoValoresATX VGSqlConn, "@o_fecha_contable", 1, SQLVARCHAR, "X", "FechaContable", ""
'    PMPasoValoresATX VGSqlConn, "@o_estado", 1, SQLVARCHAR, "0", "EstadoPago", ""
'    PMPasoValoresATX VGSqlConn, "@o_entidad_externa", 1, SQLVARCHAR, "X", "EntidadExterna", ""
'    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario", ""
'    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
    'Fin Output Parameters "BBTSSRV"
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_Etapa", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLTransmitir_Etapa_pago = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        VLEstado = FLBuscarItem("@o_estado")
        VLEntidadExterna = FLBuscarItem("@o_entidad_externa")
        VLNumTransaccion = FLBuscarItem("@o_num_transaccion")
        
        If RTrim(LTrim(VLNumTransaccion)) = "" Then
            VLCambio% = True
            VLFechaCorte = ""
            FLTransmitir_Etapa_pago = False
            SGSecTrn$ = VLDpPSecuencialTrx
            VTIndicadorSum = 0
            PMChequeaATX VGSqlConn
            
            PMFinTransaccion
            Exit Function
        End If
        
        VLCodDocEtapa = FLBuscarItem("@o_codDocEtapa")
        VLFechaContable = FLBuscarItem("@o_fecha_contable")
        VLSsn = FLBuscarItem("@o_ssn")
        
        If VGTipoEjecucion% <> CGReverso% Then
            VLDpPHorario = FLBuscarItem("@o_horario")
        End If

        VLHorario = VLDpPHorario
        
        SGSecTrn$ = VLSsn
        VLNumTransaccionReverso = FMRetParamATX(VGSqlConn, 1)
        VLDocEtapaReverso = FMRetParamATX(VGSqlConn, 2)
        'if VLNumTransaccionReverso
'        If VGTipoEjecucion% <> CGReverso% Then
'            SGSecTrn$ = VLSsn 'VLDpPSecuencialTrx
'        Else
'            SGSecTrn$ = VLSsn 'VLDpPSecuencialTrx
'        End If

        VLFechaCorte = Format(VLFechaContable, "mm/dd/yyyy")
        VTIndicadorSum = 1
        
        majo = Pago_Val.Text
        
        PMIniciaRegSum
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
        End If
        
        If VLconexion <> "F" Then
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_Etapa_pago = True
            VLCambio% = False
        End If

    Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_Etapa_pago = False
        SGSecTrn$ = VLDpPSecuencialTrx
        VTIndicadorSum = 0
        PMChequeaATX VGSqlConn
    End If

    PMFinTransaccion

    If FLTransmitir_Etapa_pago = True Then
        'JPM Lectora de Billetes -->
        If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
          'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
          Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
          lectoraBill.Limpiar
        End If
        '<-- JPM Lectora de Billetes
        Call PLFactura  'LLAMA A PROCEDIMIENTO DE FACTURA
    End If

   If VGTipoEjecucion% <> CGReverso% Then
      If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
         SGPrimeraVez = 0
         PMGrabaDesglose VLTrn, SGUsar, VLCambio%
         If VLCambio% = True Then
            MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
         End If
         SGActual = 1
      ElseIf VTIndicadorSum = 0 Then
         SGActual = 0
      End If
   ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
      VLTsnTemp = VGTSN
      PMEgresoEfectivo SGUsar, VLTrn
   End If
   If SGAcumulado < 0 Then
      VLDescargar = 1
   End If
   
End Function

'msilvag Fin Etapa

Function FLTransmitir_WS_ECUTEL_consulta() As Boolean
On Error GoTo Error
    
    Dim VLCodigoRespuesta As String
    
       'CODIGO DE CANAL PARA ECUTEL
        PMChequea VGSqlConn&
        PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_canales_ecutel"
        PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
        PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, "VEN"
        If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "") Then
            PMMapeaVariableATX VGSqlConn&, VTDetalles$
            PMChequea VGSqlConn&
            VLCanalEcut = VTDetalles$
            PMChequea VGSqlConn&
        Else
            VLCanalEcut = ""
            PMChequea VGSqlConn&
        End If
    
    
    'CODIGO DE INSTITUCION  ASIGNADO POR ECUTEL
    Dim VLarreglo(30) As String
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CIFECT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLInstAdq = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLInstAdq = ""
    End If
    PMChequea VGSqlConn&
    
    If Trim(VLInstAdq) = "" Then
        MsgBox "No existe Codigo de Instituciòn", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_WS_ECUTEL_consulta = False
        Ref.SetFocus
       Exit Function
    End If
    
    If Trim(VLCanalEcut) = "" Then
        MsgBox "No existe Codigo de Canal", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_WS_ECUTEL_consulta = False
        Ref.SetFocus
       Exit Function
    End If
    
    If Trim(Me.Ref.Text) = "" Then
        MsgBox "Debe ingresar código de identificación, para la Consulta", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_WS_ECUTEL_consulta = False
        Ref.SetFocus
       Exit Function
    End If
    
    Select Case Me.cboTipoId.Text
        Case "C":
            VLTipoDocumento = "002"
        Case "R":
            VLTipoDocumento = "008"
        Case "P":
            VLTipoDocumento = "007"
    End Select
    
    
    'Llamar a la consulta ECUTEL
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62320, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_doc", 0, SQLVARCHAR, Trim$(VLTipoDocumento), "TipoDoc", "" 'Tipo Identificacion
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim$(Ref.Text), "Codigo", "" 'Identificacion
    PMPasoValoresATX VGSqlConn, "@i_pid_banco", 0, SQLVARCHAR, Trim$(VLInstAdq), "IdBanco", ""
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, Trim$(VLCanalEcut), "canal", ""
    
    PMPasoValoresATX VGSqlConn, "@o_pnombre", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pvalor", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfecha_pago", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pid_respuesta", 1, SQLVARCHAR, Trim$(""), "", """"
    PMPasoValoresATX VGSqlConn, "@o_msg", 1, SQLVARCHAR, Trim$(""), "", ""
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_consulta_ecutel", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
'    If FMTransmitirRPCATX(VGSqlConn, "CTSSRV", "cob_procesador", "fp_consulta_ecutel", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_WS_ECUTEL_consulta = True
        Nombre.Text = Trim(FMRetParamATX(VGSqlConn, 1))
        Total_Pagar.Text = CCur(Trim(FMRetParamATX(VGSqlConn, 2)))
        VLpfecha_Pago = Trim(FMRetParamATX(VGSqlConn, 3))
        VLpcodresp = Trim(FMRetParamATX(VGSqlConn, 4))
        VLpmensaje = Trim(FMRetParamATX(VGSqlConn, 5))
        
        'Valor viene en cero
        If Total_Pagar.Text <= 0 Then
            MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
            FLTransmitir_WS_ECUTEL_consulta = False
            PMFinTransaccion
            PMChequeaATX VGSqlConn
            Exit Function
        End If
        Pago_Val.Enabled = True
    Else
        FLTransmitir_WS_ECUTEL_consulta = False
        PMFinTransaccion
        PMChequeaATX VGSqlConn
        Exit Function
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    
    SGEmpresa = Me.Empresa.Text 'msilvag RECA-CC-SGC00027715
    
    'CONSULTA DE COMISION
'    Dim valor As String
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Empresa.Text, "Codigo de empresa", ""
     'msilvag Inicio Tarea: RECA-CC-SGC00027715
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, "C", "Opcion", ""
    'PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, "1", "Indica Comision", ""
    'PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, "CSPR", "Servicio Person", ""
    'PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, "ECUT", "Rubro Person", ""
    'msilvag Fin
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Rubro Person", ""
    'Variables de salida
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, 0, "ssn", ""
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'IVA
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        Comision = FMRetParamATX(VGSqlConn, 2)
        VlbaseImp = FMRetParamATX(VGSqlConn, 4) 'IVA
        VLiva = FMRetParamATX(VGSqlConn, 5) 'IVA
        VLSsn = FMRetParamATX(VGSqlConn, 1)
        If Len(Trim$(VLSsn)) > 12 Then
            VLSsn = Right$(Trim$(VLSsn), 12)
        Else
            VLSsn = String(12 - Len(Trim$(VLSsn)), "0") + Trim$(VLSsn)
        End If
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        
         'LBP Inicio RECA-CC-SGC00025869
         If Comision.Text > 0 Then
            VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
            If VGCom_aux <> CDbl(Comision.Text) Then
                VGComision_original = Comision.Text
                Comision.Text = VGCom_aux
            Else
                VGComision_original = Comision.Text
            End If
         End If
        'LBP Fin RECA-CC-SGC00025869
        
        If CCur(Comision.Text) > 0 Then
            Comision.Enabled = True
        End If
    
    Else
        FLTransmitir_WS_ECUTEL_consulta = False
        Comision = 0
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        Exit Function
    End If

    efe.Enabled = True
    Proceso.Enabled = False
    Loc.Enabled = True
    CantChq.Enabled = True
'    Pago_Val.Enabled = False
    CboTipCta.Enabled = True
    Cta.Enabled = True
    Empresa.Enabled = False
    Servicio.Enabled = False
    Ref.Enabled = False
    efe.SetFocus
    DoEvents

    Exit Function
Error:
    PMChequeaATX VGSqlConn&
    PMFinTransaccion
        
End Function

Function FLTransmitir_MS_ECUTEL_consulta() As Boolean
On Error GoTo Error
    
    Dim VLCodigoRespuesta As String
    Dim VLTipoServicio As String
    Dim VLEmpresa As String
    Dim VLConvenio As String
    Dim VLCodTipoId As String
    
       'CODIGO DE CANAL PARA ECUTEL
        PMChequea VGSqlConn&
        PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_canales_ecutel"
        PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
        PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, "VEN"
        If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "") Then
            PMMapeaVariableATX VGSqlConn&, VTDetalles$
            PMChequea VGSqlConn&
            VLCanalEcut = VTDetalles$
            PMChequea VGSqlConn&
        Else
            VLCanalEcut = ""
            PMChequea VGSqlConn&
        End If
    
    
    'CODIGO DE INSTITUCION  ASIGNADO POR ECUTEL
    Dim VLarreglo(30) As String
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CIFECT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLInstAdq = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLInstAdq = ""
    End If
    PMChequea VGSqlConn&
    
    If Trim(VLInstAdq) = "" Then
        MsgBox "No existe Codigo de Institución", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_MS_ECUTEL_consulta = False
        Ref.SetFocus
       Exit Function
    End If
    
    If Trim(VLCanalEcut) = "" Then
        MsgBox "No existe Codigo de Canal", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_MS_ECUTEL_consulta = False
        Ref.SetFocus
       Exit Function
    End If
    
    If Trim(Me.Ref.Text) = "" Then
        MsgBox "Debe ingresar código de identificación, para la Consulta", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_MS_ECUTEL_consulta = False
        Ref.SetFocus
       Exit Function
    End If
    
    Select Case Me.cboTipoId.Text
        Case "C":
            VLTipoDocumento = "002"
            VLCodTipoId = "CED"
        Case "R":
            VLTipoDocumento = "008"
            VLCodTipoId = "RUC"
        Case "P":
            VLTipoDocumento = "007"
            VLCodTipoId = "PASS"
    End Select

    Select Case Me.Empresa.Text
        Case "8521":
            VLTipoServicio = "TELEFONIA_FIJA"
            VLEmpresa = Me.Empresa.Text
            VLConvenio = "01"
        Case "R":
            VLTipoServicio = "TELEFONIA_FIJA"
            VLEmpresa = Me.Empresa.Text
            VLConvenio = "01"
        Case "P":
            VLTipoServicio = "TELEFONIA_FIJA"
            VLEmpresa = Me.Empresa.Text
            VLConvenio = "01"
    End Select
    
    PMInicioTransaccion
    '-- ************************* VARIABLE MICRO COBIS -- ************************
    PMPasoValoresATX VGSqlConn, "@i_trn", 0, SQLINT4, 3925, "Itrn", ""
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62684, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@e_canal", 0, SQLVARCHAR, "VEN", "canal", ""
    PMPasoValoresATX VGSqlConn, "@e_tipo_banca", 0, SQLVARCHAR, "BP", "BP", ""
    PMPasoValoresATX VGSqlConn, "@e_empresa", 0, SQLINT4, VLEmpresa, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@e_convenio", 0, SQLVARCHAR, VLConvenio, "Convenio", ""
    PMPasoValoresATX VGSqlConn, "@e_tipo_servicio", 0, SQLVARCHAR, VLTipoServicio, "Tipo Servicio", ""
    PMPasoValoresATX VGSqlConn, "@e_servicio", 0, SQLVARCHAR, VLConvenio, "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@e_tipo_identificador", 0, SQLVARCHAR, VLCodTipoId, "Tipo Identificador", ""
    PMPasoValoresATX VGSqlConn, "@s_date", 0, SQLVARCHAR, Format$(VGFechaProceso, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
    PMPasoValoresATX VGSqlConn, "@s_ofi", 0, SQLINT4, str(VGOficina%), "VGOficina%", ""
    PMPasoValoresATX VGSqlConn, "@e_identificacion", 0, SQLVARCHAR, Trim$(Ref.Text), "Identificador", ""
    
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref.Text), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_doc", 0, SQLVARCHAR, Trim$(VLTipoDocumento), "TipoDoc", "" 'Tipo Identificacion

    '-- ************************* VARIABLE SALIDA -- ************************
    PMPasoValoresATX VGSqlConn, "@codigoRespuesta", 1, SQLINT4, 0, "cod", ""
    PMPasoValoresATX VGSqlConn, "@formaPago", 1, SQLVARCHAR, "", "formapago", ""
    PMPasoValoresATX VGSqlConn, "@nombreCliente", 1, SQLVARCHAR, "", "nombreCliente", ""
    PMPasoValoresATX VGSqlConn, "@montoTotal", 1, SQLVARCHAR, 0, "montoTotal", ""
    PMPasoValoresATX VGSqlConn, "@identificadorDeuda", 1, SQLVARCHAR, 0, "identificadorDeuda", ""
    PMPasoValoresATX VGSqlConn, "@mensajeUsuario", 1, SQLVARCHAR, 0, "mensajeUsuario", ""

    If FMTransmitirRPCATX(VGSqlConn, "RECSRV", "cob_procesador", "fp_consulta_reca_ms", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
    'If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_consulta_ecutel", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then

        FLTransmitir_MS_ECUTEL_consulta = True
        Nombre.Text = FMRetParamATX(VGSqlConn, 2) 'Trim(FMRetParamATX(VGSqlConn, 1))
        Total_Pagar.Text = Format(FMRetParamATX(VGSqlConn, 4), "#0.00") 'CCur(Trim(FMRetParamATX(VGSqlConn, 2)))
        VLpfecha_Pago = Format$(VGFechaProceso, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss")
        VLpcodresp = Trim(FMRetParamATX(VGSqlConn, 0))
        VLpmensaje = Trim(FMRetParamATX(VGSqlConn, 5))
        
        If Total_Pagar.Text <= 0 Then
            MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
            FLTransmitir_MS_ECUTEL_consulta = False
            PMFinTransaccion
            PMChequeaATX VGSqlConn
            Exit Function
        End If
        Pago_Val.Enabled = True
    Else
        FLTransmitir_MS_ECUTEL_consulta = False
        PMFinTransaccion
        PMChequeaATX VGSqlConn
        Exit Function
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    
    SGEmpresa = Me.Empresa.Text 'msilvag RECA-CC-SGC00027715
    
    'CONSULTA DE COMISION
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Empresa.Text, "Codigo de empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, "C", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Rubro Person", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, 0, "ssn", ""
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        Comision = FMRetParamATX(VGSqlConn, 2)
        VlbaseImp = FMRetParamATX(VGSqlConn, 4) 'IVA
        VLiva = FMRetParamATX(VGSqlConn, 5) 'IVA
        VLSsn = FMRetParamATX(VGSqlConn, 1)
        If Len(Trim$(VLSsn)) > 12 Then
            VLSsn = Right$(Trim$(VLSsn), 12)
        Else
            VLSsn = String(12 - Len(Trim$(VLSsn)), "0") + Trim$(VLSsn)
        End If
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        
         'LBP Inicio RECA-CC-SGC00025869
         If Comision.Text > 0 Then
            VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
            If VGCom_aux <> CDbl(Comision.Text) Then
                VGComision_original = Comision.Text
                Comision.Text = VGCom_aux
            Else
                VGComision_original = Comision.Text
            End If
         End If
        'LBP Fin RECA-CC-SGC00025869
        
        If CCur(Comision.Text) > 0 Then
            Comision.Enabled = True
        End If
    
    Else
        FLTransmitir_MS_ECUTEL_consulta = False
        Comision = 0
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        Exit Function
    End If

    efe.Enabled = True
    Proceso.Enabled = False
    Loc.Enabled = True
    CantChq.Enabled = True
    CboTipCta.Enabled = True
    Cta.Enabled = True
    Empresa.Enabled = False
    Servicio.Enabled = False
    Ref.Enabled = False
    efe.SetFocus
    DoEvents

    Exit Function
Error:
    PMChequeaATX VGSqlConn&
    PMFinTransaccion
        
End Function
'
Function FLTransmitir_MS_ECUTEL_pago() As Boolean 'ECUTEL 03-Febrero-2023
On Error GoTo Error

    VLServicio = "Recaudacion"
    Dim VLTipoServicio As String
    Dim VLEmpresa As String
    Dim VLConvenio As String
    Dim VLCodTipoId As String
    Dim vl_procedure As String
    Dim Vl_trxFlujo As String
    Dim VLTPCuenta  As String

    vl_procedure = "fp_pago_reca_ms"
    Vl_trxFlujo = "62685"

    '***************** VALIDACION HORARIO ***********
    If VGHorarioDif Then
        VLTrn = "3926"
        VLHorario = "D"
    Else
        VLTrn = "3925"
        VLHorario = "N"
    End If
    
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    
    VLIndReverso = False
    
    If VGTipoEjecucion% = CGReverso% Then
        VLIndReverso = True
    End If
    
    'VALIDACIONES
    Dim Fecha As String
    Fecha = Format$(Date, "yyyymmdd")
    
    Dim fr_ced_ruc As String
    fr_ced_ruc = Replace(SGCedula, "_", "")
    
    Select Case Me.cboTipoId.Text
        Case "C":
            VLTipoDocumento = "002"
            VLCodTipoId = "CED"
        Case "R":
            VLTipoDocumento = "008"
            VLCodTipoId = "RUC"
        Case "P":
            VLTipoDocumento = "007"
            VLCodTipoId = "PASS"
    End Select
    
    Select Case Me.Empresa.Text
        Case "8521":
            VLTipoServicio = "TELEFONIA_FIJA"
            VLEmpresa = Me.Empresa.Text
            VLConvenio = "01"
        Case "R":
            VLTipoServicio = "TELEFONIA_FIJA"
            VLEmpresa = Me.Empresa.Text
            VLConvenio = "01"
        Case "P":
            VLTipoServicio = "TELEFONIA_FIJA"
            VLEmpresa = Me.Empresa.Text
            VLConvenio = "01"
    End Select

    PMChequeaATX VGSqlConn
    PMFinTransaccion
    PMInicioTransaccion

    '***************** TRX DE REVERSO ***********
    If VGTipoEjecucion% = CGReverso% Then
        VLIndReverso = True
        Vl_trxFlujo = "62690"
        vl_procedure = "fp_reverso_reca_ms"
    End If

    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
        PMPasoValoresATX VGSqlConn, "@e_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    End If

    '***************** VALIDACION FORMA PAGO ***********
    VLMonto = Me.Total.Text - Comision.Text
    
    If Debito.Text > 0 Then
        VLTPCuenta = CboTipCta.Text
    End If

    '****** BRANCH *******************************************************
    PMPasoValoresATX VGSqlConn, "@i_moneda", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, efe.Text, "Efectivo", ""
    
    PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (VLTPCuenta), "TipoCta", ""
    PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cuenta", ""
    'PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""

    If CantChq.Text = "" Then
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, "0", "Cantidad de cheques", ""
        PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, "0", "CantChq", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, (CantChq.Text), "Cantidad de cheques", ""
        PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
    End If
    
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Total_Pagar.Text), "Total pagado", ""
    PMPasoValoresATX VGSqlConn, "@i_totval", 0, SQLMONEY, (Pago_Val.Text), "Total a pagar", ""
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, Me.Comision.Text, "Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, (VLDeb_com), "Com. Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    
    '****** MS-COBIS *******************************************************
    PMPasoValoresATX VGSqlConn, "@e_empresa", 0, SQLINT4, Trim(Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Servicio.Text, "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim(Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_doc", 0, SQLVARCHAR, Trim$(VLTipoDocumento), "TipoDoc", ""
    
    PMPasoValoresATX VGSqlConn, "@e_convenio", 0, SQLVARCHAR, VLConvenio, "Convenio", ""
    PMPasoValoresATX VGSqlConn, "@e_tipo_servicio", 0, SQLVARCHAR, VLTipoServicio, "Tipo Servicio", ""
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, Vl_trxFlujo, "Trn Flujo", ""
    PMPasoValoresATX VGSqlConn, "@i_trn", 0, SQLINT4, VLTrn, "Itrn", ""
    PMPasoValoresATX VGSqlConn, "@e_tipo_banca", 0, SQLVARCHAR, "BP", "BP", ""
    PMPasoValoresATX VGSqlConn, "@e_tipo_identificador", 0, SQLVARCHAR, VLCodTipoId, "Tipo Identificador", ""

    '****** MS-PAGO CORE *******************************************************
    PMPasoValoresATX VGSqlConn, "@i_tipoConsulta", 0, SQLVARCHAR, "2", "TipoConsulta", ""
    PMPasoValoresATX VGSqlConn, "@e_moneda", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@e_opcion", 0, SQLCHAR, "P", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@e_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@e_nombre", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""
    PMPasoValoresATX VGSqlConn, "@e_fecha_real", 0, SQLVARCHAR, Format(Date, "mm/dd/yyyy"), "FechaReal", ""
    PMPasoValoresATX VGSqlConn, "@srv", 0, SQLVARCHAR, "", "SRVDESA2", ""
    PMPasoValoresATX VGSqlConn, "@s_date", 0, SQLVARCHAR, Format$(VGFechaProceso, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
    PMPasoValoresATX VGSqlConn, "@e_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
    PMPasoValoresATX VGSqlConn, "@s_sectrx", 1, SQLINT4, 0, "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@e_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    
    
    PMPasoValoresATX VGSqlConn, "@e_cod_referencia", 0, SQLVARCHAR, Ref.Text, "Referencia", ""
    PMPasoValoresATX VGSqlConn, "@e_codigo", 0, SQLVARCHAR, Ref.Text, "Referencia", ""
    PMPasoValoresATX VGSqlConn, "@e_nombre_cliente", 0, SQLVARCHAR, Nombre.Text, "Nombre Cliente", ""
    '****** VALOR PAGO*******************************************************
    PMPasoValoresATX VGSqlConn, "@e_efectivo", 0, SQLMONEY, (efe.Text), "efe", ""
    PMPasoValoresATX VGSqlConn, "@e_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
    PMPasoValoresATX VGSqlConn, "@e_cant_cheques", 0, SQLINT4, val(CantChq.Text), "Cantidad de cheques", ""
    PMPasoValoresATX VGSqlConn, "@e_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    PMPasoValoresATX VGSqlConn, "@e_comision_efe", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@e_comision_chq", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@e_comision_db", 0, SQLMONEY, (VLDeb_com), "Com. debito", ""
    PMPasoValoresATX VGSqlConn, "@e_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
    PMPasoValoresATX VGSqlConn, "@e_total", 0, SQLMONEY, (VLMonto), "Total pagado", ""
    
    If Me.Cta.ClipText <> "" Then
        PMPasoValoresATX VGSqlConn, "@e_tipocta", 0, SQLCHAR, (VLTPCuenta), "TipoCta", ""
        PMPasoValoresATX VGSqlConn, "@e_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
    Else
        PMPasoValoresATX VGSqlConn, "@e_tipocta", 0, SQLVARCHAR, (VLTipCta_com), "TipoCta", ""
        PMPasoValoresATX VGSqlConn, "@e_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cuenta", ""
    End If
    
    '****** MS-PAGO PROVEEDOR *******************************************************
    PMPasoValoresATX VGSqlConn, "@e_concepto", 0, SQLVARCHAR, Trim$(Ref.Text), "SRVDESA2", ""
    PMPasoValoresATX VGSqlConn, "@e_identificacion", 0, SQLVARCHAR, Ref.Text, "Cod. Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (Total_Pagar.Text), "Subtotal", ""
    
    
    '****** FORMA PAGO PARA FACTURA*******************************************
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    PMPasoValoresATX VGSqlConn, "@referencia", 1, SQLINT4, 0, "0", "sec"
    
    If FMTransmitirRPCATX(VGSqlConn, "RECSRV", "cob_procesador", vl_procedure, True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        
        PMTotalesBranch "51"
        VLCambio% = False
        '------> Sumadora
        SGSecTrn$ = FLBuscarItem("@referencia")
        VLMG_ossn = SGSecTrn$
        VLSsn = SGSecTrn$
        
        'VLCodAutorizacion = Trim(FMRetParamATX(VGSqlConn, 13))
        VLNombSuscr = Nombre.Text

        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        FLTransmitir_MS_ECUTEL_pago = True
        VLCambio% = False
        VLCambioCedruc% = False
        'TPE ------> Sumadora
        'SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 1
        PMIniciaRegSum
        '<-----
    Else
        VLCambio% = True
        VLCambioCedruc% = True
        FLTransmitir_MS_ECUTEL_pago = False
        'TPE ------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 0
        PMChequeaATX VGSqlConn
        '<------
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        VTIndicadorSum = 0
        FLTransmitir_MS_ECUTEL_pago = False
    End If
    
    PMFinTransaccion
    
    If FLTransmitir_MS_ECUTEL_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    'Sumadora -->
    If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
        If (VTIndicadorSum = 1 _
        And (Trim$(VGStatusCon) = "A" _
        Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
                FLTransmitir_MS_ECUTEL_pago = False
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then                'Por REVERSO
        PMEgresoEfectivo SGUsar, VLTrn, VGSSNCorr&
    End If
    
    Exit Function
    
Error:
    MsgBox "Error al transmitir la transaccion " & Chr(13) & "Error:" & Err.Description, vbCritical
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    FLTransmitir_MS_ECUTEL_pago = False
    
End Function

'
'
Function FLTransmitir_WS_ECUTEL_pago() As Boolean 'ECUTEL 17-mayo-2013
On Error GoTo Error

    VLServicio = "Recaudacion"
    
    If VGHorarioDif Then
        VLTrn = "3926"
        VLHorario = "D"
    Else
        VLTrn = "3925"
        VLHorario = "N"
    End If
    
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    
    VLIndReverso = False
    
    If VGTipoEjecucion% = CGReverso% Then
        VLIndReverso = True
    End If
    
    'VALIDACIONES
    Dim Fecha As String
    Fecha = Format$(Date, "yyyymmdd")
    
    Dim fr_ced_ruc As String
    fr_ced_ruc = Replace(SGCedula, "_", "")
    
    Select Case Me.cboTipoId.Text
        Case "C":
            VLTipoDocumento = "002"
        Case "R":
            VLTipoDocumento = "008"
        Case "P":
            VLTipoDocumento = "007"
    End Select
    
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    PMInicioTransaccion
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    End If
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62322, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Servicio.Text, "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim(Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
'    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLMONEY, (efe.Text), "efe", ""
    PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
    
    PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (Total_Pagar.Text), "Subtotal", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_efe", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_chq", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_db", 0, SQLMONEY, (VLDeb_com), "Com. Debito", "" 'msilvag RECA-CC-SGC00027715
    
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Total_Pagar.Text), "Total pagado", ""
    PMPasoValoresATX VGSqlConn, "@i_totval", 0, SQLMONEY, (Pago_Val.Text), "Total a pagar", ""
    PMPasoValoresATX VGSqlConn, "@i_totapag", 0, SQLMONEY, (Total.Text), "Total", ""
    If CantChq.Text = "" Then
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, "0", "Cantidad de cheques", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, (CantChq.Text), "Cantidad de cheques", ""
    End If
        
    'msilvag Inicio RECA-CC-SGC00027715
    If Me.Cta.ClipText <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (CboTipCta.Text), "TipoCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
        If Me.Debito.Text > 0 Then
            PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
        End If
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (VLTipCta_com), "TipoCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    End If
    'msilvag Fin
    
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Ventanilla", ""
    PMPasoValoresATX VGSqlConn, "@i_cod_cliente", 0, SQLVARCHAR, (Ref.Text), "Cod. Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_ruc_cliente", 0, SQLVARCHAR, VLCedula, "Ruc Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre_cliente", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""

    'Parametros del proveedor
    PMPasoValoresATX VGSqlConn, "@i_ptipo_doc", 0, SQLVARCHAR, Trim$(VLTipoDocumento), "TipoDoc", "" 'Tipo Identificacion
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim$(Ref.Text), "Codigo", "" 'Identificacion
    PMPasoValoresATX VGSqlConn, "@i_pvalor", 0, SQLMONEY, Pago_Val.Text, "ValorPagar", ""
    PMPasoValoresATX VGSqlConn, "@i_pfpago", 0, SQLVARCHAR, "001", "FPago", "" 'Forma Pago
    PMPasoValoresATX VGSqlConn, "@i_pid_banco", 0, SQLVARCHAR, Trim$(VLInstAdq), "IdBanco", ""
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, Trim$(VLCanalEcut), "canal", ""
    PMPasoValoresATX VGSqlConn, "@i_pfecha_cont", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "fechacont", ""
    PMPasoValoresATX VGSqlConn, "@i_pfecha_trx", 0, SQLVARCHAR, Format$(Date, "yyyymmdd") + " " + Format$(Time(), "hh:mm:ss"), "fechatrx", ""
    If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
        VGTipoEjecucion% = CGNormal%
        PMPasoValoresATX VGSqlConn, "@i_psec_banco", 0, SQLVARCHAR, VLSsn, "SecBanco", ""
        VGTipoEjecucion% = CGReverso%
    Else
        PMPasoValoresATX VGSqlConn, "@i_psec_banco", 0, SQLVARCHAR, VLSsn, "SecBanco", ""
    End If
   
    'Valores de salida
    PMPasoValoresATX VGSqlConn, "@o_fecha_contable", 1, SQLVARCHAR, "XXXXXXXXXX", "Feccontable", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "0", "sec"
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fact_elect", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_cod_respuesta", 1, SQLVARCHAR, "xxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_mensaje_respuesta", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fec_ini_vig_aut", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fec_fin_vig_aut", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fecdessri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_pid_pago", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pid_respuesta", 1, SQLVARCHAR, Trim$(""), "", """"
    PMPasoValoresATX VGSqlConn, "@o_msg", 1, SQLVARCHAR, Trim$(""), "", ""
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_pago_ecutel", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        VLCambio% = False
        '------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VLSSnCorreccion = FMRetParamATX(VGSqlConn, 2)
        
        VLMG_ossn = FMRetParamATX(VGSqlConn, 2)
        VLSsn = FMRetParamATX(VGSqlConn, 2)
        VLMG_autorisri = Trim(FMRetParamATX(VGSqlConn, 3))
        VLautoriSri = Trim(VLMG_autorisri)
        VLMG_fecvensri = FMRetParamATX(VGSqlConn, 4)
        VLFecvenSRI = Trim(VLMG_fecvensri)
        If VGTipoEjecucion% <> CGReverso% Then
            VLFechaCorte = FMRetParamATX(VGSqlConn, 1)
            VLFechaContable = VLFechaCorte
            VLDpsececutel = Trim(FMRetParamATX(VGSqlConn, 13))
        End If
        VLHorario = Trim(FMRetParamATX(VGSqlConn, 12))
        VLDpCcodResp = Trim(FMRetParamATX(VGSqlConn, 8))
        VLfact_elect = Trim(FMRetParamATX(VGSqlConn, 6))
        VLSerie_Secuencia = Trim(FMRetParamATX(VGSqlConn, 5))
        
        VLMG_Fecinivig = FMRetParamATX(VGSqlConn, 9)
        VLFecinivig = Trim(VLMG_Fecinivig)
        VLMG_Fecfinvig = FMRetParamATX(VGSqlConn, 10)
        VLFecfinvig = Trim(VLMG_Fecfinvig)
        VLCodAutorizacion = Trim(FMRetParamATX(VGSqlConn, 13))
        VLNombSuscr = Nombre.Text

        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        FLTransmitir_WS_ECUTEL_pago = True
        VLCambio% = False
        VLCambioCedruc% = False
        'TPE ------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 1
        PMIniciaRegSum
        '<-----
    Else
        VLCambio% = True
        VLCambioCedruc% = True
        FLTransmitir_WS_ECUTEL_pago = False
        'TPE ------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 0
        PMChequeaATX VGSqlConn
        '<------
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        VTIndicadorSum = 0
        FLTransmitir_WS_ECUTEL_pago = False
    End If
    
    PMFinTransaccion
    
    If FLTransmitir_WS_ECUTEL_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    'Sumadora -->
    If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
        If (VTIndicadorSum = 1 _
        And (Trim$(VGStatusCon) = "A" _
        Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
                FLTransmitir_WS_ECUTEL_pago = False
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then                'Por REVERSO
        PMEgresoEfectivo SGUsar, VLTrn, VGSSNCorr&
    End If
    
    Exit Function
    
Error:
    MsgBox "Error al transmitir la transaccion " & Chr(13) & "Error:" & Err.Description, vbCritical
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    FLTransmitir_WS_ECUTEL_pago = False
    
End Function

Sub ImprimeComprobanteECUTEL() 'ECUTEL 17-Mayo-2013
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   If VGHorarioDif = True Then
        VLTrn = "3927"
   Else
        VLTrn = "3925"
   End If
   PMSetDetalle "v" + "Este pago sera procesado el " + Trim(VLFechaCorte)
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Me.Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + " No.Aut: " + Trim(VLDpsececutel)
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Me.Total_Pagar.Text, VGFormatoMoney), 12, CGJustificacionDerecha)
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "  CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   
   VLNeto = FMCCurATX(Pago_Val.Text)
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha)
   If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
        PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((Total_Pagar.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
   Else
        PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((Total_Pagar.Text)) - ((FMCCurATX(Pago_Val.Text))), VGFormatoMoney), 13, CGJustificacionIzquierda)
   End If
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGparleft$ = "10"
    VGpartop$ = "00"
    'ref14 vmirandt
   VLTsnTemp% = VGTSN%
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))       'hy-categ agregar la moneda
End Sub


Public Sub PLImprimirNotaECUTEL()

    If VLTotCom > 0 And VGTipoEjecucion = CGNormal% Then
        VGparlong$ = "66"
        VGpartop$ = "00"
        VGparleft$ = "07"
        VGparrig$ = "00"
        
        'smerino cambia formato de fecha de emision
        Dim Mes As String
        Dim dia As String
        Dim Anio As String
        Dim mes2 As String
        
        Mes = Mid(Format(VGFechaProceso, VGFormatoFecha$), 1, 2)
        dia = Mid(Format(VGFechaProceso, VGFormatoFecha$), 4, 2)
        Anio = Mid(Format(VGFechaProceso, VGFormatoFecha$), 7, 4)
        
        Select Case Mes
            Case Is = "01"
                mes2 = "Enero"
            Case Is = "02"
                mes2 = "Febrero"
            Case Is = "03"
                mes2 = "Marzo"
            Case Is = "04"
                mes2 = "Abril"
            Case Is = "05"
                mes2 = "Mayo"
            Case Is = "06"
                mes2 = "Junio"
            Case Is = "07"
                mes2 = "Julio"
            Case Is = "08"
                mes2 = "Agosto"
            Case Is = "09"
                mes2 = "Septiembre"
            Case Is = "10"
                mes2 = "Octubre"
            Case Is = "11"
                mes2 = "Noviembre"
            Case Is = "12"
                mes2 = "Diciembre"
        End Select
        
        VGFechaProceso2 = dia + "/" + mes2 + "/" + Anio
 
        PMSetDetalle "v" + "BANCO BOLIVARIANO C.A.     FACTURA"
        PMSetDetalle "v" + "RUC: " + " 0990379017001        " + "No. " + VLSerie_Secuencia
        PMSetDetalle "v" + "Junin 200 y Panama         " + "Aut. SRI :" + VLautoriSri
        PMSetDetalle "v" + "CONTRIBUYENTE ESPECIAL     " + "Fecha aut. :" + VLFecinivig
        PMSetDetalle "v" + "NOTIFICACION No. 39 de Julio 18 de 1995 " + "Valido hasta :" + VLFecfinvig
        PMSetDetalle "v" + "RESOLUCION No. 6925 de Julio 4 de 1995"
        PMSetDetalle "v" + "Sr.(es): " + (SGNombre)
        PMSetDetalle "v" + "CI/RUC: " + Replace(SGCedula, "_", "") + "   " + "Ofic.: " + VGDes_Oficina$
        PMSetDetalle "v" + "Serv. Recaudacion  " + "Fecha:" + VGFechaProceso2 + " " + IIf(VGHorarioDif, "H:D", "H:N")
        If Trim(Empresa.Text) = "5994" Then 'CONECEL TVS dpereirv
            PMSetDetalle "v" + "CLARO TV SATELITAL " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        Else
            PMSetDetalle "v" + "ECUADORTELECOM " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha)
        End If
        PMSetDetalle "v" + "Subtotal:      " + FMEspaciosATX(Format(VlbaseImp, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Iva 12%: " + FMEspaciosATX(Format(VLiva, VGFormatoMoney), 8, CGJustificacionDerecha)
        PMSetDetalle "v" + "VALOR TOTAL:   " + FMEspaciosATX(Format(VLTotCom, VGFormatoMoney), 8, CGJustificacionDerecha) + "    " + "Referencia: " + (Trim(Ref))
        If VLTipo_imp = "O" Then
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Original: Adquiriente"
        Else
            PMSetDetalle "v" + "Caj: " + VGLogin$ + "              " + "Copia: Emisor"
        End If
        
        If VGModeloImp$ = "590" Then
            PMSetDetalle "%R" & 2
        End If
    
        FMPRN_StdImpresion "IMPRESORA_1", False, "", "51", SGDatosDetalle, "Inserte COMPROBANTE Cobro Comision", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , VLTrn
    End If
End Sub
Function FLTransmitir_CONECEL_consultaTVS() As Boolean 'CONECEL TVS dpereirv
On Error GoTo Error
    
    Dim VLCodigoRespuesta As String
    VLInstAdq = ""
    
    'CODIGO DE INSTITUCION  ASIGNADO POR CONECEL
    Dim VLarreglo(30) As String
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CICTVS"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLInstAdq = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLInstAdq = ""
    End If
    PMChequea VGSqlConn&
    
    If Trim(VLInstAdq) = "" Then
        MsgBox "No existe Codigo de Instituciòn", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_CONECEL_consultaTVS = False
        Ref.SetFocus
       Exit Function
    End If
    
    If Trim(Me.Ref.Text) = "" Then
        MsgBox "Debe ingresar código de identificación, para la Consulta", vbCritical + vbOKOnly, "Atx"
        FLTransmitir_CONECEL_consultaTVS = False
        Ref.SetFocus
       Exit Function
    End If
    
    'Llamar a la consulta Proveedor
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62327, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim$(Ref.Text), "Codigo", "" 'Identificacion
    PMPasoValoresATX VGSqlConn, "@i_pid_banco", 0, SQLVARCHAR, Trim$(VLInstAdq), "IdBanco", ""
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, "VENT", "canal", ""
    PMPasoValoresATX VGSqlConn, "@o_pnombre", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pvalor", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfecha_pago", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pcod_respuesta", 1, SQLVARCHAR, Trim$(""), "", """"
    PMPasoValoresATX VGSqlConn, "@o_pmensaje", 1, SQLVARCHAR, Trim$(""), "", ""
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_consulta_claro_tvs", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_CONECEL_consultaTVS = True
        Nombre.Text = Trim(FMRetParamATX(VGSqlConn, 1))
        Total_Pagar.Text = CCur(Trim(FMRetParamATX(VGSqlConn, 2)))
        VLpfecha_Pago = Trim(FMRetParamATX(VGSqlConn, 3))
        VLpcodresp = Trim(FMRetParamATX(VGSqlConn, 4))
        VLpmensaje = Trim(FMRetParamATX(VGSqlConn, 5))
        
        'Valor viene en cero
        If Total_Pagar.Text <= 0 Then
            MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
            FLTransmitir_CONECEL_consultaTVS = False
            PMFinTransaccion
            PMChequeaATX VGSqlConn
            Exit Function
        End If
        Pago_Val.Enabled = True
    Else
        FLTransmitir_CONECEL_consultaTVS = False
        PMFinTransaccion
        PMChequeaATX VGSqlConn
        Exit Function
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    
    
    'CONSULTA DE COMISION
    
    SGEmpresa = Me.Empresa.Text  'msilvag RECA-CC-SGC00027715
    
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Empresa.Text, "Codigo de empresa", ""
    'msilvag Inicio RECA-CC-SGC00027715
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, "C", "Opcion", ""
    'PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, "1", "Indica Comision", ""
    'PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, "CSPR", "Servicio Person", ""
    'PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, "CTVS", "Rubro Person", ""
    'msilvag Fin
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal Person", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, 0, "ssn", ""
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        Comision = FMRetParamATX(VGSqlConn, 2)
        VlbaseImp = FMRetParamATX(VGSqlConn, 4)
        VLiva = FMRetParamATX(VGSqlConn, 5)
        VLSsn = FMRetParamATX(VGSqlConn, 1)
        If Len(Trim$(VLSsn)) > 12 Then
            VLSsn = Right$(Trim$(VLSsn), 12)
        Else
            VLSsn = String(12 - Len(Trim$(VLSsn)), "0") + Trim$(VLSsn)
        End If
        
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        
        'LBP Inicio RECA-CC-SGC00025869
        If Comision.Text > 0 Then
            VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
            If VGCom_aux <> CDbl(Comision.Text) Then
                VGComision_original = Comision.Text
                Comision.Text = VGCom_aux
            Else
                VGComision_original = Comision.Text
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        
        If CCur(Comision.Text) > 0 Then
            Comision.Enabled = True
        End If
    Else
        FLTransmitir_CONECEL_consultaTVS = False
        Comision = 0
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        Exit Function
    End If
    efe.Enabled = True
    Loc.Enabled = True
    CantChq.Enabled = True
    CboTipCta.Enabled = True
    Cta.Enabled = True
    Empresa.Enabled = False
    Servicio.Enabled = False
    Ref.Enabled = False
    efe.SetFocus
    DoEvents
    Exit Function
Error:
    PMChequeaATX VGSqlConn&
    PMFinTransaccion
        
End Function
Function FLTransmitir_CONECEL_pagoTVS() As Boolean 'CONECEL TVS dpereirv
On Error GoTo Error
    Dim fr_ced_ruc As String
    fr_ced_ruc = Replace(SGCedula, "_", "")
    
    VLServicio = "Recaudacion"
    
    If VGHorarioDif Then
        VLTrn = "3926"
        VLHorario = "D"
    Else
        VLTrn = "3925"
        VLHorario = "N"
    End If
    
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    
    VLIndReverso = False
    
    If VGTipoEjecucion% = CGReverso% Then
        VLIndReverso = True
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    PMInicioTransaccion
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    End If
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62329, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Servicio.Text, "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim(Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLMONEY, (efe.Text), "efe", ""
    PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (Total_Pagar.Text), "Subtotal", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_efe", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_chq", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_db", 0, SQLMONEY, (VLDeb_com), "Com. Debito", "" 'msilvag RECA-CC-SGC00027715
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Total_Pagar.Text), "Total pagado", ""
    PMPasoValoresATX VGSqlConn, "@i_totval", 0, SQLMONEY, (Pago_Val.Text), "Total a pagar", ""
    PMPasoValoresATX VGSqlConn, "@i_totapag", 0, SQLMONEY, (Total.Text), "Total", ""
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    If CantChq.Text = "" Then
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, "0", "Cantidad de cheques", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, (CantChq.Text), "Cantidad de cheques", ""
    End If
    
    'msilvag Inicio RECA-CC-SGC00027715
    If Me.Cta.ClipText <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (CboTipCta.Text), "TipoCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
        If Me.Debito.Text > 0 Then
            PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
        End If
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (VLTipCta_com), "TipoCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    End If
    'msilvag Fin
    
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Ventanilla", ""
    PMPasoValoresATX VGSqlConn, "@i_cod_cliente", 0, SQLVARCHAR, (Ref.Text), "Cod. Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_cod_referencia", 0, SQLVARCHAR, (Ref.Text), "Cod. Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_ruc_cliente", 0, SQLVARCHAR, VLCedula, "Ruc Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre_cliente", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""
    'Parametros del proveedor
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim$(Ref.Text), "Codigo", "" 'Identificacion
    PMPasoValoresATX VGSqlConn, "@i_pvalor", 0, SQLMONEY, Pago_Val.Text, "ValorPagar", ""
    PMPasoValoresATX VGSqlConn, "@i_pid_banco", 0, SQLVARCHAR, Trim$(VLInstAdq), "IdBanco", ""
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, "VENT", "canal", ""
    PMPasoValoresATX VGSqlConn, "@i_pfecha_cont", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "fechacont", ""
    PMPasoValoresATX VGSqlConn, "@i_pfecha_trx", 0, SQLVARCHAR, Format$(Date, "yyyymmdd") + " " + Format$(Time(), "hh:mm:ss"), "fechatrx", ""
    If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
        VGTipoEjecucion% = CGNormal%
        PMPasoValoresATX VGSqlConn, "@i_psec_banco", 0, SQLINT4, VLSsn, "SecBanco", ""
        VGTipoEjecucion% = CGReverso%
    Else
        PMPasoValoresATX VGSqlConn, "@i_psec_banco", 0, SQLINT4, VLSsn, "SecBanco", ""
    End If
   
    'Valores de salida
    PMPasoValoresATX VGSqlConn, "@o_fecha_contable", 1, SQLVARCHAR, "XXXXXXXXXX", "Feccontable", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "0", "sec"
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_nota_venta", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fact_elect", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_cod_respuesta", 1, SQLVARCHAR, "xxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_mensaje_respuesta", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fec_ini_vig_aut", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fec_fin_vig_aut", 1, SQLVARCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_fecdessri", 1, SQLVARCHAR, "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "x", "", ""
    PMPasoValoresATX VGSqlConn, "@o_pid_pago", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pcod_respuesta", 1, SQLVARCHAR, Trim$(""), "", """"
    PMPasoValoresATX VGSqlConn, "@o_pmensaje", 1, SQLVARCHAR, Trim$(""), "", ""
    
    If FMTransmitirRPCATX(VGSqlConn, "PSSRV1", "cob_procesador", "fp_pago_claro_tvs", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        VLCambio% = False
        '------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VLSSnCorreccion = FMRetParamATX(VGSqlConn, 2)
        
        VLMG_ossn = FMRetParamATX(VGSqlConn, 2)
        VLSsn = FMRetParamATX(VGSqlConn, 2)
        VLMG_autorisri = Trim(FMRetParamATX(VGSqlConn, 3))
        VLautoriSri = Trim(VLMG_autorisri)
        VLMG_fecvensri = FMRetParamATX(VGSqlConn, 4)
        VLFecvenSRI = Trim(VLMG_fecvensri)
        If VGTipoEjecucion% <> CGReverso% Then
            VLFechaCorte = FMRetParamATX(VGSqlConn, 1)
            VLFechaContable = VLFechaCorte
            VLDpsececutel = Trim(FMRetParamATX(VGSqlConn, 13))
        End If
        VLHorario = Trim(FMRetParamATX(VGSqlConn, 12))
        VLDpCcodResp = Trim(FMRetParamATX(VGSqlConn, 8))
        VLfact_elect = Trim(FMRetParamATX(VGSqlConn, 6))
        VLSerie_Secuencia = Trim(FMRetParamATX(VGSqlConn, 5))
        
        VLMG_Fecinivig = FMRetParamATX(VGSqlConn, 9)
        VLFecinivig = Trim(VLMG_Fecinivig)
        VLMG_Fecfinvig = FMRetParamATX(VGSqlConn, 10)
        VLFecfinvig = Trim(VLMG_Fecfinvig)
        VLCodAutorizacion = Trim(FMRetParamATX(VGSqlConn, 13))
        VLNombSuscr = Nombre.Text
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        FLTransmitir_CONECEL_pagoTVS = True
        VLCambio% = False
        VLCambioCedruc% = False
        'TPE ------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 1
        PMIniciaRegSum
        '<-----
    Else
        VLCambio% = True
        VLCambioCedruc% = True
        FLTransmitir_CONECEL_pagoTVS = False
        'TPE ------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 0
        PMChequeaATX VGSqlConn
        '<------
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        VTIndicadorSum = 0
        FLTransmitir_CONECEL_pagoTVS = False
    End If
    
    PMFinTransaccion
    
    If FLTransmitir_CONECEL_pagoTVS = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    'Sumadora -->
    If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
        If (VTIndicadorSum = 1 _
        And (Trim$(VGStatusCon) = "A" _
        Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
                FLTransmitir_CONECEL_pagoTVS = False
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then                'Por REVERSO
        PMEgresoEfectivo SGUsar, VLTrn, VGSSNCorr&
    End If
    
    Exit Function
    
Error:
    MsgBox "Error al transmitir la transaccion " & Chr(13) & "Error:" & Err.Description, vbCritical
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    FLTransmitir_CONECEL_pagoTVS = False
    
End Function
'msilvag Inicio Bus fase 2 Abril/20/2015 SOAF2-AP-SGC00019734-SGC00019742
Private Sub Consulta_parametro_OSB()
    
    If VGTipoEjecucion% = CGReverso% Then
        VGTipoEjecucion% = CGNormal%
        PMChequeaATX VGSqlConn&
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_servidor_servicios_soa", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V", "", ""
        If Trim(Empresa.Text) = 5479 Then
            If cbo_tipo2.ListIndex = 1 Then
                PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, (Proceso.Text), "", ""
            Else
                PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, "3", "", ""
            End If
        Else
            PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, (Empresa.Text), "", ""
        End If
        If FMTransmitirRPCATX(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "", "N", "S", "I", "0", "N", "N") Then
            PMMapeaObjetoATX VGSqlConn&, txthorario
            vl_servidor_BUS = txthorario
        End If
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        VGTipoEjecucion% = CGReverso%
    Else
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_servidor_servicios_soa", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V", "", ""
        If Trim(Empresa.Text) = 5479 Then
            If cbo_tipo2.ListIndex = 1 Then
                PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, (Proceso.Text), "", ""
            Else
                PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, "3", "", ""
            End If
        Else
            PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, (Empresa.Text), "", ""
        End If
        If FMTransmitirRPCATX(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "", "N", "S", "I", "0", "N", "N") Then
            PMMapeaObjetoATX VGSqlConn&, txthorario
            vl_servidor_BUS = txthorario
        End If
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
    End If
    
End Sub
'msilvag Fin

'msilvag Inicio RECA-CC-SGC00027715
Private Sub Consulta_parametro_comision()
    
    If VGTipoEjecucion% = CGReverso% Then
        VGTipoEjecucion% = CGNormal%
        PMChequeaATX VGSqlConn&
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "cl_comision_empresa", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V", "", ""
        If Trim(Empresa.Text) = 5479 Then
            If cbo_tipo2.ListIndex = 1 Then
                PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, (Proceso.Text), "", ""
            Else
                PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, "3", "", ""
            End If
        Else
            PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, (Empresa.Text), "", ""
        End If
        If FMTransmitirRPCATX(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "", "N", "S", "I", "0", "N", "N") Then
            PMMapeaObjetoATX VGSqlConn&, txthorario
            VLCobroComDeb = txthorario
        End If
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        VGTipoEjecucion% = CGReverso%
    Else
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "cl_comision_empresa", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V", "", ""
        If Trim(Empresa.Text) = 5479 Then
            If cbo_tipo2.ListIndex = 1 Then
                PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, (Proceso.Text), "", ""
            Else
                PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, "3", "", ""
            End If
        Else
            PMPasoValoresATX VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, (Empresa.Text), "", ""
        End If
        If FMTransmitirRPCATX(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "", "N", "S", "I", "0", "N", "N") Then
            PMMapeaObjetoATX VGSqlConn&, txthorario
            VLCobroComDeb = txthorario
        End If
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
    End If
    
End Sub
'msilvag Fin

'pricaura Inicio BUS Fase2
Private Sub Consulta_Parametro()
'Consulta parametro para utilizar el servicio del Bus O Csp
    
   Dim VLarregloParametro(30) As String
   
   If VGTipoEjecucion% = CGReverso% Then
        VGTipoEjecucion% = CGNormal%
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn&, "@t_trn", 0, SQLINT2, 1579, "", ""
        PMPasoValoresATX VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "SRVGTV", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE", "", ""
        If FMTransmitirRPCATX(VGSqlConn&, ServerName$, "cobis", "sp_parametro", True, " Consulta de motivos ", "N", "N", "N", "51", "N", "N") Then
           VTR1% = FMMapeaArregloATX(VGSqlConn, VLarregloParametro())
           VLParametroServer = LTrim(RTrim(Trim(VLarregloParametro(4))))
        Else
           VLParametroServer = "PSSRV1"
        End If
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        VGTipoEjecucion% = CGReverso%
    Else
        PMInicioTransaccion
        PMPasoValoresATX VGSqlConn&, "@t_trn", 0, SQLINT2, 1579, "", ""
        PMPasoValoresATX VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "SRVGTV", "", ""
        PMPasoValoresATX VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE", "", ""
        If FMTransmitirRPCATX(VGSqlConn&, ServerName$, "cobis", "sp_parametro", True, " Consulta de motivos ", "N", "N", "N", "51", "N", "N") Then
           VTR1% = FMMapeaArregloATX(VGSqlConn, VLarregloParametro())
           VLParametroServer = LTrim(RTrim(Trim(VLarregloParametro(4))))
           'VLParametroServer = "PSSRV1"  'solo pruebas hoy
        Else
           VLParametroServer = "PSSRV1"
        End If
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
   End If
   
End Sub

'pricaura Fin BUS Fase2
'smerino belcorp
Function FLTransmitir_consulta_Servicios() As Boolean
Dim VLFechaVen As String
Dim VLTotCom As Currency
'Dim vtmatrizcps(1, 5) As String      'hy-19-enero-2007

VLCodConsultora = "" 'msilvag RECA-CC-SGC00032726

Consulta_parametro_OSB 'msilvag Bus Fase2
SGEmpresa = Me.Empresa.Text

'valor Maximo
'--ini smerinom MONTO MAXIMO RECAUDACION BELCORP
Dim VLarreglo(30) As String
PMChequea VGSqlConn&
PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "MMBELC"
PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
  VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
  VLOperacion = LTrim(RTrim(Trim(VLarreglo(8))))
Else
  VLOperacion = ""
End If
PMChequea VGSqlConn&
'--fin smerinom
    
'--ini CODIGO DE BANCO ASIGNADO POR BELCORP
PMChequea VGSqlConn&
PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "CBCBEL"
PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
  VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
  VLCodBanco = LTrim(RTrim(Trim(VLarreglo(4))))
Else
  VLCodBanco = ""
End If
PMChequea VGSqlConn&
'--fin smerinom

 FLTransmitir_consulta_Servicios = False
 VLTsnTemp = 0
  'llamar a la consulta
    PLTipoTransaccion
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62031, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_psource_channel", 0, SQLVARCHAR, Trim$("10"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_cuenta", 0, SQLVARCHAR, Trim$(Ref.Text), "", ""
    'PMPasoValoresATX VGSqlConn, "@i_pcodigo_banco", 0, SQLVARCHAR, Trim$("20001000"), "", 14100001""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_banco", 0, SQLVARCHAR, VLCodBanco, "", ""  'solo por pruebas
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_inst", 0, SQLVARCHAR, Trim$("20004003"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pmonto", 0, SQLMONEY, 0, "", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_moneda", 0, SQLVARCHAR, Trim$("840"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, (Empresa.Text), "Codigo de empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, "C", "opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, "0", "Indica Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, "CSPR", "Servicio Person", ""  '"CSBA" SMERINO RUBRO DE TVCABLE
    PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, "BELC", "Rubro Person", ""  '"BELC" SMERINO RUBRO DE TVCABLE
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "", "" 'Trim$("VEN")ECU
    PMPasoValoresATX VGSqlConn, "@i_pcanal_pago", 0, SQLVARCHAR, Trim$("010"), "", "" 'Trim$("VEN")
    PMPasoValoresATX VGSqlConn, "@i_pcod_pais", 0, SQLVARCHAR, Trim$("ECU"), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pdeuda", 1, SQLMONEY, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pnombres", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pvalormin", 1, SQLMONEY, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_pfechlimpag", 1, SQLVARCHAR, Trim$(""), "", ""
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, Trim$(""), "", ""
    'PMPasoValoresATX VGSqlConn, "@i_pcanal_pago", 0, SQLVARCHAR, Format$(Date, "yymmdd"), "", ""  CTSSRV
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_belcorp", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_consulta_Servicios = True
       'Dim vtma(2, 50) As String
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
       ' VLDeudaTotal = Trim(FMRetParamATX(VGSqlConn, 1))
        VLDeudaTotal = FLBuscarItem("@o_pdeuda") ''Trim(FMRetParamATX(1, 1))
        valor.Text = Trim$(str$(CCur(VLDeudaTotal) / 100))
        Total.Text = Trim$(str$(CCur(VLDeudaTotal) / 100))
       ' VLNombre = Trim(FMRetParamATX(VGSqlConn, 2))
        VLNombre = FLBuscarItem("@o_pnombres")   ''Trim(FMRetParamATX(VGSqlConn, 3))
        Nombre = VLNombre
       ' Comision.Text = Trim(FMRetParamATX(VGSqlConn, 6))
        VLDeudaAnt = FLBuscarItem("@o_pvalormin")   ''Trim(FMRetParamATX(VGSqlConn, 3))
        Me.Minimo.Text = Trim$(str$(CCur(VLDeudaAnt) / 100))
        Total.Text = CCur(valor.Text) + CCur(Comision.Text)
        VLFechaVen = FLBuscarItem("@o_pfechlimpag")    ''Trim(FMRetParamATX(VGSqlConn, 4))
        VLFechaVen = Mid(VLFechaVen, 5, 2) + "/" + Mid(VLFechaVen, 7, 2) + "/" + Mid(VLFechaVen, 1, 4)
        Me.txtFechVen.Text = VLFechaVen
        '+   'VLFechaVen   'Format(VLFechaVen, "yymmdd")  'Format$(Date, "Format$(Date, "yymmdd")")
        Comision = FLBuscarItem("@o_comision")    'Trim(FMRetParamATX(VGSqlConn, 5))
        
        VLCodConsultora = FLBuscarItem("@o_pcodConsultora") 'msilvag RECA-CC-SGC00032726
        
        SGActivaSum = False 'smerino para que muetsre la sumador
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        
        'LBP Inicio RECA-CC-SGC00025869
        If Comision.Text > 0 Then
            VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
            If VGCom_aux <> CDbl(Comision.Text) Then
                VGComision_original = Comision.Text
                Comision.Text = VGCom_aux
            Else
                VGComision_original = Comision.Text
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        
        If CCur(Comision.Text) > 0 Then
          Comision.Enabled = True
'          Total.Text = FMCCurATX(Valor.Text) + FMCCurATX(Comision.Text) 'LBP Se comenta para colocarlo abajo
        End If
'       Else
'        MsgBox "Error no se pudo obtener la comisión", vbCritical, "Aviso"
'        Comision = 0#
'
'       End If

        efe.Enabled = True
        Loc.Enabled = False
        CantChq.Enabled = False
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
        If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
        End If
        efe.SetFocus
    Else
        PMChequeaATX VGSqlConn
        PMFinTransaccion
    End If

End Function


'smerino belcorp
Function FLTransmitir_pagos_Servicios() As Boolean 'smerino belcorp

    
   If VGHorarioDif Then
        VLTrn = "3926"
        VLHorario = "D"
    Else
        VLTrn = "3925"
        VLHorario = "N"
    End If


     VLIndReverso = False
    
    If VGTipoEjecucion% = CGReverso% Then
        VLIndReverso = True
      End If
    
    
    VTIndicadorSum = 0
    VLTsnTemp = 0
    
       
   Consulta_parametro_OSB 'msilvag Bus Fase2

    If VGTipoEjecucion% <> CGReverso% Then
    'VAlidacion del valor maximo
    
    If Debito.Text > 0# And VLDeb_com > 0# Then
       If Me.Cta.Text <> "___-______-_" And Cta.ClipText <> VLCta_com Then 'smerino belcorp
         MsgBox "La cuenta de débito de comisión debe ser igual  a la cuenta del débito del servicio."
         Exit Function
    End If
  End If
  
     
     If FMCCurATX(Pago_Val.Text) > FMCCurATX(VLOperacion) Then
        MsgBox "Valor a Pagar es mayor al Monto Maximo Permitido"
         Exit Function
   End If
    'VAlidacion del valor minimo
'     If FMCCurATX(Pago_Val.Text) < FMCCurATX(Me.Minimo.Text) Then
'        MsgBox "Valor a Pagar es menor al Monto Minimo Permitido"
'         Exit Function
'   End If
  End If
  
    
    PMInicioTransaccion
 
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    End If
    'PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62032, "Trn", "" VLTrn
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62032, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_ssn", 0, SQLINT4, 0, "SecAut", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, "P", "opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
    PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, "0", "Indica Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Servicio.Text, "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim(Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLMONEY, (efe.Text), "efe", ""
    'PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (Pago_Val.Text), "Subtotal", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_efe", 0, SQLMONEY, (VLEfe_com), "Comefectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_chq", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Pago_Val", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_db", 0, SQLMONEY, (VLDeb_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (valor.Text), "Total pagado", "" 'Total.Text
    PMPasoValoresATX VGSqlConn, "@i_totalF", 0, SQLMONEY, (Total.Text), "TotalFinal", ""
'    If CantChq.Text = "" Then  se comenta porque para belcorp no se va a utilizar forma de pago cheque
'        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, "0", "Cantidad de cheques", ""
'    Else
'        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, (CantChq.Text), "Cantidad de cheques", ""
''    End If
'
'     PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (CboTipCta.Text), "Cantidad de cheques", ""
'     PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
     
    If VLDeb_com <> 0# Then
    PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (VLTipCta_com), "Cantidad de cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    Else
    PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (CboTipCta.Text), "Cantidad de cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
     
   End If
   
  
    PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Ventanilla", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre_cliente", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_cod_respuesta", 0, SQLVARCHAR, VLDpCcodResp, "CodResputa", ""
    PMPasoValoresATX VGSqlConn, "@i_FechaLimite", 0, SQLVARCHAR, Me.txtFechVen.Text, "Fecha_limite", ""  'para mostrar en revrso
    PMPasoValoresATX VGSqlConn, "@i_Valmin", 0, SQLMONEY, Me.Minimo.Text, "Val_minimo", ""  'para mostrar en revrso

   'proveedor belcorp
     If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
        VGTipoEjecucion% = CGNormal%
        PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, VLic_phoralocal, "", ""
        PMPasoValoresATX VGSqlConn, "@i_psec_banco", 0, SQLINT4, VLSsn, "SecBanco", ""
        PMPasoValoresATX VGSqlConn, "@i_pcodigo_operacion", 0, SQLVARCHAR, Format(VLCodOperacion, "00000000"), "", ""
        PMPasoValoresATX VGSqlConn, "@i_pcodigo_secuencia", 0, SQLVARCHAR, Format(VLCodSecuencia, "000000"), "", ""
        VGTipoEjecucion% = CGReverso%
    Else
        PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "", ""
        PMPasoValoresATX VGSqlConn, "@i_psec_banco", 0, SQLINT4, 0, "SecBanco", ""
        PMPasoValoresATX VGSqlConn, "@i_pcodigo_operacion", 0, SQLVARCHAR, Format(VLCodOperacion, "00000000"), "", ""
        PMPasoValoresATX VGSqlConn, "@i_pcodigo_secuencia", 0, SQLVARCHAR, Format(VLCodSecuencia, "000000"), "", ""
    End If
    
    PMPasoValoresATX VGSqlConn, "@i_psource_channel", 0, SQLVARCHAR, Trim$("10"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_cuenta", 0, SQLVARCHAR, Trim$(Ref.Text), "", ""
    'PMPasoValoresATX VGSqlConn, "@i_pcodigo_banco", 0, SQLVARCHAR, Trim$("14100001"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_banco", 0, SQLVARCHAR, VLCodBanco, "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcodigo_inst", 0, SQLVARCHAR, Trim$("20004003"), "", ""
    VLValorTvCableOriginal = Trim$(str$(CCur(Pago_Val.Text) * 100)) 'Pago_Val.Text * 100
    PMPasoValoresATX VGSqlConn, "@i_pmonto", 0, SQLVARCHAR, Trim$(VLValorTvCableOriginal), "", ""  'Pago_Val.Text
    PMPasoValoresATX VGSqlConn, "@i_ptipo_moneda", 0, SQLVARCHAR, Trim$("840"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcod_pais", 0, SQLVARCHAR, Trim$("ECU"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_cod_consultora", 0, SQLVARCHAR, VLCodConsultora, "Cod_Consultora", "" 'msilvag RECA-CC-SGC00032726
    ' fin belcorp
    PMPasoValoresATX VGSqlConn, "@o_fecha_contable", 1, SQLVARCHAR, "XXXXXXXXXX", "Feccontable", ""
    PMPasoValoresATX VGSqlConn, "@o_cod_respuesta", 1, SQLVARCHAR, "xxxx", "Cod_respuesta", ""
    PMPasoValoresATX VGSqlConn, "@o_codigo_secuencia", 1, SQLVARCHAR, "xxxx", "cod_secuencia", ""
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
    PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario Pago", ""
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869

    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_belcorp", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
   'If FMTransmitirRPCATX(VGSqlConn, VLParametroServer, "cob_pagos", "sp_pago_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_pagos_Servicios = True
        Dim vtma(2, 50) As String
        VTResult% = FMMapeaMatrizATX(VGSqlConn, vtma())
        VLSsn = FMRetParamATX(VGSqlConn, 4) 'FMRetParamATX(VGSqlConn, 2)
        
     If VGTipoEjecucion% <> CGReverso% Then
         VLDpPHorario = FMRetParamATX(VGSqlConn, 5)              'Horario
      End If

      VLHorario = VLDpPHorario
     
        'SGSecTrn$ = FMRetParamATX(VGSqlConn, 5)
        SGSecTrn$ = VLSsn 'smerino
        VLCodOperacion = FMRetParamATX(VGSqlConn, 2)  'FLBuscarItem("@o_cod_respuesta")    'FMRetParamATX(VGSqlConn, 4)FLBuscarItem("@o_cod_respuesta")''FMRetParamATX(VGSqlConn, 4)
        VLCodSecuencia = FMRetParamATX(VGSqlConn, 3)    'FLBuscarItem("@o_codigo_secuencia")    ''FMRetParamATX(VGSqlConn, 5)
        VLFechaCorte = Format(FMRetParamATX(VGSqlConn, 1), "mm/dd/yyyy")
        VLic_phoralocal = FMRetParamATX(VGSqlConn, 4)  'FLBuscarItem("@o_phoralocal")
        
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
        End If
        If VLconexion <> "F" Then
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_pagos_Servicios = True
            VLCambio% = False
        End If
    Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_pagos_Servicios = False
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 4)
        VTIndicadorSum = FMRetParamATX(VGSqlConn, 11)
        PMChequeaATX VGSqlConn
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
       FLTransmitir_pagos_Servicios = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    
     'smerino
    If FLTransmitir_pagos_Servicios = True And val(VLDeb_com) <= 0 Then   'IVA Comision ND dpereirv
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
   
     If VGTipoEjecucion% <> CGReverso% Then
        If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            'PMGrabaDesglose VLTrn, Efe.Text, VLCambio%
            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
        VLTsnTemp = VGTSN
        'PMEgresoEfectivo Efe.ValueReal, VLTrn
        PMEgresoEfectivo SGUsar, VLTrn
    End If
    If SGAcumulado < 0 Then
        VLDescargar = 1
    End If
End Function

Function FLConsultaCNT_MIG() As Boolean
On Error GoTo Error
    
    Dim VLCodigoRespuesta As String
    Dim MatrizCPS(10, 10) As String
    Dim vl_parametro As String
    Dim VLarreglo(30) As String
    
    
    
    If cbo_tipo2.ListIndex = 1 Then
        If Trim(Proceso.Text) = "3" Then
            vl_parametro = "CAGCNT"
        Else
            vl_parametro = "CACNTM"
        End If
    Else
        vl_parametro = "CAGCNT"
    End If
    'CODIGO DE AGENCIA ASIGNADO POR CNT
'    Dim VLarreglo(30) As String
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, vl_parametro
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLCodAgencia = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLCodAgencia = ""
    End If
    PMChequea VGSqlConn&
    
    If cbo_tipo2.ListIndex = 1 Then
        If Trim(Proceso.Text) = "3" Then
            vl_parametro = "CADCNT"
        Else
            vl_parametro = "CADCNM"
        End If
    Else
        vl_parametro = "CADCNT"
    End If
    'CODIGO DE INSTITUCION ADQUIRENTE ASIGNADO POR CNT
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, vl_parametro
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLInstAdq = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLInstAdq = ""
    End If
    PMChequea VGSqlConn&
    
    If Trim(VLCodAgencia) = "" Then
        MsgBox "Empresa no tiene asignado un codigo de agencia", vbCritical + vbOKOnly, "Atx"
        FLConsultaCNT_MIG = False
        Ref.SetFocus
       Exit Function
    End If
    
    If Trim(VLInstAdq) = "" Then
        MsgBox "No existe Codigo de Instituciòn", vbCritical + vbOKOnly, "Atx"
        FLConsultaCNT_MIG = False
        Ref.SetFocus
       Exit Function
    End If
    
    If cbo_tipo2.ListIndex = 1 Then
        If Trim(Me.Ref.Text) = "" Then
            MsgBox "Debe ingresar Numero Celular, para la Consulta", vbCritical + vbOKOnly, "Atx"
            FLConsultaCNT_MIG = False
            Ref.SetFocus
           Exit Function
        End If
    Else
        If Trim(Me.txt_CodServ.Text) = "" Then
            MsgBox "Debe ingresar la cuenta financiera, para la Consulta", vbCritical + vbOKOnly, "Atx"
            FLConsultaCNT_MIG = False
            txt_CodServ.SetFocus
           Exit Function
        End If
    End If
      
    
    If VGTipoEjecucion% <> CGReverso% Then
        VLSsn = Trim$(str$(VGSqlConn))
    End If
    If Len(Trim$(VLSsn)) > 12 Then
        VLSsn = Right$(Trim$(VLSsn), 12)
    Else
        VLSsn = String(12 - Len(Trim$(VLSsn)), "0") + Trim$(VLSsn)
    End If
    
    
    'Llamar a la consulta CNT
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62041, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    If cbo_tipo2.ListIndex = 1 Then
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, (Proceso.Text), "", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, "3", "", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_moneda", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_tipo_transaccion", 0, SQLVARCHAR, "000003", "TipoTrn", "" 'Tipo de Transaccion
    PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, "1", "Indica Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_Fechahora_local", 0, SQLVARCHAR, Format$(Date, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", ""
    If cbo_tipo2.ListIndex = 1 Then
        PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, serpac.Text + Ref.Text, "ClaveServ", ""  'Identificador de Servicio
    Else
        PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, Trim(txt_CodServ.Text), "ClaveServ", ""  'Identificador de Servicio
    End If
    If cbo_tipo2.ListIndex = 1 Then
        PMPasoValoresATX VGSqlConn, "@i_criterio", 0, SQLVARCHAR, "001", "CritCons", "" 'Criterio de consulta: 001-Numero telefonico
    Else
        PMPasoValoresATX VGSqlConn, "@i_criterio", 0, SQLVARCHAR, "002", "CritCons", "" 'Criterio de consulta: 001-Numero telefonico
    End If
    If cbo_tipo2.ListIndex = 1 Then
        If Trim(Me.Proceso.Text) = "3" Then
            PMPasoValoresATX VGSqlConn, "@i_tipo_serv", 0, SQLVARCHAR, "001", "TipoServ", "" 'Tipo de servicio: 002-Movil
        Else
            PMPasoValoresATX VGSqlConn, "@i_tipo_serv", 0, SQLVARCHAR, "002", "TipoServ", "" 'Tipo de servicio: 002-Movil
        End If
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipo_serv", 0, SQLVARCHAR, "000", "TipoServ", "" 'Tipo de servicio:
    End If
    PMPasoValoresATX VGSqlConn, "@i_inst_adq", 0, SQLVARCHAR, Format(VLInstAdq, "000000"), "CodAdq", ""  'Institucion de adquirente
    PMPasoValoresATX VGSqlConn, "@i_cod_agencia", 0, SQLVARCHAR, VLCodAgencia, "CodAgen", ""  'Codigo de agencia

    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_cnt", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
      FLConsultaCNT_MIG = True
      VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
      Nombre.Text = FLBuscarItem("@o_nombre")
      valor.Text = FLBuscarItem("@o_valor")
      If valor.Text = 0 Then
        Nombre.Text = FLBuscarItem3("@o_nombre")
        valor.Text = FLBuscarItem3("@o_valor")
        VLFechaEmiCNT = FLBuscarItem3("@o_fecha_emision")
        If Trim(VLFechaEmiCNT) <> "" Then
            VLFechaEmiCNT = Mid(VLFechaEmiCNT, 1, 10)
            VLFechaEmiCNT = Format(VLFechaEmiCNT, "MM/DD/YYYY")
        End If
        VLFechaVenc = FLBuscarItem3("@o_fecha_ven")
        If Trim(VLFechaVenc) <> "" Then
            VLFechaVenc = Mid(VLFechaVenc, 5, 2) & "/" & Mid(VLFechaVenc, 7, 2) & "/" & Mid(VLFechaVenc, 1, 4)
        End If
        Fecha.Text = VLFechaVenc
        VLFacturaCNT = FLBuscarItem3("@o_num_fac")
        Me.txtfactura.Text = Vl_num_fac
        VlCiclo = FLBuscarItem3("@o_ciclo")
        VLcategoria = FLBuscarItem3("@o_categoria")
        vl_fecha_validez = FLBuscarItem3("@o_fecha_validez")
        Vl_detalle = FLBuscarItem3("@o_detalle")
      Else
        VLFechaEmiCNT = FLBuscarItem("@o_fecha_emision")
        If Trim(VLFechaEmiCNT) <> "" Then
            VLFechaEmiCNT = Mid(VLFechaEmiCNT, 1, 10)
            VLFechaEmiCNT = Format(VLFechaEmiCNT, "MM/DD/YYYY")
        End If
        VLFechaVenc = FLBuscarItem("@o_fecha_ven")
        If Trim(VLFechaVenc) <> "" Then
            VLFechaVenc = Mid(VLFechaVenc, 5, 2) & "/" & Mid(VLFechaVenc, 7, 2) & "/" & Mid(VLFechaVenc, 1, 4)
        End If
        Fecha.Text = VLFechaVenc
        VLFacturaCNT = FLBuscarItem("@o_num_fac")
        Me.txtfactura.Text = Vl_num_fac
        VlCiclo = FLBuscarItem("@o_ciclo")
        VLcategoria = FLBuscarItem("@o_categoria")
        vl_fecha_validez = FLBuscarItem("@o_fecha_validez")
        Vl_detalle = FLBuscarItem("@o_detalle")
    End If
    
        
        VLArrDeudas = Split(Vl_detalle, "|")
        Dim VLConteo As Integer
        Dim VLTotal As Integer
        VLConteo = 0
        Vl_Mes_Impago = ""
        VLTotal = UBound(VLArrDeudas)
        Do While VLTotal > 0
            If Mid(Trim$(VLArrDeudas(VLConteo)), 1, 4) = "8700" Then
                Vl_Mes_Impago = str(Int(Mid(Trim$(VLArrDeudas(VLConteo)), 6, 15)))
                VLTotal = 0
            Else
                VLConteo = VLConteo + 1
                VLTotal = VLTotal - 1
            End If
        Loop
    Else
        FLConsultaCNT_MIG = False
'        PMFinTransaccion
'        PMChequeaATX VGSqlConn
        Exit Function
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    
    'CONSULTA DE COMISION
    If Trim(Proceso.Text) = "5482" Then
        Consulta_ComisionCNT_Varios
    Else
        Consulta_ComisionCNT_Fijo
    End If
    Comision.Text = VLComision
    
        Total.Text = CCur(valor.Text) + CCur(Comision.Text)
        efe.Enabled = True      '
        Loc.Enabled = True
        CantChq.Enabled = True
        CboTipCta.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False   '
        Proceso.Enabled = False
        serpac.Enabled = False
        Ref.Enabled = False
        If FMCCurATX((Minimo.Text)) > 0 Then
            Minimo.Visible = True
            lblValor(2).Visible = True
        End If
        If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
        Else
           Total.Text = FMCCurATX(valor.Text) + FMCCurATX(Comision.Text)
        End If
        cmbTid.Enabled = True
        txtCedula.Enabled = True
        efe.SetFocus


    Exit Function
Error:
    PMChequeaATX VGSqlConn&
    PMFinTransaccion
        
End Function

Function FLPagoCNT_MIG() As Boolean

On Error GoTo Error

    VLServicio = "Recaudacion"
       
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    VLIndReverso = False
    If VGTipoEjecucion% = CGReverso% Then
        VLIndReverso = True
    End If
    'VALIDACIONES
    Dim Fecha As String
    Fecha = Format$(Date, "yyyymmdd")
    
    Dim fr_ced_ruc As String
    fr_ced_ruc = Replace(SGCedula, "_", "")
    Consulta_parametro_OSB
    PMChequeaATX VGSqlConn
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "62042", "Trn", ""  'VLTrn
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    Else
        VGTipoEjecucion% = CGNormal%
        PMPasoValoresATX VGSqlConn, "@i_reverso", 0, SQLVARCHAR, "02", "reversa", ""
        PMPasoValoresATX VGSqlConn, "@i_tipo_transaccion", 0, SQLVARCHAR, "000002", "TipoTrn", "" 'Tipo de Transaccion
        PMPasoValoresATX VGSqlConn, "@i_id_pago", 0, SQLVARCHAR, vl_idpago, "id_pago", ""
        VGTipoEjecucion% = CGReverso%
    End If
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    
    
    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Mon", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Servicio.Text, "Servicio", ""
    If cbo_tipo2.ListIndex = 1 Then
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, (Proceso.Text), "", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, "3", "", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_emp", 0, SQLVARCHAR, (Empresa.Text), "", "" ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_area", 0, SQLVARCHAR, (serpac.Text), "area", "" ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_pago_val", 0, SQLMONEY, (Pago_Val), "pago_val", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Total), "total", ""        'Para recupar en Reverso
    PMPasoValoresATX VGSqlConn, "@i_valor_serv", 0, SQLMONEY, (valor), "valor_serv", ""        'Para recupar en Reverso
    If Trim(Proceso.Text) = "5482" Then
        PMPasoValoresATX VGSqlConn, "@i_categoria", 0, SQLINT4, 1, "categoria", ""       'Para recupar en Reverso
        PMPasoValoresATX VGSqlConn, "@i_mes_impago", 0, SQLVARCHAR, "", "MesImpago", ""        'Para recupar en Reverso
    Else
        PMPasoValoresATX VGSqlConn, "@i_categoria", 0, SQLINT4, CInt(VLcategoria), "categoria", ""        'Para recupar en Reverso
        PMPasoValoresATX VGSqlConn, "@i_mes_impago", 0, SQLVARCHAR, Vl_Mes_Impago, "MesImpago", ""        'Para recupar en Reverso
    End If
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Valch", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    
    'msilvag Inicio RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    If Me.Cta.ClipText <> "" Then
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLCHAR, Cta.ClipText, "Cuenta", ""
        PMPasoValoresATX VGSqlConn, "@i_producto", 0, SQLVARCHAR, CboTipCta.Text, "Producto", ""
        If Me.Debito.Text > 0 Then
            PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", "" ' Para recuperar en reverso
        End If
    Else
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLCHAR, (VLCta_com), "Cuenta", ""
        PMPasoValoresATX VGSqlConn, "@i_producto", 0, SQLVARCHAR, (VLTipCta_com), "Producto", ""
    End If
    'msilvag Fin
    
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "Cant_chq", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, (Nombre), "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "T", "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_valor", 0, SQLMONEY, efe.Text, "Valor", ""
    PMPasoValoresATX VGSqlConn, "@i_valor_total", 0, SQLMONEY, Pago_Val.Text, "ValorTotal", ""

    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (VLEfe_com), "Comision_efe", ""

    PMPasoValoresATX VGSqlConn, "@i_num_factura", 0, SQLVARCHAR, txtfactura.Text, "Num_factura", ""
    PMPasoValoresATX VGSqlConn, "@i_che_com", 0, SQLMONEY, (VLChq_com), "comisiom_che", ""
    PMPasoValoresATX VGSqlConn, "@i_costo", 0, SQLMONEY, (VLDeb_com), "comisiom_deb", "" 'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    
    If cbo_tipo2.ListIndex = 1 Then
        PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, serpac.Text + Ref.Text, "ClaveServ", ""  'Identificador de Servicio
    Else
        PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, Trim(txt_CodServ.Text), "ClaveServ", ""  'Identificador de Servicio
    End If
    PMPasoValoresATX VGSqlConn, "@i_Fechahora_local", 0, SQLVARCHAR, Format$(Date, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
    If cbo_tipo2.ListIndex = 1 Then
        If Trim(Me.Proceso.Text) = "3" Then
            PMPasoValoresATX VGSqlConn, "@i_tipo_serv", 0, SQLVARCHAR, "001", "TipoServ", "" 'Tipo de servicio: 002-Movil
        Else
            PMPasoValoresATX VGSqlConn, "@i_tipo_serv", 0, SQLVARCHAR, "002", "TipoServ", "" 'Tipo de servicio: 002-Movil
        End If
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipo_serv", 0, SQLVARCHAR, "000", "TipoServ", "" 'Tipo de servicio:
    End If
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    PMPasoValoresATX VGSqlConn, "@i_inst_adq", 0, SQLVARCHAR, Format(VLInstAdq, "000000"), "CodAdq", ""  'Institucion de adquirente
    PMPasoValoresATX VGSqlConn, "@i_cod_agencia", 0, SQLVARCHAR, VLCodAgencia, "CodAgen", ""  'Codigo de agencia
    PMPasoValoresATX VGSqlConn, "@o_pid_pago", 1, SQLVARCHAR, "xxxxx", "", ""
   'If FMTransmitirRPCATX(VGSqlConn, VLParametroServer, "cob_procesador", "fp_pago_tvCable", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_cnt", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLPagoCNT_MIG = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())                                        'lfcm 24-agosto-2009
        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
'        VLCambio% = False
        '------> Sumadora
'        VLSSnCorreccion = FMRetParamATX(VGSqlConn, 2)
        SGSecTrn$ = FLBuscarItem("@o_ssn")
        If Trim(SGSecTrn$) = "" Then
            SGSecTrn$ = FLBuscarItem3("@o_ssn")
            VLFechaCorte = FLBuscarItem3("@o_fecha_emision")
            VLHorario = FLBuscarItem3("@o_horario")
            VLTrn = FLBuscarItem3("@o_trn")
        Else
            VLFechaCorte = FLBuscarItem("@o_fecha_emision")
            VLHorario = FLBuscarItem("@o_horario")
            VLTrn = FLBuscarItem("@o_trn")
        End If
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        FLPagoCNT_MIG = True
        VLCambio% = False
        VLCambioCedruc% = False
        VTIndicadorSum = 1
        SGUsar = efe.ValueReal + VLEfe_com
        PMIniciaRegSum

    Else
        VLCambio% = True
        VLCambioCedruc% = True
        FLPagoCNT_MIG = False
        'TPE ------> Sumadora
        SGSecTrn$ = FLBuscarItem("@o_ssn")
        If Trim(SGSecTrn$) = "" Then
            SGSecTrn$ = FLBuscarItem3("@o_ssn")
        End If
        VTIndicadorSum = 0
        '<------
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        VTIndicadorSum = 0
        FLPagoCNT_MIG = False
    End If
    
    PMFinTransaccion
    
    If FLPagoCNT_MIG = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    
'    PLTipoTransaccion
'    If Trim(Proceso.Text) <> "5482" Then
'        If Not VLHorarioDif Then
'            VLTrn = "3194"
'        Else
'            VLTrn = "3203"
'        End If
'    Else
'        If Not VLHorarioDif Then
'            VLTrn = "3925"
'        Else
'            VLTrn = "3927"
'        End If
'    End If

    
    
    'Sumadora -->
    If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
        If (VTIndicadorSum = 1 _
        And (Trim$(VGStatusCon) = "A" _
        Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
                FLPagoCNT_MIG = False
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then                'Por REVERSO
        PMEgresoEfectivo SGUsar, VLTrn, VGSSNCorr&
    End If
    
    Exit Function
    
Error:
    MsgBox "Error al transmitir la transaccion " & Chr(13) & "Error:" & Err.Description, vbCritical
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    FLPagoCNT_MIG = False
    
End Function

Sub ImprimeComprobanteCNT_MIG()
    If VGModeloImp$ = "5021" Or VGModeloImp$ = "590" Then
        VGpartop$ = "20"
        VGparleft$ = "2"
        VGparlong$ = "120"
        VGparrig$ = "00"
    End If
    
    'DIRECCION DE CNT
    Dim VLarreglo(30) As String
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "DIRCNT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLEmpDir = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLEmpDir = ""
    End If
    PMChequea VGSqlConn&
    
    'RUC
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "REPCNT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLRucCNEL = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLRucCNEL = ""
    End If
    PMChequea VGSqlConn&
    
    
    If Trim(Proceso.Text) = "3" Then
     'CATEGORIA DEL SERVICIO CNT
        PMChequea VGSqlConn&
        PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_categorias_servicios_cnt"
        PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
        PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, CInt(VLcategoria)
        If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "") Then
            PMMapeaVariableATX VGSqlConn&, VTDetalles$
            PMChequea VGSqlConn&
            VL_Nombre_Catg = VTDetalles$
            PMChequea VGSqlConn&
        Else
            VLCanalEcut = ""
            PMChequea VGSqlConn&
        End If
    
    End If
    
    PMSetDetalle "v" + CStr(VGTSN%) + " " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + CStr(VGOficina%) + " " + CStr(FMObtenerMonedaForma("141")) + " " + VGLogin$
    PMSetDetalle "v" + "BCO. BOLIVARIANO SEC.:" + Trim(Format(VGFechaProceso, "yyyymmdd") & SGSecTrn)
    PMSetDetalle "v" + VGMensImpr + FmObtenermodo() + " " + VLTrn + " TELEFONO " + IIf(VLHorario = "D", "H:D", "H:N")
    PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte 'hy-31-ene-2005 Formatear fecha
    PMSetDetalle "v" + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Me.Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
    PMSetDetalle "v" + "Direccion: " + VLEmpDir
    PMSetDetalle "v" + "RUC: " + VLRucCNEL
    PMSetDetalle "v" + "                     "
    PMSetDetalle "v" + "COMPROBANTE DE PAGO"

   If Trim(VLFacturaCNT) <> "" Then
    PMSetDetalle "v" + "Referente a la factura No.: " + VLFacturaCNT
   End If
   If Trim(VLFechaEmiCNT) <> "" Then
    VLFechaEmiCNT = Format(VGFechaProceso, "dd-mm-yyyy")
    PMSetDetalle "v" + "Fecha de emision: " + VLFechaEmiCNT
   End If
   If Trim(Proceso.Text) = "3" Then
    PMSetDetalle "v" + "Telefono: " + Trim(Ref) + " " + "Area: " + Trim(Me.serpac.Text)
   Else
    PMSetDetalle "v" + "Celular: " + Trim(Ref)
   End If
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   If Trim(VL_Nombre_Catg) <> "" Then
    VLcategoria = CInt(VLcategoria)
    PMSetDetalle "v" + "Categoria: " + CStr(VLcategoria) + "-" + VL_Nombre_Catg
   End If
   If Trim(Vl_Mes_Impago) <> "" Then
    PMSetDetalle "v" + "Mes Impago: " + CStr(Vl_Mes_Impago)
   End If
   If Trim(Proceso.Text) = "3" Then
    PMSetDetalle "v" + "Tipo de Servicio: " + "3 TELEFONIA FIJA"
   Else
    PMSetDetalle "v" + "Tipo de Servicio: " + "5482 MOVIL POSTPAGO"
   End If
   
   VLNeto = FMCCurATX(valor.Text)
   PMSetDetalle "v" + "TOTAL SERVICIOS TELECOMUNICACIONES: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha)
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "  CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   PMSetDetalle "v" + "TOTAL" + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Pago_Val, VGFormatoMoney), 12, CGJustificacionDerecha)
   If Trim(vl_fecha_validez) <> "" And Trim(VLFechaVenc) <> "" Then
    PMSetDetalle "v" + "MES FACTURACION: " + vl_fecha_validez + " " + "FEC. VENC: " + VLFechaVenc
   End If
   If VGTipoEjecucion% = CGReverso% Then
      VLNeto = valor.Text
   Else
      VLNeto = valor.Text - Me.Pago_Val.Text
   End If
   PMSetDetalle "v" + "SALDO A LA FECHA: " + FMEspaciosATX("USD. " + Format(FMCCurATX(VLNeto), VGFormatoMoney), 12, CGJustificacionDerecha)
   PMSetDetalle "v" + "ESTE DOCUMENTO NO CONSTITUYE UNA FACTURA"
'***ref14 vmirandt telefono inicio
   If VLclave_acceso <> "" Then
      PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
      PMSetDetalle "v" + VLclave_acceso
   End If
 '***ref14 vmirandt telefono fin
   FMPRN_StdImpresion "IMPRESORA_1", False, "", "143", SGDatosDetalle, "Inserte comprobante grande", CStr(VGpartop$), 1, CStr(VGparleft$), , , , , False, , , VLVerde
   PMFinImpresion "IMPRESORA_1"
End Sub


Sub Consulta_ComisionCNT_Varios()
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Proceso.Text, "Codigo de empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, "1", "Indica Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, "CSBA", "Servicio Person", ""
    PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, "CNMP", "Rubro Person", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Rubro Person", ""
    'IVA
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'IVA
    'Variables de salida
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        VLComision = FMRetParamATX(VGSqlConn, 1)
        VlbaseImp = FMRetParamATX(VGSqlConn, 3) 'IVA
        VLiva = FMRetParamATX(VGSqlConn, 4) 'IVA
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        
        'LBP Inicio RECA-CC-SGC00025869
        If VLComision > 0 Then
            VGCom_aux = FMDevuelveComisionReal(CDbl(VLComision), False, 51)
            If VGCom_aux <> CDbl(VLComision) And VGCom_aux > 0 Then
                VGComision_original = VLComision
                VLComision = VGCom_aux
            Else
                VGComision_original = VLComision
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        
        If VLComision = 0 Then
          Comision.Enabled = False
        Else
          Comision.Enabled = True
        End If

    Else
        Comision = 0#
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
    End If
    
End Sub
Sub Consulta_ComisionCNT_Fijo()
    PMInicioTransaccion
    VLComision = 0
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "3792", "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLCHAR, "C", "", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT2, Trim(Me.Servicio.Text), "servicio", ""
    PMPasoValoresATX VGSqlConn, "@o_comisionven", 1, SQLMONEY, "0", "comision", ""
    PMPasoValoresATX VGSqlConn, "@o_autorisri", 1, SQLVARCHAR, Space(30), "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@o_fecvensri", 1, SQLVARCHAR, Space(30), "Fecha Ven", ""
    PMPasoValoresATX VGSqlConn, "@o_costo", 1, SQLMONEY, "0", "costo", ""
    'smerino
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'smerino
    
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_pago_pacifictel", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        VLComision = FMRetParamATX(VGSqlConn, 1)
        VLautoriSri = Trim(FMRetParamATX(VGSqlConn, 2))
        VLFecvenSRI = Trim(FMRetParamATX(VGSqlConn, 3))
        VlbaseImp = FMRetParamATX(VGSqlConn, 5) 'smerino
        VLiva = FMRetParamATX(VGSqlConn, 6) 'smerino
    End If
    
    If VLComision = 0 Then
      Comision.Enabled = False
    Else
      Comision.Enabled = True
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLComision > 0 Then
        VGCom_aux = FMDevuelveComisionReal(CDbl(VLComision), False, 51)
        If VGCom_aux <> CDbl(VLComision) And VGCom_aux > 0 Then
            VGComision_original = VLComision
            VLComision = VGCom_aux
        Else
            VGComision_original = VLComision
        End If
    End If
    'LBP Fin RECA-CC-SGC00025869
    
End Sub
Function FLBuscarItem3(VLELemento As String) As String
    Dim i As Integer
    Dim hallado As Boolean
    i = 1
    hallado = False
    Do While i < 33 And Not hallado
        If vtmatrizcps(1, i) = Trim$(VLELemento) Then
            hallado = True
        Else
            i = i + 1
        End If
    Loop
    If hallado Then
        FLBuscarItem3 = vtmatrizcps(0, i)
    Else
        FLBuscarItem3 = ""
    End If
End Function
Sub ImprimeComprobanteCNTMOVIL_MG()
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

'   If VGHorarioDif = True Then
'        VLTrn = "3927"
'   Else
'        VLTrn = "3925"
'   End If
   
       'DIRECCION DE CNT
    Dim VLarreglo(30) As String
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "DIRCNT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLEmpDir = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLEmpDir = ""
    End If
    PMChequea VGSqlConn&
    
    'RUC
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "REPCNT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLRucCNEL = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLRucCNEL = ""
    End If
    PMChequea VGSqlConn&

    PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte 'hy-31-ene-2005 Formatear fecha
    PMSetDetalle "v" + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Me.Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda) + " " + "RUC: " + Trim(VLRucCNEL)
    PMSetDetalle "v" + "Direccion: " + VLEmpDir
'    PMSetDetalle "v" + "RUC: " + VLRucCNEL
'    PMSetDetalle "v" + "COMPROBANTE DE PAGO"
    PMSetDetalle "v" + "Celular: " + Trim(Ref) + " Tipo de Servicio: " + "5482 MOVIL POSTPAGO"
    PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
    'PMSetDetalle "v" + "Tipo de Servicio: " + "5482 MOVIL POSTPAGO"
   VLNeto = FMCCurATX(valor.Text)
   PMSetDetalle "v" + "TOTAL SERVICIOS TELECOMUNICACIONES: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha)
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "  CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
If VGTipoEjecucion% = CGReverso% Then
      VLNeto = valor.Text
   Else
      VLNeto = valor.Text - Me.Pago_Val.Text
   End If
   PMSetDetalle "v" + "TOTAL" + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Pago_Val, VGFormatoMoney), 12, CGJustificacionDerecha) _
    + " SALDO A LA FECHA: " + FMEspaciosATX("USD. " + Format(FMCCurATX(VLNeto), VGFormatoMoney), 12, CGJustificacionDerecha)
   If Trim(vl_fecha_validez) <> "" And Trim(VLFechaVenc) <> "" Then
    PMSetDetalle "v" + "MES FACTURACION: " + vl_fecha_validez + " " + "FEC. VENC: " + VLFechaVenc
   End If
   
'   PMSetDetalle "v" + "SALDO A LA FECHA: " + FMEspaciosATX("USD. " + Format(FMCCurATX(VLNeto), VGFormatoMoney), 12, CGJustificacionDerecha)
'   PMSetDetalle "v" + "ESTE DOCUMENTO NO CONSTITUYE UNA FACTURA"
   VLTsnTemp% = VGTSN%
'***ref14 vmirandt telefono inicio
    If VLclave_acceso <> "" Then
       PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
       PMSetDetalle "v" + VLclave_acceso '***ref14 vmirandt agua
    End If
       VGparleft$ = "8"
       VGpartop$ = "00"
'***ref14 vmirandt telefono fin
   
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 5, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51"))), , VLVerde 'hy-categ agregar la moneda
End Sub

Function FLTransmitir_DirectvPostpago_consulta() As Boolean
Dim VLarregloParametros(30) As String
    FLTransmitir_DirectvPostpago_consulta = False
    VLTsnTemp = 0
    'Validar envio de un Código Válido en la Consulta
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
'    'Validar que el numero sea de 10 Digitos
'    If Len(Trim(Ref.Text)) <> 10 Then 'dapv
'        MsgBox "El Número de celular debe tener 10 Dígitos"
'        Exit Function
'    End If
    Consulta_parametro_OSB
    PMInicioTransaccion
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "MAXDTP"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
        VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametros())
        VLMontoMax = CCur(LTrim(RTrim(Trim(VLarregloParametros(4)))))
    Else
        VLMontoMax = 500
    End If
    PMChequea VGSqlConn&
    PMFinTransaccion
    
    'llamar a la consulta
    PLTipoTransaccion
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62648, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref.Text), "", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
    If Me.CboTipo.ListIndex = 0 Then
        PMPasoValoresATX VGSqlConn, "@i_tipoBusqueda", 0, SQLVARCHAR, "1", "Tipo busqueda", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipoBusqueda", 0, SQLVARCHAR, "0", "Tipo busqueda", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, (Empresa.Text), "EMPRESA", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("143")), "Moneda", ""
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_DirectvPostpago", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then 'msilvag Bus Fase 2 Abril/2015
      FLTransmitir_DirectvPostpago_consulta = True
      If Me.CboTipo.ListIndex = 1 Then
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        VLContratoPAC = FLBuscarItem("@o_suscriptor")
        Nombre.Text = FLBuscarItem("@o_nombre")
        Total_Pagar.Text = FLBuscarItem("@o_monto")
        txt_fecha_emision.Text = FLBuscarItem("@o_direccion")
        txtregional = Trim(Ref)
        PMChequeaATX VGSqlConn
        
        'Valor viene en cero
        If Total_Pagar.Text <= 0 Then
            MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
            FLTransmitir_DirectvPostpago_consulta = False
            PMFinTransaccion
            PMChequeaATX VGSqlConn
            Nombre.Text = ""
            txt_fecha_emision.Text = ""
            Ref.SetFocus
            Exit Function
        End If
        
        
        VLCambio% = False
        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
'        efe.SetFocus
    Else
        PMMapeaGridATX VGSqlConn, grddato, False
        PMChequeaATX VGSqlConn
          VLCambio% = False
'        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
'        efe.SetFocus
    End If
   Else
      FLTransmitir_DirectvPostpago_consulta = False
      PMChequeaATX VGSqlConn
      PMFinTransaccion
      Exit Function
   End If
   PMChequeaATX VGSqlConn
   PMFinTransaccion
   Call ConsultaComisionServicios("CSPR", "DTVP", Empresa)
   If Me.CboTipo.ListIndex = 0 And FLTransmitir_DirectvPostpago_consulta = True Then
        SGEmpresa = Empresa.Text
        SGActivaSum = True
        VL_Row = 0
        For i = 1 To grddato.Rows - 1
            grddato.Row = i
            grddato.Col = 2
            If grddato.Text > 0 Then
                 VL_Row = VL_Row + 1
            End If
        Next
            vl_fila = 0
        If VL_Row > 0 Then
            FCC51_grid.txtCedula = Ref.Text
            grddato.Row = 1
            grddato.Col = 4
            FCC51_grid.txtContribuyente = grddato.Text
            FCC51_grid.grdDetalle.Rows = VL_Row + 1 'Me.grddato.Rows
            FCC51_grid.grdDetalle.Cols = grddato.Cols
            If grddato.Rows <> 0 Then
                For i = 1 To grddato.Rows - 1
                    grddato.Row = i
                    grddato.Col = 2
                    If grddato.Text > 0 Then 'descarta los registros que vengan 0
                        vl_fila = vl_fila + 1
                        grddato.Row = i
                        grddato.Col = 0
                        FCC51_grid.grdDetalle.Row = vl_fila
                        FCC51_grid.grdDetalle.Col = 0
                        FCC51_grid.grdDetalle.Text = Trim$(str$(vl_fila))
                        For j = 1 To grddato.Cols - 1
                            grddato.Col = j
                            FCC51_grid.grdDetalle.Row = vl_fila
                            FCC51_grid.grdDetalle.Col = j
                            FCC51_grid.grdDetalle.Text = grddato.Text
                        Next
                    End If
                 Next
                FCC51_grid.grdDetalle.Row = 1
                FCC51_grid.grdDetalle.Col = 1
                FCC51_grid.Show vbModal
             End If
        Else
            MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
            FLTransmitir_DirectvPostpago_consulta = False
            VLCambio% = True
            efe.Enabled = False
            Loc.Enabled = False
            CantChq.Enabled = False
            Pago_Val.Enabled = False
            CboTipCta.Enabled = False
            Cta.Enabled = False
            Empresa.Enabled = False
            Servicio.Enabled = False
            Proceso.Enabled = True
            Ref.Enabled = True
            Ref.SetFocus
            Exit Function
        End If
    End If
    efe.Enabled = True
    efe.SetFocus
End Function

Private Sub ConsultaComisionServicios(servicio1 As String, rubro As String, Empresa1 As String)
DoEvents
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Empresa1, "Codigo de empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, "1", "Indica Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, servicio1, "Servicio Person", ""
    PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, rubro, "Rubro Person", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal Person", ""
    PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
    PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
    PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
    'Variables de salida
    PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
    If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        VLComision = FMRetParamATX(VGSqlConn, 1)
        VlbaseImp = FMRetParamATX(VGSqlConn, 3) 'IVA
        VLiva = FMRetParamATX(VGSqlConn, 4) 'IVA
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
        
        'LBP Inicio RECA-CC-SGC00025869
        If VLComision > 0 Then
            VGCom_aux = FMDevuelveComisionReal(CDbl(VLComision), False, 51)
            If VGCom_aux <> CDbl(VLComision) And VGCom_aux > 0 Then
                VGComision_original = VLComision
                VLComision = VGCom_aux
            Else
                VGComision_original = VLComision
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        
        If VLComision = 0 Then
          Comision.Enabled = False
        Else
          Comision.Enabled = True
          Comision = VLComision
        End If
    Else
        Comision = 0#
        PMChequeaATX VGSqlConn&
        PMFinTransaccion
    End If

DoEvents
End Sub

Function FLTransmitir_DirectvPostpago_pago() As Boolean
   Dim VTIndicadorSum As Integer
   Dim i As Integer
   Dim VLValor As String
   
    If CCur(Pago_Val.Text) > CCur(VLMontoMax) And VGTipoEjecucion% <> CGReverso% Then
        MsgBox "El total es mayor al Monto Maximo permitido"
        FLTransmitir_DirectvPostpago_pago = False
        Exit Function
    End If
   FLTransmitir_DirectvPostpago_pago = False
   Consulta_parametro_OSB
   VTIndicadorSum = 0
   VLTsnTemp = 0
   PMInicioTransaccion
   PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62649, "Trn", ""
   If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
   End If
   'parametros para aplicar en el truco del reverso
   PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", ""
   PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
   PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""
'   PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""
'   PMPasoValoresATX VGSqlConn, "@i_comprob", 0, SQLVARCHAR, (Trim(Comprob)), "CompRet", ""
   PMPasoValoresATX VGSqlConn, "@i_saldo", 0, SQLMONEY, Total_Pagar.Text, "saldo", ""
   PMPasoValoresATX VGSqlConn, "@i_identificacion", 0, SQLVARCHAR, Ref.Text, "identificacion", ""
   PMPasoValoresATX VGSqlConn, "@i_tipo_cons", 0, SQLINT4, (CboTipo.ListIndex), "Tipo", ""
   PMPasoValoresATX VGSqlConn, "@i_total_val", 0, SQLMONEY, Me.Total.Text, "totalVal", ""
   If VGTipoEjecucion% = CGReverso% Then
        VGTipoEjecucion% = CGNormal%
        PMPasoValoresATX VGSqlConn, "@i_pid_pago", 0, SQLINT4, VLSsn, "VLSsn", ""
        VGTipoEjecucion% = CGReverso%
   End If
   PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
   PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
   PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
   PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_chq", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
   PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
   PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLMONEY, efe.Text, "Efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_efe", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_db", 0, SQLMONEY, (VLDeb_com), "Com. Debito", "" 'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
   PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
   PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
   PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
   PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Me.Pago_Val.Text), "Total pagado", ""
   PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Me.Pago_Val.Text), "Val", ""
   'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
   If Me.Cta.ClipText <> "" Then
                PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
                PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
   Else
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (VLTipCta_com), "CboTipCta", ""
   End If
   'msilvag Fin
   PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (valor.Text), "Subtotal", ""
   PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(txtregional.Text), "Codigo", ""
   PMPasoValoresATX VGSqlConn, "@i_nombre_suscrip", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""
   PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, Format$(Date, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
   PMPasoValoresATX VGSqlConn, "@o_pid_pago", 1, SQLVARCHAR, "xxxxx", "", ""
   
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
   
   If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_DirectvPostpago", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
      FLTransmitir_DirectvPostpago_pago = True
      VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
      SGSecTrn$ = FLBuscarItem("@o_ssn")
      'Limpio el Buffer para poder obtener los parametros de salida.
      PMChequeaATX VGSqlConn
        If Trim(SGSecTrn$) = "" Then
            SGSecTrn$ = FLBuscarItem3("@o_ssn")
            VLFechaCorte = FLBuscarItem3("o_fecha_efectivo")
            VLHorario = FLBuscarItem3("@o_horario")
            VLDpsececutel = FLBuscarItem3("@o_pid_pago")
        Else
            VLFechaCorte = FLBuscarItem("@o_fecha_efectivo")
            VLFechaCorte = Format(VLFechaCorte, "mm/dd/yyyy")
            VLHorario = FLBuscarItem("@o_horario")
            VLDpsececutel = FLBuscarItem("@o_pid_pago")
        End If
      VLCambio% = False
      VTIndicadorSum = 1
      PMIniciaRegSum
   Else
      VLCambio% = True
      VLFechaCorte = ""
      FLTransmitir_DirectvPostpago_pago = False
      SGSecTrn$ = VLDpPSecuencialTrx
      VTIndicadorSum = 0
      PMChequeaATX VGSqlConn
   End If
   If VGHorarioDif Then
        VLTrn = "3926"
   Else
        VLTrn = "3925"
   End If
   PMChequeaATX VGSqlConn
   PMFinTransaccion
    If FLTransmitir_DirectvPostpago_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura  'LLAMA A PROCEDIMIENTO DE FACTURA
    End If
   If VGTipoEjecucion% <> CGReverso% Then
      If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
         SGPrimeraVez = 0     ' ya no es primera vez
         PMGrabaDesglose VLTrn, SGUsar, VLCambio%
         If VLCambio% = True Then
            MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
         End If
         SGActual = 1  'seteo Variable para borrar desglose
      ElseIf VTIndicadorSum = 0 Then
         SGActual = 0  'no borrar desglose en caso de Error en Transaccion
      End If
   ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
      VLTsnTemp = VGTSN
      PMEgresoEfectivo SGUsar, VLTrn
   End If
   If SGAcumulado < 0 Then
      VLDescargar = 1
   End If
End Function

Sub ImprimeComprobanteDirectvPostpago()
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If
   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "No. Contrato: " + Trim(Me.txtregional) + " " + " No.Aut: " + Trim(VLDpsececutel)
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Total_Pagar.Text, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms   '/*JPM 08122004*/
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + "   "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "   CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   VLNeto = FMCCurATX(Pago_Val.Text)
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms  '/*JPM 08122004*/
 
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))        'hy-categ agregar la moneda
End Sub



'-- JPM 11/Feb/2016 -->
Function FLTransmitir_CPS_CentroSur_consulta() As Boolean
Dim VLComisionCS As Double
   
   servicio1 = "CSBA"
   VLDescripServicio = "Luz"
   rubro = "CRCS"
   
   Pago_Val.Tag = 0
   PMChequea VGSqlConn&

   Consulta_parametro_OSB
   PMChequea VGSqlConn&
   PMInicioTransaccion
   FLTransmitir_CPS_CentroSur_consulta = False
   VLTsnTemp = 0
   PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "62075", "Trn", ""
   PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
   PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
   PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim$(Ref.Text), "", ""
   PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
'   PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
'   PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_ptipo_trn", 0, SQLVARCHAR, Trim$("000100"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pfechamit", 0, SQLVARCHAR, Trim$("00000000000000"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pseqmit", 0, SQLVARCHAR, Trim$("000000"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, Format$(Time(), "hhmmss"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pfechalocal", 0, SQLVARCHAR, Format$(Date, "yyyymmdd"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pfechacomp", 0, SQLVARCHAR, VLFechaContEmp, "", ""
   PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pcodinst", 0, SQLVARCHAR, Trim$("007"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(Format(VGUsuario, "000000")), "", ""
   PMPasoValoresATX VGSqlConn, "@i_presultado", 0, SQLVARCHAR, Trim$("0000000000000"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_secuencial", 0, SQLVARCHAR, Trim$("0000000000000"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pnumero", 0, SQLVARCHAR, Format("007", "0000") & Trim$(Format(VGOficina, "000000")) & Trim$(Format(Mid(VGterminal, 1, 6), "000000")), "", ""
   PMPasoValoresATX VGSqlConn, "@i_ptipo_moneda", 0, SQLVARCHAR, Trim$("840"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pregional", 0, SQLVARCHAR, Format(VLCodReg, "00000000"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_pservicio", 0, SQLVARCHAR, Trim$("001"), "", ""
   PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, "C", "", ""
   PMPasoValoresATX VGSqlConn, "@o_pnombres", 1, SQLVARCHAR, Trim$(""), "", ""
   PMPasoValoresATX VGSqlConn, "@o_pfactpen", 1, SQLVARCHAR, Trim$(""), "", ""
   PMPasoValoresATX VGSqlConn, "@o_pdeuda", 1, SQLMONEY, Trim$(""), "", ""
   If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_centro_sur", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_CPS_CentroSur_consulta = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())
        VLNombre = FLBuscarItem2("@o_pnombres")
        Nombre = VLNombre
        VLFactPend = FLBuscarItem2("@o_pfactpen")
        txtfactura.Text = VLFactPend
        VLDeudaTotal = FLBuscarItem2("@o_pdeuda")
        valor.Text = VLDeudaTotal
        Total.Text = VLDeudaTotal
        Pago_Val.Text = VLDeudaTotal
        Pago_Val.Tag = CCur(Pago_Val.Text)
        If val(VLDeudaTotal) = 0 Then
          MsgBox "La deuda ya está cancelada", vbInformation
          Exit Function
        End If
        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
        If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
        End If
        Total.Text = CCur(valor.Text) + CCur(Comision.Text)
        efe.SetFocus
        
        'JPM CS -->
        PMChequeaATX VGSqlConn
        PMFinTransaccion
        
        PMInicioTransaccion
        VLComisionCS = 0
        PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 4050, "Trn", ""
        PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Empresa, "CodigoEmpresa", ""
        PMPasoValoresATX VGSqlConn, "@i_cons_comision", 0, SQLINT1, 1, "IndicaComision", ""
        PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, servicio1, "ServicioPerson", ""
        PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, rubro, "RubroPerson", ""
        PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
        'IVA
        PMPasoValoresATX VGSqlConn, "@o_tasa", 1, SQLMONEY, "0", "tasa", ""
        PMPasoValoresATX VGSqlConn, "@o_base_imp", 1, SQLMONEY, "0", "base_imp", ""
        PMPasoValoresATX VGSqlConn, "@o_impuesto", 1, SQLMONEY, "0", "impuesto", ""
        'IVA
        PMPasoValoresATX VGSqlConn, "@o_comision", 1, SQLMONEY, 0, "Comision", ""
        
        If FMTransmitirRPCATX(VGSqlConn, "", "cob_pagos", "sp_val_servicios_varios", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
            'MsgBox "datos de comision"
            VLComisionCS = FMRetParamATX(VGSqlConn, 1)
            VlbaseImp = FMRetParamATX(VGSqlConn, 3)
            VLiva = FMRetParamATX(VGSqlConn, 4)
    
            'FLConsultarComision = True
            'PMChequeaATX VGSqlConn&
            'PMFinTransaccion
        End If
    
        If VLComisionCS = 0 Then
          Comision.Enabled = False
        Else
          Comision.Enabled = True
          Me.Comision.Text = VLComisionCS
        End If
        '<-- JPM CS
    Else
        PMChequeaATX VGSqlConn
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    
     'LBP Inicio RECA-CC-SGC00025869
     If Comision.Text > 0 Then
        VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
        If VGCom_aux <> CDbl(Comision.Text) Then
            VGComision_original = Comision.Text
            Comision.Text = VGCom_aux
            VLComisionCS = VGCom_aux
        Else
            VGComision_original = Comision.Text
        End If
     End If
    'LBP Fin RECA-CC-SGC00025869
    
End Function

Function FLTransmitir_CPS_CentroSur_pago() As Boolean
Dim VTIndicadorSum As Integer
Dim i As Integer
Dim VLValor As String
    
    FLTransmitir_CPS_CentroSur_pago = False
    If Pago_Val.Tag = 0 And VGTipoEjecucion% <> CGReverso% Then
      MsgBox "La deuda ya está cancelada", vbInformation
      Exit Function
    End If
    If Pago_Val.Tag <> CCur(Pago_Val.Text) Then
      MsgBox "El valor a pagar debe corresponder al total de lo adeudado", vbCritical
      Exit Function
    End If
    
    VTIndicadorSum = 0
    VLTsnTemp = 0
    Consulta_parametro_OSB
    PMChequea VGSqlConn&
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62076, "Trn", ""
    If VGTipoEjecucion% <> CGReverso% Then
      PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, Format$(VGFechaProceso, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
    'PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, VGFechaProceso + "T00:00:00", "FechaLocal", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_grupo", 0, SQLINT4, Empresa.Text, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_digver", 0, SQLCHAR, Mid$(Trim$(Ref), Len(Trim$(Ref)), 1), "DigVer", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, efe.Text, "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, Reten.Text, "Retencion", ""
    PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, Me.Comision.Text, "Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Trim(Servicio.Text), "", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""           ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_descproc", 0, SQLVARCHAR, (sal_proc), "DescProc", ""       'Para recupar en Reverso
    
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    
    'PARAMETROS DE CSP
    PMPasoValoresATX VGSqlConn, "@i_pcodigo", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_tran", 0, SQLINT4, Trim$("000101"), "", ""
    VLValor = valor.Text ' - (Pago_Val.Text - VLTotCom)
    'VLValor = Trim$(Str$(CCur(VLValor) * 100))
    'PMPasoValoresATX VGSqlConn, "@i_ptotal_pendiente", 0, SQLINT4, Str$(VLValor), "", ""
    PMPasoValoresATX VGSqlConn, "@i_ptotal_pendiente", 0, SQLMONEY, str$(VLValor), "", ""
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Pago_Val.Text), "Total pagado", ""   ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (valor.Text), "Subtotal", ""          ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_totapag", 0, SQLMONEY, (Total.Text), "Total", ""              ' Para recuperar en reverso
    
   If VGTipoEjecucion% <> CGReverso% Then
        VL_Hora = Format$(Time(), "hhmmss")
    
        VL_Hora = Mid("000000", 1, 6 - Len(VL_Hora)) + VL_Hora
        PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, VL_Hora, "", ""
    Else
        VL_Hora = Format$(Time(), "hhmmss")
        VL_Hora = Mid("000000", 1, 6 - Len(VL_Hora)) + VL_Hora
        PMPasoValoresATX VGSqlConn, "@i_phoralocal", 0, SQLVARCHAR, VL_Hora, "", ""
    End If
    If VGTipoEjecucion% = CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@i_preverso", 0, SQLVARCHAR, "1", "", "", True
    Else
        PMPasoValoresATX VGSqlConn, "@i_preverso", 0, SQLVARCHAR, "2", "", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(Format(VGUsuario, "000000")), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pseqinst", 0, SQLVARCHAR, "000000", "", ""
    PMPasoValoresATX VGSqlConn, "@i_ptipo_moneda", 0, SQLVARCHAR, Trim$("840"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pcedula", 0, SQLVARCHAR, cedula, "", ""
    VLValor = Pago_Val.Text
    'VLValor = Trim$(Str$(CCur(VLValor) * 100))
    'PMPasoValoresATX VGSqlConn, "@i_pvalorpag", 0, SQLINT4, Str$(VLValor), "", ""
    VLValor = Trim$(str$(CCur(VLValor)))
    PMPasoValoresATX VGSqlConn, "@i_pvalorpag", 0, SQLMONEY, str$(VLValor), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pservicio", 0, SQLVARCHAR, Trim$("001"), "", ""
    If VGTipoEjecucion% <> CGReverso% Then
      PMPasoValoresATX VGSqlConn, "@i_pautorizacion", 0, SQLVARCHAR, "000000", "", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_pnombres", 0, SQLVARCHAR, Trim(Nombre), "", ""
    'VARIABLES DE RETORNO
    PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "SecTrn", ""
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_centro_sur", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLTransmitir_CPS_CentroSur_pago = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        VLCambio% = False

        If VGTipoEjecucion% <> CGReverso% Then
            VLo_pautorizacion = FLBuscarItem("@o_codautorizador") '"@o_pautorizacion_prov")
            SGSecTrn$ = FLBuscarItem("@o_ssn")
            VLFechaCorte = FLBuscarItem("@s_date")
        End If
        VLValor = valor.Text - (Pago_Val.Text - VLTotCom)
        VLDpPValorPendienteCobro = VLValor
        If VGTipoEjecucion% = CGReverso% Then
            VLValor = valor.Text - (Pago_Val.Text)
            VLDpPValorPendienteCobro = VLValor

            VGTipoEjecucion% = CGNormal%
            Call Proceso_LostFocus
            VGTipoEjecucion% = CGReverso%
        End If
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_CPS_CentroSur_pago = True
            VLCambio% = False
        End If
    Else
        VLCambio% = True
        FLTransmitir_CPS_CentroSur_pago = False
        If vl_servidor_BUS <> "PSSRV1" Then
            SGSecTrn$ = FLBuscarItem("@o_ssn")
        Else
            SGSecTrn$ = FMRetParamATX(VGSqlConn, 1)
        End If
        PMChequeaATX VGSqlConn
    End If
    'SGSecTrn$ = FMRetParamATX(VGSqlConn, 1)   'Obtener secuencial de Trx
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir_CPS_CentroSur_pago = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    If FLTransmitir_CPS_CentroSur_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3919", "3916"), rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3919", "3916"), rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
       Call PLFactura
    End If
    If Not VGHorarioDif Then
        VLTrn = "3916"
    Else
        VLTrn = "3919"
    End If
    If VGTipoEjecucion% <> CGReverso% Then
        If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
        VLTsnTemp = VGTSN
        PMEgresoEfectivo SGUsar, VLTrn
    End If
    If SGAcumulado < 0 Then
        VLDescargar = 1
    End If
End Function
'<-- JPM 11/Feb/2016

Function FLTransmitir_UTPL_consulta() As Boolean
Dim VLarregloParametros(30) As String
    FLTransmitir_UTPL_consulta = False
    VLTsnTemp = 0
    'Validar envio de un Código Válido en la Consulta
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
        
    Consulta_parametro_OSB
    
    'llamar a la consulta
    PLTipoTransaccion
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62650, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref.Text), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "Canal", ""
    If Me.CboTipo.ListIndex = 0 Then
        PMPasoValoresATX VGSqlConn, "@i_tipoConsulta", 0, SQLVARCHAR, "1", "TipoConsulta", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipoConsulta", 0, SQLVARCHAR, "2", "TipoConsulta", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, (Empresa.Text), "EMPRESA", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("143")), "Moneda", ""
    
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_UTPL", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then 'msilvag Bus Fase 2 Abril/2015
        FLTransmitir_UTPL_consulta = True
        PMMapeaGridATX VGSqlConn, grddato, False
        PMChequeaATX VGSqlConn
        VLCambio% = False
'        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
   Else
      FLTransmitir_UTPL_consulta = False
      PMChequeaATX VGSqlConn
      PMFinTransaccion
      Exit Function
   End If
   PMChequeaATX VGSqlConn
   PMFinTransaccion
   
   Call ConsultaComisionServicios("CSPR", "UTPL", Empresa)
    
    If FLTransmitir_UTPL_consulta = True Then
        SGEmpresa = Empresa.Text
        SGActivaSum = True

        VL_Row = 0
        For i = 1 To grddato.Rows - 1
            grddato.Row = i
            grddato.Col = 6
            If grddato.Text > 0 Then
                 VL_Row = VL_Row + 1
            End If
        Next
            vl_fila = 0
        If VL_Row > 0 Then
            FCC51_grid.txtCedula = Ref.Text
            FCC51_grid.Caption = "UTPL - 51 : CONSULTA DE CODIGOS"
            grddato.Row = 1
            grddato.Col = 3
            FCC51_grid.txtContribuyente = grddato.Text

            FCC51_grid.grdDetalle.Rows = VL_Row + 1 'Me.grddato.Rows
            FCC51_grid.grdDetalle.Cols = grddato.Cols

            If grddato.Rows <> 0 Then
                For i = 1 To grddato.Rows - 1
                    grddato.Row = i
                    grddato.Col = 6

                    If grddato.Text > 0 Then 'descarta los registros que vengan 0
                        vl_fila = vl_fila + 1
                        grddato.Row = i
                        grddato.Col = 0
                        FCC51_grid.grdDetalle.Row = vl_fila
                        FCC51_grid.grdDetalle.Col = 0
                        FCC51_grid.grdDetalle.Text = Trim$(str$(vl_fila))
                        For j = 1 To grddato.Cols - 1
                            grddato.Col = j
                            FCC51_grid.grdDetalle.Row = vl_fila
                            FCC51_grid.grdDetalle.Col = j
                            FCC51_grid.grdDetalle.Text = grddato.Text
                        Next
                    End If
                 Next
                FCC51_grid.grdDetalle.Row = 1
                FCC51_grid.grdDetalle.Col = 1
                FCC51_grid.Show vbModal
             End If
        Else
            MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
            FLTransmitir_UTPL_consulta = False
            VLCambio% = True
            efe.Enabled = False
            Loc.Enabled = False
            CantChq.Enabled = False
            Pago_Val.Enabled = False
            CboTipCta.Enabled = False
            Cta.Enabled = False
            Empresa.Enabled = False
            Servicio.Enabled = False
            Proceso.Enabled = True
            Ref.Enabled = True
            Ref.SetFocus
            Exit Function
        End If
    End If
    efe.Enabled = True
    efe.SetFocus
End Function

Function FLTransmitir_UTPL_pago() As Boolean
   Dim VTIndicadorSum As Integer
   Dim i As Integer
   Dim VLValor As String
   Dim VLarregloParametros(30) As String
   Dim VLCta_com1 As String
   
   FLTransmitir_UTPL_pago = False

   Consulta_parametro_OSB
   
   'msilvag Inicio RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    VLCta_com1 = ""
    VLCta_com1 = VLCta_com
    'msilvag Fin
   
   
    PMInicioTransaccion
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "UTPCTA"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
        VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametros())
        VLCta_com = LTrim(RTrim(Trim(VLarregloParametros(4))))
    Else
        VLCta_com = "0000000000"
    End If
    PMChequea VGSqlConn&
    PMFinTransaccion
    
     PMInicioTransaccion
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "UTPCBO"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
        VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametros())
        VLCodBanco = LTrim(RTrim(Trim(VLarregloParametros(4))))
    Else
        VLCodBanco = "BCOBOL"
    End If
    PMChequea VGSqlConn&
    PMFinTransaccion
   
   
   
   
   
   VTIndicadorSum = 0
   VLTsnTemp = 0

   PMInicioTransaccion
      
   PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62651, "Trn", ""
   If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
   End If
   'parametros para aplicar en el truco del reverso
   PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", ""
   PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
   PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""
   PMPasoValoresATX VGSqlConn, "@i_saldo", 0, SQLMONEY, Total_Pagar.Text, "saldo", ""
   PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Ref.Text, "identificacion", ""
    If Me.CboTipo.ListIndex = 0 Then
        PMPasoValoresATX VGSqlConn, "@i_tipoConsulta", 0, SQLVARCHAR, "1", "TipoConsulta", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipoConsulta", 0, SQLVARCHAR, "2", "TipoConsulta", ""
    End If
   PMPasoValoresATX VGSqlConn, "@i_total_val", 0, SQLMONEY, Me.Total.Text, "totalVal", ""
   

   PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
   PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
   PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
   PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_chq", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
   PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
   PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLMONEY, efe.Text, "Efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_efe", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_db", 0, SQLMONEY, (VLDeb_com), "Com. Debito", "" 'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
   PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
   PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
   PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
   PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Me.Pago_Val.Text), "Total pagado", ""
   'msilvag Inicio RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    If Me.Cta.ClipText <> "" Then
                PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
                PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com1), "Cta", ""  'VLCta_com
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (VLTipCta_com), "CboTipCta", ""
    End If
    'msilvag Fin
   PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (valor.Text), "Subtotal", ""
   PMPasoValoresATX VGSqlConn, "@i_nombre_suscrip", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""
   PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, Format$(Date, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
   
   PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, Trim$(txt_fecha_emision.Text), "Referencia", ""
   PMPasoValoresATX VGSqlConn, "@i_referencia_aux", 0, SQLVARCHAR, Trim$(txtregional.Text), "Referencia_aux", ""
   PMPasoValoresATX VGSqlConn, "@i_fecha_pago", 0, SQLVARCHAR, Format$(Date, "DD/MM/YYYY"), "Fecha_pago", ""
   PMPasoValoresATX VGSqlConn, "@i_hora_pago", 0, SQLVARCHAR, Format$(Time(), "HH:MM:SS"), "Hora_pago", ""
   PMPasoValoresATX VGSqlConn, "@i_tipocanal", 0, SQLVARCHAR, "VENBCO", "Tipo_canal", ""
   PMPasoValoresATX VGSqlConn, "@i_cuenta_utpl", 0, SQLVARCHAR, Trim$(VLCta_com), "Cuenta_UTPL", ""
   PMPasoValoresATX VGSqlConn, "@i_codigo_bco", 0, SQLVARCHAR, Trim$(VLCodBanco), "Codigo_banco", ""
   
   PMPasoValoresATX VGSqlConn, "@o_pid_pago", 1, SQLVARCHAR, "xxxxx", "", ""
   
    'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
   
   If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_UTPL", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
      FLTransmitir_UTPL_pago = True
      VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
      SGSecTrn$ = FLBuscarItem("@o_ssn")
      'Limpio el Buffer para poder obtener los parametros de salida.
      PMChequeaATX VGSqlConn
        If Trim(SGSecTrn$) = "" Then
            SGSecTrn$ = FLBuscarItem3("@o_ssn")
            VLFechaCorte = FLBuscarItem3("o_fecha_efectivo")
            VLHorario = FLBuscarItem3("@o_horario")
            VLDpsececutel = FLBuscarItem3("@o_pid_pago")
        Else
            VLFechaCorte = FLBuscarItem("@o_fecha_efectivo")
            VLFechaCorte = Format(VLFechaCorte, "mm/dd/yyyy")
            VLHorario = FLBuscarItem("@o_horario")
            VLDpsececutel = FLBuscarItem("@o_pid_pago")
        End If
      VLCambio% = False
      VTIndicadorSum = 1
      PMIniciaRegSum
   Else
      VLCambio% = True
      VLFechaCorte = ""
      FLTransmitir_UTPL_pago = False
      SGSecTrn$ = VLDpPSecuencialTrx
      VTIndicadorSum = 0
      PMChequeaATX VGSqlConn
   End If

   If VGHorarioDif Then
        VLTrn = "3926"
   Else
        VLTrn = "3925"
   End If
    
   PMChequeaATX VGSqlConn
   PMFinTransaccion

    If FLTransmitir_UTPL_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura  'LLAMA A PROCEDIMIENTO DE FACTURA
    End If

   If VGTipoEjecucion% <> CGReverso% Then
      If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
         SGPrimeraVez = 0     ' ya no es primera vez
         PMGrabaDesglose VLTrn, SGUsar, VLCambio%
         If VLCambio% = True Then
            MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
         End If
         SGActual = 1  'seteo Variable para borrar desglose
      ElseIf VTIndicadorSum = 0 Then
         SGActual = 0  'no borrar desglose en caso de Error en Transaccion
      End If
   ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
      VLTsnTemp = VGTSN
      PMEgresoEfectivo SGUsar, VLTrn
   End If
   If SGAcumulado < 0 Then
      VLDescargar = 1
   End If
End Function

Sub ImprimeComprobanteUTPL()
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "No. Cta. UTPL: " + Trim(VLCta_com)
   PMSetDetalle "v" + "Codigo: " + Trim(Ref.Text) + " " + " Referencia: " + Trim(Me.txt_fecha_emision)
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   PMSetDetalle "v" + "Valor de pago: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Total_Pagar.Text, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms   '/*JPM 08122004*/
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + "   "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "   CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   VLNeto = FMCCurATX(Pago_Val.Text)
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms  '/*JPM 08122004*/
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))        'hy-categ agregar la moneda
End Sub
'DOLAYA RECAUDACIONEDUCACION RECA-CC-SGC00029665
Function FLTransmitir_RECAUDAEDU_consulta() As Boolean
Dim VLarregloParametros(30), VLRubroEmp, VLServicioEmp As String
    FLTransmitir_RECAUDAEDU_consulta = False
    VLTsnTemp = 0
    'Validar envio de un Código Válido en la Consulta
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
    Consulta_parametro_OSB
    'Invocamos a la consulta
    PLTipoTransaccion
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62657, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref.Text), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "Canal", ""
    If Me.CboTipo.ListIndex = 0 Then
        PMPasoValoresATX VGSqlConn, "@i_tipoConsulta", 0, SQLVARCHAR, "1", "TipoConsulta", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipoConsulta", 0, SQLVARCHAR, "2", "TipoConsulta", ""
    End If
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, (Empresa.Text), "EMPRESA", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    
    'PARAMETROS OUTPUT PARAMS'
    PMPasoValoresATX VGSqlConn, "@o_codigo_error", 1, SQLVARCHAR, 0, "", ""
    PMPasoValoresATX VGSqlConn, "@o_codigo_error_remoto", 1, SQLVARCHAR, 0, "", ""
    PMPasoValoresATX VGSqlConn, "@o_mensaje", 1, SQLVARCHAR, 0, "", ""
    PMPasoValoresATX VGSqlConn, "@o_nombre_alumno", 1, SQLVARCHAR, 0, "", """"
    PMPasoValoresATX VGSqlConn, "@o_codigo", 1, SQLVARCHAR, 0, "", ""
    PMPasoValoresATX VGSqlConn, "@o_identificacion", 1, SQLVARCHAR, 0, "", ""
    PMPasoValoresATX VGSqlConn, "@o_institucion", 1, SQLVARCHAR, 0, "", ""
    
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_REDUCA", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
        FLTransmitir_RECAUDAEDU_consulta = True
        PMMapeaGridATX VGSqlConn, grddato, False
        PMChequeaATX VGSqlConn
        VLCambio% = False
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = False 'Ref17
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
        If FMCCurATX((valor.Text)) > 0 Then
          valor.Visible = True
          lblValor(0).Visible = True
        End If
   Else
      FLTransmitir_RECAUDAEDU_consulta = False
      PMChequeaATX VGSqlConn
      PMFinTransaccion
      Exit Function
   End If
   PMChequeaATX VGSqlConn
   PMFinTransaccion
   
   'Validación de la empresa de EducacionRecaudacion RECA-CC-SGC00029665
   
   If Empresa.Text = "6087" Then
    VLcodempresa = "ECOTEC"
    Call ConsultaComisionServicios("CSPR", "UECO", Empresa)
   End If
   
   'Fin de Validación
   
   'Validación de la empresa de EducacionRecaudacion RECA-CC-SGC00029665
   
   If Empresa.Text = "1125" Then
    VLcodempresa = "UEES"
    Call ConsultaComisionServicios("CSPR", "UEES", Empresa)
   End If
   
   'Fin de Validación
    
    If FLTransmitir_RECAUDAEDU_consulta = True Then
        SGEmpresa = Empresa.Text
        SGActivaSum = True

        VL_Row = 0
        
        For i = 1 To grddato.Rows - 1
            grddato.Row = i
            grddato.Col = 4
            If grddato.Text > 0 Then
                 VL_Row = VL_Row + 1
            End If
        Next
        
        vl_fila = 0
        
        If VL_Row > 0 Then
            FCC51_grid.txtCedula = Ref.Text
            If SGEmpresa = "6087" Then
              FCC51_grid.Caption = "ECOTEC - 51 : CONSULTA DE CODIGOS"
            Else
              FCC51_grid.Caption = "UEES - 51 : CONSULTA DE CODIGOS"
            End If
            grddato.Row = 1
            grddato.Col = 1
            FCC51_grid.txtContribuyente = grddato.Text

            FCC51_grid.grdDetalle.Rows = VL_Row + 1
            FCC51_grid.grdDetalle.Cols = grddato.Cols

            If grddato.Rows <> 0 Then
                For i = 1 To grddato.Rows - 1
                    grddato.Row = i
                    grddato.Col = 4
                    If grddato.Text > 0 Then
                        vl_fila = vl_fila + 1
                        grddato.Row = i
                        grddato.Col = 0
                        FCC51_grid.grdDetalle.Row = vl_fila
                        FCC51_grid.grdDetalle.Col = 0
                        FCC51_grid.grdDetalle.Text = Trim$(str$(vl_fila))
                        For j = 1 To grddato.Cols - 1
                            grddato.Col = j
                            FCC51_grid.grdDetalle.Row = vl_fila
                            FCC51_grid.grdDetalle.Col = j
                            FCC51_grid.grdDetalle.Text = grddato.Text
                        Next
                    End If
                 Next
                FCC51_grid.grdDetalle.Row = 1
                FCC51_grid.grdDetalle.Col = 1
                FCC51_grid.Show vbModal
             End If
        Else
            MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
            FLTransmitir_RECAUDAEDU_consulta = False
            VLCambio% = True
            efe.Enabled = False
            Loc.Enabled = False
            CantChq.Enabled = False
            Pago_Val.Enabled = False
            CboTipCta.Enabled = False
            Cta.Enabled = False
            Empresa.Enabled = False
            Servicio.Enabled = False
            Proceso.Enabled = True
            Ref.Enabled = True
            Ref.SetFocus
            Exit Function
        End If
    End If
    efe.Enabled = True
    efe.SetFocus
End Function
' DOLAYA RECAUDACIONEDUCACION RECA-CC-SGC00029665
Function FLTransmitir_RECAUDAEDU_pago() As Boolean
   Dim VTIndicadorSum As Integer
   Dim i As Integer
   Dim VLValor, VLNemoCta, VLNemoBanco As String
   Dim VLarregloParametros(30) As String
   ReDim vcarreglo(50) As String
   
   FLTransmitir_RECAUDAEDU_pago = False

   Consulta_parametro_OSB
   
   'Validamos x empresa RecaudacionEducacion
   
   If Empresa.Text = "6087" Then
    VLNemoCta = "ECOCTA"
   End If
   
   PMInicioTransaccion
   
   PMPasoValores VGSqlConn&, "@t_trn", 0, SQLINT4, "3225"
   PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"

   PMPasoValores VGSqlConn&, "@i_empresa", 0, SQLINT4, Empresa.Text
   
   If FMTransmitirRPC(VGSqlConn&, ServerName$, "cob_pagos", "sp_tr_person_empresa", True, "") Then
      vtr% = FMMapeaArreglo(VGSqlConn&, vcarreglo())
      VLNumCta = vcarreglo(8)
      PMChequea VGSqlConn&
   End If
   
   PMChequea VGSqlConn&
   PMFinTransaccion

   'Validamos x empresa RecaudacionEducacion
   
   If Empresa.Text = "6087" Then
    VLNemoBanco = "ECOCBO" 'ECOTEC
   Else
    VLNemoBanco = "UEESBO" 'UEES
   End If
   
   PMInicioTransaccion
   PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
   PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
   PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, VLNemoBanco
   PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
   If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
       VTR1% = FMMapeaArreglo(VGSqlConn&, VLarregloParametros())
       VLCodBanco = LTrim(RTrim(Trim(VLarregloParametros(4))))
   Else
       VLCodBanco = "BCOBOL"
   End If
   PMChequea VGSqlConn&
   PMFinTransaccion
   VTIndicadorSum = 0
   VLTsnTemp = 0

   PMInicioTransaccion
      
   PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62658, "Trn", ""
   If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
   End If
   PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", ""
   PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
   PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""
   PMPasoValoresATX VGSqlConn, "@i_saldo", 0, SQLMONEY, Total_Pagar.Text, "saldo", ""
   PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Ref.Text, "identificacion", ""
    If Me.CboTipo.ListIndex = 0 Then
        PMPasoValoresATX VGSqlConn, "@i_tipoConsulta", 0, SQLVARCHAR, "1", "TipoConsulta", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipoConsulta", 0, SQLVARCHAR, "2", "TipoConsulta", ""
    End If
   PMPasoValoresATX VGSqlConn, "@i_total_val", 0, SQLMONEY, Me.Total.Text, "totalVal", ""
   
   PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
   PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
   PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
   PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_chq", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
   PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_db", 0, SQLMONEY, (VLDeb_com), "Com. Debito", ""
   PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLMONEY, efe.Text, "Efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_efe", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
   PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
   PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
   PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
   PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Me.Pago_Val.Text), "Total pagado", ""
   VLTipCta_com = CboTipCta.Text
   
   If Me.Cta.ClipText <> "" Then
      PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (CboTipCta.Text), "TipoCta", ""
      PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
      If Me.Debito.Text > 0 Then
        PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
      End If
   Else
    PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (VLTipCta_com), "TipoCta", ""
    PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
   End If
   
   PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (valor.Text), "Subtotal", ""
   PMPasoValoresATX VGSqlConn, "@i_nombre_suscrip", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""
   'PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, Format$(Date, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
   PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, Format$(VGFechaProceso, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", "" ' SE LE ASIGNA LA FECHA DE PROCESO --> RECA-CE-SGC00029908
   
   PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, Trim$(txt_fecha_emision.Text), "Referencia", ""
   PMPasoValoresATX VGSqlConn, "@i_referencia_aux", 0, SQLVARCHAR, Trim$(txtReferenciaAux.Text), "Referencia_aux", ""
   PMPasoValoresATX VGSqlConn, "@i_fecha_pago", 0, SQLVARCHAR, Format$(Date, "DD/MM/YYYY"), "Fecha_pago", ""
   PMPasoValoresATX VGSqlConn, "@i_hora_pago", 0, SQLVARCHAR, Format$(Time(), "HH:MM:SS"), "Hora_pago", ""
   PMPasoValoresATX VGSqlConn, "@i_tipocanal", 0, SQLVARCHAR, "VENBCO", "Tipo_canal", ""
   PMPasoValoresATX VGSqlConn, "@i_cuenta_reduca", 0, SQLVARCHAR, Trim$(VLCta_com), "Cuenta_REDUCA", ""
   PMPasoValoresATX VGSqlConn, "@i_codigo_bco", 0, SQLVARCHAR, Trim$(VLCodBanco), "Codigo_banco", ""
   
   PMPasoValoresATX VGSqlConn, "@o_codigo_error", 1, SQLINT4, "0", "Error", ""
   PMPasoValoresATX VGSqlConn, "@o_ssn", 1, SQLINT4, "0", "Msj", ""
   PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLVARCHAR, "", "Horario", ""
   PMPasoValoresATX VGSqlConn, "@o_fecha_contable", 1, SQLVARCHAR, "xxxxxxxxxx", "FechaContable", ""
   
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
   
   If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_REDUCA", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
      PMChequeaATX VGSqlConn
      FLTransmitir_RECAUDAEDU_pago = True
      SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        If Trim(SGSecTrn$) = "" Then
            SGSecTrn$ = FLBuscarItem3("@o_ssn")
            VLFechaCorte = FLBuscarItem3("o_fecha_efectivo")
            VLHorario = FLBuscarItem3("@o_horario")
        Else
            VLFechaCorte = FMRetParamATX(VGSqlConn, 4)
            VLFechaCorte = Format(VLFechaCorte, "mm/dd/yyyy")
            VLHorario = FMRetParamATX(VGSqlConn, 3)
        End If
      VLCambio% = False
      VTIndicadorSum = 1
      PMIniciaRegSum
   Else
      VLCambio% = True
      VLFechaCorte = ""
      FLTransmitir_RECAUDAEDU_pago = False
      SGSecTrn$ = VLDpPSecuencialTrx
      VTIndicadorSum = 0
      PMChequeaATX VGSqlConn
   End If

   If VGHorarioDif Then
        VLTrn = "3926"
   Else
        VLTrn = "3925"
   End If
    
   PMChequeaATX VGSqlConn
   PMFinTransaccion

    If FLTransmitir_RECAUDAEDU_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura  'LLAMA A PROCEDIMIENTO DE FACTURA
    End If

   If VGTipoEjecucion% <> CGReverso% Then
      If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
         SGPrimeraVez = 0
         PMGrabaDesglose VLTrn, SGUsar, VLCambio%
         If VLCambio% = True Then
            MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
         End If
         SGActual = 1
      ElseIf VTIndicadorSum = 0 Then
         SGActual = 0
      End If
   ElseIf VTIndicadorSum = 1 Then
      VLTsnTemp = VGTSN
      PMEgresoEfectivo SGUsar, VLTrn
   End If
   If SGAcumulado < 0 Then
      VLDescargar = 1
   End If
End Function
' DOLAYA RECAUDACIONEDUCACION RECA-CC-SGC00029665
Sub ImprimeComprobanteRECAUDAEDU()
  Dim VLCta As String
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If
   
   'Validacion Empresa
   If Empresa.Text = "6087" Then
    VLCta = "No. Cta. ECOTEC: "
   End If

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   'PMSetDetalle "v" + VLCta + Trim(VLNumCta) dolayas
   PMSetDetalle "v" + "Codigo: " + Trim(Ref.Text) + " " + " Referencia: " + Trim(Me.txt_fecha_emision)
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   PMSetDetalle "v" + "Valor de pago: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Total_Pagar.Text, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + "   "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "   CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   VLNeto = FMCCurATX(Pago_Val.Text)
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt
  
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))
   'RECAUDACIONEDUCACION FIN
End Sub
'DOLAYAS AMAGUA AMAGUA-AP-SGC00028642
Function FLTransmitir_AMAGUA_consulta() As Boolean
    Dim VLarregloParametros(30), VLRubroEmp, VLServicioEmp As String
    FLTransmitir_AMAGUA_consulta = False
    VLTsnTemp = 0
    'Validar envio de un Código Válido en la Consulta
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
    Consulta_parametro_OSB
    'Invocamos a la consulta
    PLTipoTransaccion
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62668, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, (Empresa.Text), "EMPRESA", ""
    PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, Trim$(Ref.Text), "Referencia", ""
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_con_rec_agua", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
      FLTransmitir_AMAGUA_consulta = True
      SGEmpresa = Empresa.Text
      'Recuperacion de información por resulset
      VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())
      VLNombre = FLBuscarItem2("@o_nombre")
      Nombre.Text = VLNombre
      VLDeudaTotal = FLBuscarItem2("@o_saldo")
      valor.Text = VLDeudaTotal
      Total_Pagar.Text = CCur(Trim(VLDeudaTotal))
      If Total_Pagar.Text <= 0 Then
          MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
          FLTransmitir_AMAGUA_consulta = False
          PMFinTransaccion
          PMChequeaATX VGSqlConn
          Exit Function
      Else
        Call ConsultaComisionServicios("CSBA", "CCAM", Empresa)
      End If
      efe.Enabled = True
      Loc.Enabled = True
      CantChq.Enabled = True
      Pago_Val.Enabled = True
      CboTipCta.Enabled = True
      Cta.Enabled = True
      Empresa.Enabled = False
      Servicio.Enabled = False
      Proceso.Enabled = False
      Ref.Enabled = False
      If FMCCurATX((valor.Text)) > 0 Then
          valor.Visible = True
          lblValor(0).Visible = True
      End If
      Total.Text = CCur(valor.Text) + CCur(Comision.Text)
      efe.SetFocus
   Else
      FLTransmitir_AMAGUA_consulta = False
      PMChequeaATX VGSqlConn
      PMFinTransaccion
      Exit Function
   End If
   PMChequeaATX VGSqlConn
   PMFinTransaccion
    
End Function
'dolayas AMAGUA AMAGUA-AP-SGC00028642
Function FLTransmitir_AMAGUA_pago() As Boolean
   Dim VTIndicadorSum As Integer
   Dim i As Integer

   FLTransmitir_AMAGUA_pago = False

   Consulta_parametro_OSB
      
   VTIndicadorSum = 0
   VLTsnTemp = 0

   PMInicioTransaccion
   PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62669, "Trn", ""
   If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
   Else
    VGTipoEjecucion% = CGNormal%
      PMPasoValoresATX VGSqlConn, "@i_cod_pago", 0, SQLVARCHAR, txtCodPago.Text, "CodPago", ""
      Consulta_Msj_AMAGUA
      If VLAmaguaReverso <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_motivo_reverso", 0, SQLVARCHAR, VLAmaguaReverso, "MotivoReverso", ""
      Else
        PMPasoValoresATX VGSqlConn, "@i_motivo_reverso", 0, SQLVARCHAR, "026", "MotivoReverso", ""
      End If
      VGTipoEjecucion% = CGReverso%
   End If
   PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLINT4, (Servicio.Text), "Servicio", ""
   PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
   PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""
   PMPasoValoresATX VGSqlConn, "@i_saldo", 0, SQLMONEY, Total_Pagar.Text, "saldo", ""
   PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Ref.Text, "identificacion", ""
   PMPasoValoresATX VGSqlConn, "@i_total_val", 0, SQLMONEY, Me.Total.Text, "totalVal", ""
   PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
   PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
   PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
   
   If CantChq.Text = "" Then
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, "0", "Cantidad de cheques", ""
        PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, "0", "Cantidad de cheques", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, (CantChq.Text), "Cantidad de cheques", ""
        PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, (CantChq.Text), "Cantidad de cheques", ""
    End If
   
   PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
   PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
   PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, (VLDeb_com), "Com. Debito", ""
   PMPasoValoresATX VGSqlConn, "@i_efe", 0, SQLMONEY, efe.Text, "Efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, efe.Text, "Efectivo", ""
   PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
   PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
   PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
   PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
   PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
   PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text)), "Total pagado", ""
   
   If Me.Cta.ClipText <> "" Then
      PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (CboTipCta.Text), "TipoCta", ""
      PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
      If Me.Debito.Text > 0 Then
        PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
      End If
   Else
      If Comision.Enabled = False Then
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (CboTipCta.Text), "TipoCta", ""
      Else
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (VLTipCta_com), "TipoCta", ""
      End If
      PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
   End If
   
   PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (valor.Text), "Subtotal", ""
   PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, Nombre, "Nombre", ""
   PMPasoValoresATX VGSqlConn, "@i_nombre_suscrip", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""
   PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, Format$(VGFechaProceso, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
   
   PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, Trim$(Ref.Text), "Referencia", ""
   PMPasoValoresATX VGSqlConn, "@i_fecha_pago", 0, SQLVARCHAR, Format$(Date, "DD/MM/YYYY"), "Fecha_pago", ""
   PMPasoValoresATX VGSqlConn, "@i_hora_pago", 0, SQLVARCHAR, Format$(Time(), "HH:MM:SS"), "Hora_pago", ""
   PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
   
    PMPasoValoresATX VGSqlConn, "@s_date", 0, SQLVARCHAR, Format$(Date, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
    PMPasoValoresATX VGSqlConn, "@s_org", 0, SQLVARCHAR, "D", "Origen", ""
    PMPasoValoresATX VGSqlConn, "@s_lsrv", 0, SQLCHAR&, "BOLIVSRV", "Localsrv", "" '--
    PMPasoValoresATX VGSqlConn, "@s_sesn", 0, SQLCHAR&, "0", "Sesion", "" '--
    PMPasoValoresATX VGSqlConn, "@s_sev", 0, SQLCHAR&, "0", "Severidad", "" '--
   
   PMPasoValoresATX VGSqlConn, "@o_cod_pago", 1, SQLVARCHAR, "0", "Cod Pago", ""
   
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
   
   If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_agua", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
      FLTransmitir_AMAGUA_pago = True
      VTResult% = FMMapeaMatrizATX(VGSqlConn&, vtmatrizcps())
      SGSecTrn$ = FLBuscarItem("@o_secuencial")
      VLFechaCorte = FLBuscarItem("@o_fecha_contable")
      VLFechaCorte = Left(VLFechaCorte, 10)
      VLFechaCorte = Format(VLFechaCorte, "mm/dd/yyyy")
      VLHorario = FLBuscarItem("@o_horario")
      If VGTipoEjecucion% <> CGReverso% Then
        VLCodPago = FMRetParamATX(VGSqlConn, 1)
        'Lo almacenamos temporalmente en un TextBox
        txtCodPago.Text = VLCodPago
      End If
      VLCambio% = False
      VTIndicadorSum = 1
      PMIniciaRegSum
      PMChequeaATX VGSqlConn
   Else
      VLCambio% = True
      VLFechaCorte = ""
      FLTransmitir_AMAGUA_pago = False
      SGSecTrn$ = VLDpPSecuencialTrx
      VTIndicadorSum = 0
      PMChequeaATX VGSqlConn
   End If
   
   If VGHorarioDif Then
    VLTrn = "3201"
   Else
    VLTrn = "3137"
   End If
    
   PMChequeaATX VGSqlConn
   PMFinTransaccion

    If FLTransmitir_AMAGUA_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura  'LLAMA A PROCEDIMIENTO DE FACTURA
    End If

   If VGTipoEjecucion% <> CGReverso% Then
      If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
         SGPrimeraVez = 0
         PMGrabaDesglose VLTrn, SGUsar, VLCambio%
         If VLCambio% = True Then
            MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
         End If
         SGActual = 1
      ElseIf VTIndicadorSum = 0 Then
         SGActual = 0
      End If
   ElseIf VTIndicadorSum = 1 Then
      VLTsnTemp = VGTSN
      PMEgresoEfectivo SGUsar, VLTrn
   End If
   If SGAcumulado < 0 Then
      VLDescargar = 1
   End If
End Function
'dolayas AMAGUA AMAGUA-AP-SGC00028642

' DOLAYA AMAGUA AMAGUA-AP-SGC00028642
Sub ImprimeComprobanteAMAGUA()
  Dim VLCta As String
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   VGparleft$ = "10"

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "Codigo: " + Trim(Ref.Text) + " " + " No. Autoriz: " + txtCodPago.Text
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Total_Pagar.Text, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + "   "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "CTA.: " + Format(Cta.ClipText, "000-000000-0") + "   DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   
   VLNeto = FMCCurATX(Debito.Text) + FMCCurATX(efe.Text) + FMCCurATX(Loc.Text)
   
   If FMCCurATX((Comision.Text)) > 0 Then
      Coms = " COMISION: " + FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha) + " "
   End If
   
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms
   
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    'ref14 vmirandt
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51"))), , VLVerde
   'AMAGUA FIN AMAGUA-AP-SGC00028642
End Sub
' AMAGUA-AP-SGC00028642 Ini
Private Sub FConsultarAmaguaBase(ByVal e_codEmpresa As String)  'Ref11 Validar si existe el dato en un catalogo
  PMChequea VGSqlConn&
  PMPasoValores VGSqlConn&, "@t_trn", 0, SQLINT2, 1564
  PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_emp_serv_sb"
  PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, e_codEmpresa
  PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLCHAR, "E"  'Existencia
  If e_codEmpresa = "6" Then
    If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_catalogo", True, "") Then
      PMChequea VGSqlConn&
      If FMRetStatusATX(VGSqlConn) = 0 Then
        VLEmpAmaBase = "S"
      Else
        VLEmpAmaBase = "N"
      End If
      PMChequea VGSqlConn&
    Else
      VLEmpAmaBase = "N"
      PMChequea VGSqlConn&
    End If
  Else
    VLEmpAmaBase = "N"
  End If
End Sub
' AMAGUA-AP-SGC00028642 Fin
' AMAGUA-AP-SGC00028642 Ini
Private Sub Consulta_Msj_AMAGUA()
  Dim VLarregloParametro(30) As String
  
  PMChequea VGSqlConn&
  PMPasoValoresATX VGSqlConn&, "@t_trn", 0, SQLINT2, 1579, "", ""
  PMPasoValoresATX VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q", "", ""
  PMPasoValoresATX VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "MRAM", "", ""
  PMPasoValoresATX VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE", "", ""
  If FMTransmitirRPCATX(VGSqlConn&, ServerName$, "cobis", "sp_parametro", True, " Consulta de Parametro de AMAGUA MSJ REVERSO", "N", "N", "N", "51", "N", "N") Then
    VTR1% = FMMapeaArregloATX(VGSqlConn, VLarregloParametro())
    VLAmaguaReverso = LTrim(RTrim(Trim(VLarregloParametro(4))))
  Else
    VLAmaguaReverso = "026"
  End If
  PMChequeaATX VGSqlConn&

End Sub
' AMAGUA-AP-SGC00028642 Fin

'-- JPM Megadatos -->
Function FLTransmitir_Megadatos_consulta() As Boolean
Dim VLarregloParametros(30) As String, VLComisionMD As Double

    FLTransmitir_Megadatos_consulta = False
    
    If Trim(Me.Ref.Text) = "" Then
       MsgBox "Debe ingresar código de identificación, para la Consulta", vbCritical + vbOKOnly, "Atx"
       Ref.SetFocus
       Exit Function
    End If
    Consulta_parametro_OSB
    
    'Llamar a la consulta Megadatos
    PMInicioTransaccion
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "62077", "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
    PMPasoValoresATX VGSqlConn, "@i_identificacion", 0, SQLVARCHAR, Trim$(Ref), "Identificacion", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, Trim$("C"), "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_servi_person", 0, SQLVARCHAR, "CSPR", "ServicioPerson", ""
    PMPasoValoresATX VGSqlConn, "@i_rubro_person", 0, SQLVARCHAR, "MEGA", "RubroPerson", ""
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_megadatos", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
      FLTransmitir_Megadatos_consulta = True
      'recuperacion de información por resulset
      VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())
      VLNombre = FLBuscarItem2("@o_pnombres")
      Nombre.Text = VLNombre
      VLContratoPAC = FLBuscarItem2("@o_codsuministro")
      txtfactura.Text = VLContratoPAC
      VLDeudaTotal = FLBuscarItem2("@o_pvalor")
      valor.Text = VLDeudaTotal
      Total_Pagar.Text = CCur(Trim(VLDeudaTotal))
      VLComisionMD = FLBuscarItem2("@o_comision")
      VlbaseImp = FLBuscarItem2("@o_base_imp")
      VLiva = FLBuscarItem2("@o_impuesto")
      'validad deuda en cero
      If Total_Pagar.Text <= 0 Then
          MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
          FLTransmitir_Megadatos_consulta = False
          PMFinTransaccion
          PMChequeaATX VGSqlConn
          Exit Function
      End If
      If VLComisionMD = 0 Then
        Comision.Enabled = False
      Else
        Comision.Enabled = True
        Me.Comision.Text = VLComisionMD
      End If
      '******ref14 inicio se agrega proque no estaba considerado por este servicio info para factura
      If Comision.Text > 0 Then
         VGCom_aux = FMDevuelveComisionReal(Comision, False, 51)
         If VGCom_aux <> CDbl(Comision.Text) Then
            VGComision_original = Comision.Text
            Comision.Text = VGCom_aux
         Else
            VGComision_original = Comision.Text
         End If
      End If
      '******ref14 fin
      
      efe.Enabled = True
      Loc.Enabled = True
      CantChq.Enabled = True
      Pago_Val.Enabled = True
      CboTipCta.Enabled = True
      Cta.Enabled = True
      Empresa.Enabled = False
      Servicio.Enabled = False
      Proceso.Enabled = False
      Ref.Enabled = False
      If FMCCurATX((valor.Text)) > 0 Then
          valor.Visible = True
          lblValor(0).Visible = True
      End If
      Total.Text = CCur(valor.Text) + CCur(Comision.Text)
      efe.SetFocus
    Else
        FLTransmitir_Megadatos_consulta = False
        PMFinTransaccion
        PMChequeaATX VGSqlConn
        Exit Function
    End If
    PMFinTransaccion
End Function

Function FLTransmitir_Megadatos_pago() As Boolean
On Error GoTo Error
Dim VLMsgError As String

    VLServicio = "Recaudacion"
    SGEmpresa = Me.Empresa.Text
    
    If VGHorarioDif Then
        VLTrn = "3926"
        VLHorario = "D"
    Else
        VLTrn = "3925"
        VLHorario = "N"
    End If
    
    VGTrn = IIf(VLTrn = "", 0, VLTrn)
    
    VLIndReverso = False
    
    If VGTipoEjecucion% = CGReverso% Then
        VLIndReverso = True
    End If
    
    'VALIDACIONES
    Dim Fecha As String
    Fecha = Format$(Date, "yyyymmdd")
    
    Dim fr_ced_ruc As String
    fr_ced_ruc = Replace(SGCedula, "_", "")
    
    Select Case Me.cboTipoId.Text
        Case "C":
            VLTipoDocumento = "002"
        Case "R":
            VLTipoDocumento = "008"
        Case "P":
            VLTipoDocumento = "007"
    End Select
    Consulta_parametro_OSB
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    PMInicioTransaccion
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "TCORR", ""
    End If
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "62078", "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Servicio.Text, "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim(Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""     ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""    ' Para recuperar en reverso
    PMPasoValoresATX VGSqlConn, "@i_identificacion", 0, SQLVARCHAR, (Ref.Text), "Identificacion", ""
    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLVARCHAR, Trim("S"), "AplicCobis", ""
    PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLMONEY, (efe.Text), "efe", ""
    PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLMONEY, (Loc.Text), "Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, (Debito.Text), "Debito", ""
    '**ANTES** PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (Total_Pagar.Text), "Subtotal", ""
    PMPasoValoresATX VGSqlConn, "@i_valor_deuda", 0, SQLMONEY, (valor.Text), "Valor deuda", ""            'para reverso
    PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (Pago_Val.Text), "Subtotal", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_tot", 0, SQLMONEY, (Comision.Text), "valor de la comision", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_efe", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_chq", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_comision_db", 0, SQLMONEY, (VLDeb_com), "Com. Debito", "" 'msilvag RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    '***ANTES*** PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Total_Pagar.Text), "Total pagado", ""
    PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Pago_Val.Text), "Total pagado", ""
    If CantChq.Text = "" Then
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, "0", "Cantidad de cheques", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_cant_cheques", 0, SQLINT4, (CantChq.Text), "Cantidad de cheques", ""
    End If
    'msilvag Inicio RECA-CC-SGC00030409 - Facturacion OffLine Debitos
    If Me.Cta.ClipText <> "" Then
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (CboTipCta.Text), "Tipo Cuenta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipo_cta", 0, SQLCHAR, (VLTipCta_com), "Tipo Cuenta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    End If
    'msilvag Fin
    PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, VGAutoriza, "Autorizacion", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Ventanilla", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre_cliente", 0, SQLVARCHAR, Nombre.Text, "Nom. Cliente", ""
    PMPasoValoresATX VGSqlConn, "@i_contrato", 0, SQLVARCHAR, txtfactura.Text, "Contrato", ""
    If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
        VGTipoEjecucion% = CGNormal%
        PMPasoValoresATX VGSqlConn, "@i_psec_banco", 0, SQLVARCHAR, CStr(VGSSNCorr&), "SecBanco", ""      'VLSsn
        PMPasoValoresATX VGSqlConn, "@i_sec_empresa", 0, SQLVARCHAR, txtfactura.Tag, "SecEmpresa", ""      'VLSsn
        VGTipoEjecucion% = CGReverso%
    End If
    PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, Format$(VGFechaProceso, "yyyy-mm-dd") + "T" + Format$(Time(), "hh:mm:ss"), "FechaLocal", ""
    PMPasoValoresATX VGSqlConn, "@o_codautorizador", 1, SQLINT4, "0", "Autorizador", ""
    'Valores de salida
       '***ref14 inicio .se agrega lógica de las formas de pago
      'LBP Inicio RECA-CC-SGC00025869
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    'LBP Fin RECA-CC-SGC00025869
    '***ref14 fin .se agrega lógica de las formas de pago
    
    
    
    
    
    
    
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_megadatos", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLTransmitir_Megadatos_pago = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())
        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        VLCambio% = False
        '------> Sumadora
        SGSecTrn$ = FLBuscarItem2("@o_ssn")
        VLFechaContable = FLBuscarItem2("@o_fecha_contable")
        VLSsn = SGSecTrn$
        If VGTipoEjecucion% <> CGReverso% Then
            VLFechaCorte = Format(VLFechaContable, "mm/dd/yyyy")
        End If
        VLNumTransaccion = FLBuscarItem2("@o_codautorizador")
        VLHorario = FLBuscarItem2("@o_horario")
        SaldoFecha = CCur(FLBuscarItem2("@o_saldo_pagar"))
        If Servicio.Text = "8" And Trim(Empresa.Text) = "1089" And VGTipoEjecucion% <> CGReverso% Then       'JPM Megadatos -->
           mensaje_mgd$ = Trim(CStr(FLBuscarItem2("@o_mensaje")))
           If mensaje_mgd$ <> "" Then
             VLMsgError = "Aviso:" + vbCrLf + vbCrLf + mensaje_mgd$
             MsgBox VLMsgError, vbOKOnly, "Atx"
             'PMMsgCorreo VLMsgError, "Mensaje del Servidor", "Administrador", VGServerNameRec$
           End If
        End If                                                            '<-- JPM Megadatos
        VLDpCcodResp = ""
        VLfact_elect = ""
        VLSerie_Secuencia = ""
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        FLTransmitir_Megadatos_pago = True
        VLCambio% = False
        VLCambioCedruc% = False
        'TPE ------> Sumadora
        VTIndicadorSum = 1
        PMIniciaRegSum
        '<-----
    Else
        VLCambio% = True
        VLCambioCedruc% = True
        FLTransmitir_Megadatos_pago = False
        'TPE ------> Sumadora
        SGSecTrn$ = FMRetParamATX(VGSqlConn, 2)
        VTIndicadorSum = 0
        PMChequeaATX VGSqlConn
        '<------
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        VTIndicadorSum = 0
        FLTransmitir_Megadatos_pago = False
    End If
    
    PMFinTransaccion
    
    If FLTransmitir_Megadatos_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, VLTrn, rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    'Sumadora -->
    If VGTipoEjecucion% <> CGReverso% Then   'Validacion por REVERSO
        If (VTIndicadorSum = 1 _
        And (Trim$(VGStatusCon) = "A" _
        Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, CStr(SGUsar), VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
                FLTransmitir_Megadatos_pago = False
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then                'Por REVERSO
        PMEgresoEfectivo SGUsar, VLTrn, VGSSNCorr&
    End If
    
    Exit Function
    
Error:
    MsgBox "Error al transmitir la transaccion " & Chr(13) & "Error:" & Err.Description, vbCritical
    PMChequeaATX VGSqlConn
    PMFinTransaccion
    FLTransmitir_Megadatos_pago = False
End Function

Sub ImprimeComprobanteMegadatos()
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   PMSetDetalle "v" + "Este pago sera procesado el " + VLFechaCorte
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "Codigo: " + Trim(Ref.Text) + " " + "No. Aut: " + Trim(VLNumTransaccion)
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   '***ANTES*** PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Total_Pagar.Text, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms   '/*JPM 08122004*/
   PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(valor.Text, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms   '/*JPM 08122004*/
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + "   "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "   CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   VLNeto = FMCCurATX(Pago_Val.Text)
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms  '/*JPM 08122004*/
   'SaldoFecha = (CCur(Me.Valor) - CCur(Me.Efe) - CCur(Me.Debito) - CCur(Me.Loc))
   PMSetDetalle "v" + "SDO A LA FECHA: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(SaldoFecha, VGFormatoMoney), 12, CGJustificacionDerecha) + Coms  '/*JPM 08122004*/
'***ref14 vmirandt inicio, se imprime al final del documento
    If VLclave_acceso <> "" Then
        PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
        PMSetDetalle "v" + VLclave_acceso
    End If
    VGpartop$ = "00"
    VGparleft$ = "10"
    'ref14 vmirandt

   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51")))        'hy-categ agregar la moneda
End Sub
'-- <-- JPM Megadatos

Function FLTransmitir_CPS_MEER_consulta() As Boolean 'Ref11 Consulta Empresas MEER
  Dim VLarregloParametros(30) As String
  Dim vsfecha_trx As String
  Dim vsHoraLocal As String
  Dim vsAutMeer, vsFecTope, vsCodEmpresa, vs_nombreCli, vsMnto As String
  Dim vsCodEmpBco As String
  Dim vdMnto As Double
  

    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
    
    Consulta_parametro_OSB 'msilvag SOA fase2 CNEL
    
    PMInicioTransaccion
    FLTransmitir_CPS_MEER_consulta = False
    VLReferMeer = ""
    VLContratoMeer = ""
    VLCodEmpMeer = 0
    VLTsnTemp = 0
    
    
    vsfecha_trx = Format$(Date, "yyyy-mm-dd") + "T" + Format(Time(), "hh:mm:ss")
    vsHoraLocal = Format$(Time(), "hhmmss")

    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLVARCHAR, 62659, "Trn", ""
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, "9", "PCanal", ""
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim$(Me.Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_suministro", 0, SQLVARCHAR, Trim$(Ref.Text), "Codigo", ""
    
    PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, vsfecha_trx, "Fecha", ""
    PMPasoValoresATX VGSqlConn, "@i_terminal", 0, SQLVARCHAR, VGterminal$, "Terminal", ""
    PMPasoValoresATX VGSqlConn, "@i_hora_trx", 0, SQLVARCHAR, vsHoraLocal, "Hora", ""
    
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_consulta_meer", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
       FLTransmitir_CPS_MEER_consulta = True
       VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())
        
       VLTsnTemporal = VGTSN%
       PMChequeaATX VGSqlConn
       PMTotalesBranch "51"
       VLCambio% = False
        
        vsMnto = FLBuscarItem2("@o_valor_total")
        vdMonto = Trim$(str$(CCur(Trim(vsMnto)) / 100))

'
        vsAutMeer = FLBuscarItem2("@o_autorizacion_meer")
        VLReferMeer = FLBuscarItem2("@o_referencia")
        VLContratoMeer = FLBuscarItem2("@o_contrato")
        vsFecTope = FLBuscarItem2("@o_fecha_tope") 'YYYYMMDD
        'formateaFecha vsFecTope, vsFechaVence
        vsCodEmpresa = FLBuscarItem2("@o_empresa_meer")
        vs_nombreCli = UCase(FLBuscarItem2("@o_nombre"))
        vsCodEmpBco = FConsulta_ValorParametro(vsCodEmpresa, "pg_reca_emp_meer_homolog")
        If vsCodEmpBco <> "" Then
          Sal_Emp = FConsulta_ValorParametro(vsCodEmpBco, "sv_energia_elec_meer") 'ref12
          Empresa = vsCodEmpBco
          Fragua.Caption = "     PAGO A " & Sal_Emp
          FEsEmpresaMEER (Empresa)
          VLCodEmpMeer = CInt(vsCodEmpresa)
        Else
          FLTransmitir_CPS_MEER_consulta = False
          MsgBox "Error: No Existe Codigo Empresa Configurada: " + vsCodEmpresa + ". Catalogo [pg_reca_emp_meer_homolog]", vbExclamation, App.Title
          FLTransmitir_CPS_MEER_consulta = False
          PMChequeaATX VGSqlConn
          PMFinTransaccion
          Exit Function
        End If
        valor.Text = vdMonto
        Total.Text = vdMonto
        Nombre = vs_nombreCli
        
        If vdMonto > 0 Then
          Call ConsultaComisionServicios("CSBA", "CRCS", Empresa)
          Total.Text = CCur(valor.Text) + CCur(Comision.Text)
        Else
          FLTransmitir_CPS_MEER_consulta = False
          MsgBox "El Suministro [" + Trim$(Ref.Text) + "] no tiene deuda Pendiente ", vbExclamation, App.Title
          Exit Function
        End If
        
        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
       If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
       End If
       efe.SetFocus
    Else
        PMChequeaATX VGSqlConn
        Ref.SetFocus
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function
Private Function FConsulta_ValorParametro(ByVal e_codigo As String, ByVal e_tabla As String) As String 'Ref11 Recuperar el valor de un Catalogo de acuerdo al codigo enviado
    FConsulta_ValorParametro = ""
        PMChequea VGSqlConn&
        PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, e_tabla
        PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
        PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, e_codigo
        If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "") Then
            PMMapeaVariableATX VGSqlConn&, VTDetalles$
            PMChequea VGSqlConn&
            FConsulta_ValorParametro = VTDetalles$
            PMChequea VGSqlConn&
        Else
            PMChequea VGSqlConn&
        End If
End Function
Private Sub FEsEmpresaMEER(ByVal e_codEmpresa As String)  'Ref11 Validar si existe el dato en un catalogo
         PMChequea VGSqlConn&
        PMPasoValores VGSqlConn&, "@t_trn", 0, SQLINT2, 1564
        PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "pg_reca_emp_elect_meer"
        PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, e_codEmpresa
        PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLCHAR, "E"  'Existencia
        If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_catalogo", True, "") Then
            PMChequea VGSqlConn&
            If FMRetStatusATX(VGSqlConn) = 0 Then
               VLEmpresaMeer = "S"
            Else
               VLEmpresaMeer = "N"
            End If
            PMChequea VGSqlConn&
        Else
            VLEmpresaMeer = "N"
            PMChequea VGSqlConn&
        End If
       
  ' MsgBox "Empresa MEER " + e_codEmpresa + "-->" + VLEmpresaMeer
End Sub

Function FLTransmitir_MEER_pago(ByVal transaccion_org As String) As Boolean
Dim VTIndicadorSum As Integer
Dim i As Integer
Dim VLValor As String
Dim vsfecha_trx As String
Dim vsHoraLocal  As String
    
    FLTransmitir_MEER_pago = False
    
    VTIndicadorSum = 0
    VLTsnTemp = 0
    
    
    If VGTipoEjecucion% <> CGReverso% Then
        VLSsn = Trim$(str$(VGSqlConn))
    End If
    If Len(Trim$(VLSsn)) > 6 Then
        VLSsn = Right$(Trim$(VLSsn), 6)
    Else
        VLSsn = String(6 - Len(Trim$(VLSsn)), "0") + Trim$(VLSsn)
    End If

    Consulta_parametro_OSB

    PMFinTransaccion
    PMInicioTransaccion
    vsfecha_trx = Format$(Date, "yyyy-mm-dd") + "T" + Format(Time(), "hh:mm:ss")
    vsHoraLocal = Format$(Time(), "hhmmss")
    

    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, 62660, "Trn", ""
    
   If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "@t_corr", ""
    End If
  
    PMPasoValoresATX VGSqlConn, "@i_fecha_trx", 0, SQLVARCHAR, vsfecha_trx, "", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLINT4, Empresa.Text, "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, efe.Text, "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Cheque", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
            
    'ref15 Ini
    If Me.Cta.ClipText <> "" Then
      PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (CboTipCta.Text), "TipoCta", ""
      PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (Cta.ClipText), "Cta", ""
    Else
      PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (VLTipCta_com), "TipoCta", ""
      PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    End If
    'ref15 Fin
    
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLCHAR, "N", "Autorizacion", ""

    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, Trim$("VEN"), "", ""
    
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "CantChq", ""
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, Me.Comision.Text, "Comision", ""
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, (VLDeb_com), "Com. Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Trim(Servicio.Text), "", ""
    PMPasoValoresATX VGSqlConn, "@i_suministro", 0, SQLVARCHAR, Trim$(Ref), "Codigo", ""
    PMPasoValoresATX VGSqlConn, "@i_referencia", 0, SQLVARCHAR, VLReferMeer, "Ref. ", "" ' Referencia devuelta en la consulta
    PMPasoValoresATX VGSqlConn, "@i_contrato", 0, SQLVARCHAR, VLContratoMeer, "Contrato", "" 'Contrato devuelto en consulta
    PMPasoValoresATX VGSqlConn, "@i_hora_trx", 0, SQLVARCHAR, vsHoraLocal, "", ""
    PMPasoValoresATX VGSqlConn, "@i_poperador", 0, SQLVARCHAR, Trim$(Format(VGUsuario, "000000")), "", ""
    VLValor = Pago_Val.Text - VLTotCom
    VLValor = Trim$(str$(CCur(VLValor) * 100))
    PMPasoValoresATX VGSqlConn, "@i_pvalorpag", 0, SQLINT4, str$(VLValor), "", ""
    PMPasoValoresATX VGSqlConn, "@i_pservicio", 0, SQLINT4, str$(VLCodEmpMeer), "", "" 'Codigo empresa devuelto en consulta (entero)
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, Nombre, "Nombre", ""
    PMPasoValoresATX VGSqlConn, "@i_pcanal", 0, SQLVARCHAR, "9", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@i_terminal", 0, SQLVARCHAR, "WTLR0001", "Canal", "" 'Valor quemado para ventanilla
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", "" 'ref12
    'If VGTipoEjecucion% <> CGReverso% Then
    'Else
    'End If

    'If VGTipoEjecucion% = CGReverso% Then
    'Else
    'End If

    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
'ref12 inicio
' Para recuperar en reverso inicio
 PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
 PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""
 PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLMONEY, (Pago_Val.Text), "Total pagado", ""
 PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (valor.Text), "Subtotal", ""
 PMPasoValoresATX VGSqlConn, "@i_totapag", 0, SQLMONEY, (Total.Text), "Total", ""
 PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
 PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "AplicacionCobis", ""
' Para recuperar en reverso fin
 
    If VGTipoEjecucion% = CGReverso% Then
        'REVERSO
            VGTipoEjecucion% = CGNormal%
            PMPasoValoresATX VGSqlConn, "@i_trx_original", 0, SQLVARCHAR, transaccion_org, "", ""
           VGTipoEjecucion% = CGReverso%
    Else
        'PAGO
            PMPasoValoresATX VGSqlConn, "@o_trx_original", 1, SQLVARCHAR, String(250, "X"), "", ""
'            PMPasoValoresATX VGSqlConn, "@o_autorizacion_meer", 1, SQLINT4, 0, "", ""
'            PMPasoValoresATX VGSqlConn, "@o_fecha_contable", 1, SQLVARCHAR, String(10, "X"), "", ""
    End If

'ref12 fin
  
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_procesador", "fp_pago_meer", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then  'msilvag Bus Fase2
        FLTransmitir_MEER_pago = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())

        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        SGSecTrn$ = FLBuscarItem2("@o_ssn")
        VLCambio% = False

        'If VGTipoEjecucion% <> CGReverso% Then
            VLo_pautorizacion = FLBuscarItem2("@o_autorizacion_meer")
            VLFechaCorte = FLBuscarItem2("@o_fecha_contable")
         
        'End If
        'VLHorario = FLBuscarItem("@o_horario")
        'VLo_pseqmit = FLBuscarItem("@o_pseqmit")
        'VLFechaCorte = FLBuscarItem("@o_fecha_efe")
        
        VLHorario = ""
        VLValor = valor.Text - (Pago_Val.Text - VLTotCom)
        VLDpPValorPendienteCobro = VLValor
        'msilvag Inicio
        If VGTipoEjecucion% = CGReverso% Then
           VLValor = valor.Text - (Pago_Val.Text)
           VLDpPValorPendienteCobro = VLValor

           VGTipoEjecucion% = CGNormal%
           Call Proceso_LostFocus
           VGTipoEjecucion% = CGReverso%
        End If
        
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
        End If
        If VLconexion <> "F" Then
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_MEER_pago = True
            VLCambio% = False
        End If
    Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_MEER_pago = False
        
        'SGSecTrn$ = FLBuscarItem("@o_ssn")

        PMChequeaATX VGSqlConn
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir_MEER_pago = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    If FLTransmitir_MEER_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3919", "3916"), rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3919", "3916"), rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    
    If Not VGHorarioDif Then
        VLTrn = "3916"
        VLHorario = "N" 'ref15
    Else
        VLTrn = "3919"
        VLHorario = "D" 'ref15
    End If

    If VGTipoEjecucion% <> CGReverso% Then
        If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
        VLTsnTemp = VGTSN
        'PMEgresoEfectivo Efe.ValueReal, VLTrn
        PMEgresoEfectivo SGUsar, VLTrn
    End If
    If SGAcumulado < 0 Then
        VLDescargar = 1
    End If
End Function

Sub PL_Reveso_MEER()  'ref12
    PMSetValorReverso Empresa, "@i_empresa"
    PMSetValorReverso efe, "@i_val"
    PMSetValorReverso Loc, "@i_valch"
    PMSetValorReverso Debito, "@i_debito"
    PMSetValorReverso CboTipCta, "@i_tipocta"
    PMSetValorReverso Cta, "@i_cuenta"
    PMSetValorReverso CantChq, "@i_cant_chq"
    PMSetValorReverso Pago_Val, "@i_total"
    PMSetValorReverso valor, "@i_subtotal"
    PMSetValorReverso Total, "@i_totapag"
    
    PMSetValorReverso Comision, "@i_efe_com"
    VLEfe_com = Comision.ValueReal
    PMSetValorReverso Comision, "@i_chq_com"
    VLChq_com = Comision.ValueReal
    PMSetValorReverso Comision, "@i_deb_com"
    VLDeb_com = Comision.ValueReal
    VLTotCom = VLEfe_com + VLChq_com + VLDeb_com
    Comision = VLTotCom
    
    PMSetValorReverso Servicio, "@i_servicio"
    PMSetValorReverso Ref, "@i_suministro"
    
    PMSetValorReverso txt_dato_meer, "@i_referencia"
    VLReferMeer = txt_dato_meer.Text
    PMSetValorReverso txt_dato_meer, "@i_contrato"
    VLContratoMeer = txt_dato_meer.Text
    PMSetValorReverso txt_dato_meer, "@i_pservicio"
    VLCodEmpMeer = txt_dato_meer
    PMSetValorReverso txt_dato_meer, "@o_trx_original"
     vl_trx = txt_dato_meer.Text
    PMSetValorReverso Nombre, "@i_nombre"
    PMSetValorReverso Sal_Emp, "@i_empname"
    PMSetValorReverso NomCta, "@i_nombre_cta"
    SGUsar = CDbl(efe.Text) + CDbl(VLEfe_com) 'por reverso sumadora
    Me.Height = 7000
    Pago_Val.Visible = True
    bitmap.Visible = False
    lblCol(6).Visible = False
    lblCol(5).Visible = False
    lblCol(0).Visible = True
    Minimo.Visible = False
    Proceso.Visible = True
    sal_proc.Visible = True
    Empresa.Enabled = False
    Servicio.Enabled = False
    Proceso.Enabled = False
    Ref.Enabled = False
    Fragua.Caption = "              PAGO A " & Sal_Emp
    valor.Visible = True
    lblValor(0).Visible = True
    Minimo.Visible = True
    Nombre_oficina.Visible = False
    lblValor(14).Top = txt_fecha_emision.Top: lblValor(14).Left = lblValor(4).Left: lblValor(14).Visible = True
    txtfactura.Top = txt_fecha_emision.Top + 25: txtfactura.Width = Comision.Width: txtfactura.Visible = True
    
End Sub

Function FEsEmpresaTranPers(ByVal e_codEmpresa As String) As Boolean    'Ref12 validar empresa con transacción personalizada
         FEsEmpresaTranPers = False
        PMPasoValores VGSqlConn&, "@t_trn", 0, SQLINT2, 1564
        PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_emp_meer_tran_pers"
        PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, e_codEmpresa
        PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLCHAR, "E"
        If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_catalogo", True, "") Then
            PMChequea VGSqlConn&
            If FMRetStatusATX(VGSqlConn) = 0 Then FEsEmpresaTranPers = True
        End If
End Function

Function FLTransmitir_Interagua_consulta() As Boolean
  'ariofria
  Dim VLarregloParametros(30) As String
  Dim vs_nombreCli, vsMnto, vs_AutEmp, vsFecTope As String
  Dim vdMnto As Double
  Dim vdComision As Double
  Dim vdMonto As Currency
      
    If Len(Trim$(Ref.Text)) = 0 Then
        MsgBox "Campo código es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
    
    If Me.Empresa = "361" Then  'msilvag RECM-311 RECMPS-371
        If Len(Trim$(Proceso.Text)) = 0 Then
            MsgBox "Campo Tipo es Obligatorio para la consulta", vbCritical + vbOKOnly, "ATX"
            Exit Function
        End If
    End If 'msilvag fin
    
    'msilvag Inicio
    If Len(Me.Ref.Text) > 12 Then
        MsgBox "Codigo de Suministro excede al formato establecido", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
    'msilvag Fin
    
    Consulta_parametro_OSB
    
    SGEmpresa = Me.Empresa.Text  'REF 13

    PMInicioTransaccion
    FLTransmitir_Interagua_consulta = False
    
    'Llamar Consulta
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@s_ofi", 0, SQLVARCHAR, CStr(VGOficina%), "Oficina", ""
    PMPasoValoresATX VGSqlConn, "@s_term", 0, SQLVARCHAR, VGterminal$, "Terminal", ""
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4&, "3201", "Trn", ""
    PMPasoValoresATX VGSqlConn, "@s_user", 0, SQLVARCHAR, VGLogin$, "User", ""
    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLVARCHAR, "N", "Autoriza", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim$(Me.Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, IIf(Proceso.Text <> "", Proceso.Text, "C"), "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLVARCHAR, str(FMObtenerMonedaForma("51")), "Moneda", ""
    'msilvag Inicio RECM-311 RECMPS-371 Interagua TRB
    If Me.Empresa.Text = "361" Then
        PMPasoValoresATX VGSqlConn, "@i_tiporef", 0, SQLVARCHAR, IIf(Proceso.Text <> "", Mid(sal_proc, 1, 10), "contrato"), "Tiporef", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tiporef", 0, SQLVARCHAR, "TRB", "Tiporef", ""
    End If
    'msilvag fin
    
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref.Text), "Codigo", ""
    
    'msilvag Inicio RECM-311 RECMPS-371 Interagua TRB
    If Me.Empresa.Text = "361" Then
        PMPasoValoresATX VGSqlConn, "@i_rubroperson", 0, SQLVARCHAR, "INAG", "Rubro", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_rubroperson", 0, SQLVARCHAR, "ITRB", "Rubro", ""
    End If
    'msilvag Fin
    PMPasoValoresATX VGSqlConn, "@i_serviperson", 0, SQLVARCHAR, "CSBA", "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@s_org", 0, SQLVARCHAR, "D", "Origen", ""
    PMPasoValoresATX VGSqlConn, "@s_srv", 0, SQLCHAR&, "BOLIVSRV", "Srv", "" '--
    PMPasoValoresATX VGSqlConn, "@s_lsrv", 0, SQLCHAR&, "BOLIVSRV", "Localsrv", "" '--
    PMPasoValoresATX VGSqlConn, "@s_sesn", 0, SQLCHAR&, "0", "Sesion", "" '--
    PMPasoValoresATX VGSqlConn, "@s_sev", 0, SQLCHAR&, "0", "Severidad", "" '--
   
    '-----
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_pagos", "sp_tr_pago_agua_rc", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
       FLTransmitir_Interagua_consulta = True
       VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())
        
       VLTsnTemporal = VGTSN%
       PMChequeaATX VGSqlConn
       PMTotalesBranch "51"
       VLCambio% = False
        
       vs_AutEmp = FLBuscarItem2("@o_autempresa")
       vs_nombreCli = UCase(FLBuscarItem2("@o_nombre"))
       vsFecTope = FLBuscarItem2("@o_fecha_tope") 'YYYYMMDD
       vsMnto = FLBuscarItem2("@o_saldo")
       vdMonto = Trim$(str$(CCur(Trim(vsMnto))))
       vdComision = FLBuscarItem2("@o_costo")
        
        valor.Text = vdMonto
        Total.Text = vdMonto
        Nombre.Text = vs_nombreCli
        Comision.Text = vdComision
        Me.Total_Pagar = vdMonto
        Me.Pago_Val.Text = vdMonto
        
        'LBP Inicio RECA-CC-SGC00025869
        If Comision > 0 Then
            VGCom_aux = FMDevuelveComisionReal(CDbl(Comision), False, 51)
            If VGCom_aux <> CDbl(Comision) And VGCom_aux > 0 Then
                VGComision_original = Comision
                Comision = VGCom_aux
            Else
                VGComision_original = Comision
            End If
        End If
        'LBP Fin RECA-CC-SGC00025869
        
        If CCur(Comision.Text) > 0 Then
            Comision.Enabled = True
            Comision.SetFocus
        End If
        
        If vdMonto > 0 Then
          Total.Text = CCur(valor.Text) + CCur(Comision.Text)
        Else
          FLTransmitir_Interagua_consulta = False
          MsgBox "NO TIENE DEUDA PENDIENTE", vbExclamation, App.Title
          Exit Function
        End If
        
        efe.Enabled = True
        Loc.Enabled = True
        CantChq.Enabled = True
        Pago_Val.Enabled = True
        CboTipCta.Enabled = True
        Cta.Enabled = True
        Empresa.Enabled = False
        Servicio.Enabled = False
        Proceso.Enabled = False
        Ref.Enabled = False
       If FMCCurATX((valor.Text)) > 0 Then
            valor.Visible = True
            lblValor(0).Visible = True
       End If
       efe.SetFocus
    Else
        PMChequeaATX VGSqlConn
        Ref.SetFocus
    End If
    PMChequeaATX VGSqlConn
    PMFinTransaccion
End Function

Function FLTransmitir_Interagua_pago() As Boolean
'ariofria
Dim VTIndicadorSum As Integer
Dim i As Integer
Dim VLValor As String
Dim vsfecha_trx As String
Dim vsHoraLocal  As String
Dim vdImpuesto As Currency
Dim vdBaseImponible As String
Dim vsImp  As String
    
    FLTransmitir_Interagua_pago = False
    
    VTIndicadorSum = 0
    VLTsnTemp = 0
        
    If VGTipoEjecucion% <> CGReverso% Then
        VLSsn = Trim$(str$(VGSqlConn))
    End If
    If Len(Trim$(VLSsn)) > 6 Then
        VLSsn = Right$(Trim$(VLSsn), 6)
    Else
        VLSsn = String(6 - Len(Trim$(VLSsn)), "0") + Trim$(VLSsn)
    End If
    
    'msilvag Inicio
    If Len(Me.Ref.Text) > 12 Then
        MsgBox "Codigo de Suministro excede al formato establecido", vbCritical + vbOKOnly, "ATX"
        Exit Function
    End If
    'msilvag Fin
    
    Consulta_parametro_OSB
    
    PMInicioTransaccion
    vsfecha_trx = Format$(Date, "yyyy-mm-dd") + "T" + Format(Time(), "hh:mm:ss")
    vsHoraLocal = Format$(Time(), "hhmmss")
    
    'Enviar parametros
    PMPasoValoresATX VGSqlConn, "@i_canal", 0, SQLVARCHAR, "VEN", "Canal", ""
    PMPasoValoresATX VGSqlConn, "@s_ofi", 0, SQLVARCHAR, CStr(VGOficina%), "Oficina", ""
    PMPasoValoresATX VGSqlConn, "@s_term", 0, SQLVARCHAR, VGterminal$, "Terminal", ""
    PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4&, "3137", "Trn", ""
    PMPasoValoresATX VGSqlConn, "@s_user", 0, SQLVARCHAR, VGLogin$, "User", ""
    PMPasoValoresATX VGSqlConn, "@i_aplcobis", 0, SQLCHAR, "S", "aplcobis", ""
    PMPasoValoresATX VGSqlConn, "@i_autoriza", 0, SQLVARCHAR, "N", "Autoriza", ""
    PMPasoValoresATX VGSqlConn, "@i_cant_chq", 0, SQLINT4, val(CantChq.Text), "Cant_chq", ""
    PMPasoValoresATX VGSqlConn, "@i_chq_com", 0, SQLMONEY, (VLChq_com), "Com. Cheques", ""
    PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLMONEY, Debito.Text, "Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_deb_com", 0, SQLMONEY, (VLDeb_com), "Com. Debito", ""
    PMPasoValoresATX VGSqlConn, "@i_efe", 0, SQLMONEY, (efe.Text), "Efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_efe_com", 0, SQLMONEY, (VLEfe_com), "Com. efectivo", ""
    PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, Trim$(Me.Empresa.Text), "Empresa", ""
    PMPasoValoresATX VGSqlConn, "@i_opcion", 0, SQLVARCHAR, IIf(Proceso.Text <> "", Proceso.Text, "T"), "Opcion", ""
    PMPasoValoresATX VGSqlConn, "@i_mon", 0, SQLINT1, str(FMObtenerMonedaForma("51")), "Moneda", ""
    'msilvag Inicio RECM-311 RECMPS-373
    If Me.Empresa.Text = "361" Then
        PMPasoValoresATX VGSqlConn, "@i_tiporef", 0, SQLVARCHAR, IIf(Proceso.Text <> "", Mid(sal_proc, 1, 10), "contrato"), "Tiporef", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tiporef", 0, SQLVARCHAR, "TRB", "Tiporef", ""
    End If
    'msilvag Fin
    PMPasoValoresATX VGSqlConn, "@i_valch", 0, SQLMONEY, Loc.Text, "Valch", ""
    
    If Me.Cta.ClipText <> "" Then 'ref 13
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, Cta.ClipText, "Cta", ""
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, CboTipCta.Text, "CboTipCta", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_tipocta", 0, SQLCHAR, (VLTipCta_com), "CboTipCta", ""
        PMPasoValoresATX VGSqlConn, "@i_cuenta", 0, SQLVARCHAR, (VLCta_com), "Cta", ""
    End If

    
    
    PMPasoValoresATX VGSqlConn, "@i_codigo", 0, SQLVARCHAR, Trim$(Ref.Text), "Codigo", ""
        
    'msilvag Inicio RECM-311 RECMPS-373 Interagua TRB
    If Me.Empresa.Text = "361" Then
        PMPasoValoresATX VGSqlConn, "@i_rubroperson", 0, SQLVARCHAR, "INAG", "Rubro", ""
    Else
        PMPasoValoresATX VGSqlConn, "@i_rubroperson", 0, SQLVARCHAR, "ITRB", "Rubro", ""
    End If
    'msilvag fin
    PMPasoValoresATX VGSqlConn, "@i_serviperson", 0, SQLVARCHAR, "CSBA", "Servicio", ""
    PMPasoValoresATX VGSqlConn, "@i_proceso", 0, SQLVARCHAR, (Proceso.Text), "Proceso", ""
    PMPasoValoresATX VGSqlConn, "@i_reten", 0, SQLMONEY, Reten.Text, "Reten", ""
    PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLMONEY, Me.Comision.Text, "Comision", ""
    If VGTipoEjecucion% <> CGReverso% Then
        PMPasoValoresATX VGSqlConn, "@t_corr", 0, SQLVARCHAR, "N", "@t_corr", ""
    End If
    'Para recuperar en reverso inicio
    PMPasoValoresATX VGSqlConn, "@i_servname", 0, SQLVARCHAR, (lblservicio), "NomServ", ""
    PMPasoValoresATX VGSqlConn, "@i_empname", 0, SQLVARCHAR, (Sal_Emp), "NomEmp", ""
    PMPasoValoresATX VGSqlConn, "@i_val", 0, SQLMONEY, (Pago_Val.Text), "Total pagado", ""
    PMPasoValoresATX VGSqlConn, "@i_subtotal", 0, SQLMONEY, (valor.Text), "Subtotal", ""
    PMPasoValoresATX VGSqlConn, "@i_totapag", 0, SQLMONEY, (Total.Text), "Total", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre_cta", 0, SQLVARCHAR, NomCta.Text, "Nombre cuenta", ""
    PMPasoValoresATX VGSqlConn, "@i_servicio", 0, SQLVARCHAR, Trim(Servicio.Text), "", ""
    PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, Nombre.Text, "Nombre", ""
    'Para recuperar en reverso fin
    PMPasoValoresATX VGSqlConn, "@s_org", 0, SQLVARCHAR, "D", "Origen", ""
    PMPasoValoresATX VGSqlConn, "@s_srv", 0, SQLCHAR&, "BOLIVSRV", "Srv", "" '--
    PMPasoValoresATX VGSqlConn, "@s_lsrv", 0, SQLCHAR&, "BOLIVSRV", "Localsrv", "" '--
    PMPasoValoresATX VGSqlConn, "@s_sesn", 0, SQLCHAR&, "0", "Sesion", "" '--
    PMPasoValoresATX VGSqlConn, "@s_sev", 0, SQLCHAR&, "0", "Severidad", "" '--
    'Fin parametros
    
    If VLEfe_com > 0 And VLChq_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 And VLDeb_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00") & "_" & "DEB;" & Format(VLDeb_com, "#0.00")
    ElseIf VLDeb_com > 0 And VLChq_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00") & "_" & "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLEfe_com > 0 Then
        VGFormaPago = "EFE;" & Format(VLEfe_com, "#0.00")
    ElseIf VLChq_com > 0 Then
        VGFormaPago = "CHE;" & Format(VLChq_com, "#0.00")
    ElseIf VLDeb_com > 0 Then
        VGFormaPago = "DEB;" & Format(VLDeb_com, "#0.00")
    End If
    
            'msilvag Inicio RECMPS-373 Interagua TRB
'    If Me.Empresa.Text = "8269" Then
'        PMPasoValoresATX VGSqlConn, "@o_horario", 1, SQLCHAR, "X", "Horario", ""
'    End If
    'msilvag Fin
    If FMTransmitirRPCATX(VGSqlConn, vl_servidor_BUS, "cob_pagos", "sp_tr_pago_agua_rc", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
        FLTransmitir_Interagua_pago = True
        VTResult% = FMMapeaMatrizATX(VGSqlConn&, MatrizCnel())
        VLTsnTemporal = VGTSN%
        PMChequeaATX VGSqlConn
        PMTotalesBranch "51"
        VLCambio% = False
        'Recuperar valores que se devuelven al transmitir el pago
        If VGTipoEjecucion% <> CGReverso% Then
            VLFechaCorte = FLBuscarItem2("@o_fechacontable")
            VLHorario = FLBuscarItem2("@o_horario")
            SGSecTrn$ = FLBuscarItem2("@o_ssn")
            VlbaseImp = CCur(FLBuscarItem2("@o_baseimponible"))
            vdImpuesto = FLBuscarItem2("@o_impuesto")
            
            VLComisionMD = FLBuscarItem2("@o_costo")
            VlbaseImp = FLBuscarItem2("@o_baseimponible")
            VLiva = FLBuscarItem2("@o_impuesto")
            
        End If

        VLValor = valor.Text - (Pago_Val.Text - VLTotCom)
        
        If VGTipoEjecucion% = CGReverso% Then
           VLValor = valor.Text - (Pago_Val.Text)
           VLDpPValorPendienteCobro = VLValor

           VGTipoEjecucion% = CGNormal%
           Call Proceso_LostFocus
           VGTipoEjecucion% = CGReverso%
        End If
        
        If VLconexion <> "F" Then
            VTIndicadorSum = 1
            PMIniciaRegSum
        End If
        If VLconexion <> "F" Then
            PMChequeaATX VGSqlConn
            PMTotalesBranch "51"
            FLTransmitir_Interagua_pago = True
            VLCambio% = False
        End If
    Else
        VLCambio% = True
        VLFechaCorte = ""
        FLTransmitir_Interagua_pago = False

        PMChequeaATX VGSqlConn
    End If
    
    PMChequeaATX VGSqlConn
    If FMRetStatusATX(VGSqlConn) <> 0 Then
        FLTransmitir_Interagua_pago = False
        VLCambio% = True
        VTIndicadorSum = 0
        If Ref.Enabled Then
            Ref.SetFocus
        End If
    End If
    PMFinTransaccion
    If FLTransmitir_Interagua_pago = True Then
      'JPM Lectora de Billetes -->
      If CCur(efe.Text) > 0 And ((VGDatPersBillAltDen.dataOK And VGTipoEjecucion = CGNormal%) Or VGTipoEjecucion = CGReverso%) Then
        'Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3212", "3137"), rptBAD, CboTipCta.Text, Cta.ClipText)
        Call PMGuardarDsglsBillete("51", SGSecTrn$, IIf(VGHorarioDif, "3212", "3137"), rptBAD, "REC", "")
        lectoraBill.Limpiar
      End If
      '<-- JPM Lectora de Billetes
      Call PLFactura
    End If
    
    If Not VGHorarioDif Then
        'msilvag Inicio RECM-311 RECMPS-373 Interagua TRB
        If Me.Empresa.Text = "8269" Then
            VLTrn = "3925"
        Else
        'msilvag Fin
            VLTrn = "3137"
        End If
    Else
        'msilvag Inicio RECM-311 RECMPS-373 Interagua TRB
        If Me.Empresa.Text = "8269" Then
            VLTrn = "3927"
        Else
        'msilvag fin
            VLTrn = "3212"
        End If
    End If

    If VGTipoEjecucion% <> CGReverso% Then
        If (VTIndicadorSum = 1 And (Trim$(VGStatusCon) = "A" Or Trim$(VGStatusCon) = "")) Then
            SGPrimeraVez = 0     ' ya no es primera vez
            PMGrabaDesglose VLTrn, SGUsar, VLCambio%
            If VLCambio% = True Then
                MsgBox "Error en la Grabacion del Desglose. Favor comuniquese con su Supervisor.", vbCritical, "Error de Sistema"
            End If
            SGActual = 1  'seteo Variable para borrar desglose
        ElseIf VTIndicadorSum = 0 Then
            SGActual = 0  'no borrar desglose en caso de Error en Transaccion
        End If
    ElseIf VTIndicadorSum = 1 Then 'Por REVERSO
        VLTsnTemp = VGTSN
        'PMEgresoEfectivo Efe.ValueReal, VLTrn
        PMEgresoEfectivo SGUsar, VLTrn
    End If
    If SGAcumulado < 0 Then
        VLDescargar = 1
    End If
End Function

Sub ImprimeComprobanteINTERAGUA()
   'ariofria Inicio
   VGparformato$ = "01"
   If Not FMFormatPagina(VGparformato$, VGparlong$, VGpartop$, VGparleft$, VGparrig$) Then
      VGparlong$ = "66"
      VGpartop$ = "04"
      VGparleft$ = "20"
      VGparrig$ = "00"
   End If

   If VGHorarioDif = True Then
        VLTrn = "3137" 'Colocar el Trn correcto para este servicio para HD
   Else
        VLTrn = "3137" 'Colocar el Trn correcto para este servicio para HN
   End If
   
'   PMSetDetalle "v" + CStr(VGTSN%) + " " + Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$) + " " + CStr(VGOficina%) + " " + CStr(FMObtenerMonedaForma("141")) + " " + VGLogin$
'   PMSetDetalle "v" + "BCO. BOLIVARIANO SEC.:" + Trim(Format(VGFechaProceso, "yyyymmdd") & SGSecTrn)
'   PMSetDetalle "v" + VGMensImpr + FmObtenermodo() + " " + VLTrn + " AGUA POTABLE " + IIf(VLHorario = "D", "H:D", "H:N")
   PMSetDetalle "v" + "Este pago será procesado el " + VLFechaCorte
   PMSetDetalle "v" + "Empresa: " + FMEspaciosATX(Trim(Empresa.Text) + " " + Mid(Trim(Me.Sal_Emp.Caption), 1, 24), 28, CGJustificacionIzquierda)
   PMSetDetalle "v" + "Codigo: " + Trim(Ref) + " " + IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
   PMSetDetalle "v" + "Nombre: " + Mid(Nombre, 1, 25)
   'PMSetDetalle "v" + "Valor a Pagar: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(Valor.Text, VGFormatoMoney), 12, CGJustificacionDerecha)
   ef$ = ""
   If FMCCurATX((efe.Text)) > 0 Then
      ef$ = "EFE.: " + FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha) + " "
   End If
   Chq$ = ""
   If FMCCurATX((Loc.Text)) > 0 Then
      Chq$ = "CHQ.: " + FMEspaciosATX("(" + Trim(CantChq) + ")", 4, CGJustificacionIzquierda) + FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
   End If
   If ef$ <> "" Or Chq$ <> "" Then
      PMSetDetalle "v" + ef$ + Chq$
   End If
   If FMCCurATX((Debito.Text)) > 0 Then
      PMSetDetalle "v" + "DEB.: " + FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha) + "  CTA.: " + Format(Cta.ClipText, "000-000000-0")
   End If
   
   VLNeto = FMCCurATX(Pago_Val.Text)
   PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha) _
    + IIf(VGTipoEjecucion% = CGReverso%, "  SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda), "")
   '--ref14 vmirandt comentado
   'If VGTipoEjecucion% = CGReverso% Then   'Validacion por REVERSO
   '     PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
   '--ref14 vmirandt comentado fin
   'Else
        'PMSetDetalle "v" + "SDO A LA FECHA : " + FMEspaciosATX(FMObtenerSimbolo("51") + Format(FMCCurATX((valor.Text)) - ((FMCCurATX(Pago_Val.Text) - FMCCurATX(Comision.Text))), VGFormatoMoney), 13, CGJustificacionIzquierda)
   'End If
  '***ref14 vmirandt inicio
  If VLclave_acceso <> "" Then
     PMSetDetalle "v" + "Clave de Acceso/Autorizacion: "
     PMSetDetalle "v" + VLclave_acceso '***ref14 vmirandt
  End If
     VGparleft$ = "10"
     VGpartop$ = "00"
   '***ref14 vmirandt fin
   VLTsnTemp% = VGTSN%
   FMPRN_StdImpresion "IMPRESORA_1", False, CStr(VLTsnTemp%), "51", SGDatosDetalle, "Inserte papeleta", CStr(VGpartop$), 4, CStr(VGparleft$), , VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, , Trim$(str$(FMObtenerMonedaForma("51"))), , VLVerde
End Sub

'<Ref 20
Sub CargaInfoCV(Nemonico As String)
    Dim VLVerif As Double
    If (VGCVValParmsCV(1) <> "") Then
        VLVerde = "S"
        VLcodCT = VGCVValParmsCV(0)
        VLcodTransaccion = VGCVValParmsCV(1)
        UUID = VGCVValParmsCV(2)
        VLcvfactura = VGCVValParmsCV(14)
        VLtpdnidep = VGCVValParmsCV(16)
        VLdnidep = VGCVValParmsCV(17)
        VLnomdep = VGCVValParmsCV(18)
        VLMail = VGCVValParmsCV(19)
        
        VLTpTrans = Nemonico

        Servicio.Text = CInt(VGCVValParmsCV(4))
        Servicio.SetFocus
        SendKeys "{tab}"
        DoEvents
        

        Empresa.Text = CInt(VGCVValParmsCV(5))
        Empresa.SetFocus
        SendKeys "{tab}"
        DoEvents
        
               
        Servicio.Enabled = False
        Empresa.Enabled = False
    End If
End Sub

'4-jun-2021: carga información adicional caja verde
Sub CargaInfoadiCV()
    If VGCVValParmsCV(6) <> "" Then
        Proceso.Text = VGCVValParmsCV(6)
    Else
        Proceso.Text = VGCVValParmsCV(7)
    End If
    
    Select Case VGCVValParmsCV(4)
            Case "1"
                SendKeys "{tab}"
            Case "2"
                Select Case Proceso.Text
                    Case "C"
                        sal_proc.Caption = "CUPON"
                    Case "F"
                        sal_proc.Caption = "FACTURA"
                    Case "T"
                        sal_proc.Caption = "CONTRATO"
                End Select
            'Case "3"
                'Call Proceso_KeyDown(CGTeclaAVPAG%, 0)
        End Select
    
    
    If serpac.Visible = True Then
        serpac.Text = VGCVValParmsCV(7)
        SendKeys "{tab}"
        DoEvents
    End If
              
    If Ref.Visible = True Then
        Ref.Text = VGCVValParmsCV(9)
        Ref.SetFocus
        SendKeys "{F5}"
    End If
End Sub

'4-jun-2021: carga informacion adicional caja verde
Sub CargaInfoadi2CV()
    If efe.Enabled = True And VlEjecInfoCVv = False Then
        efe.Text = Format$(VGCVValParmsCV(10), "####,###,##0.00")
        VLVerif = CDbl(efe.Text)
        
        'carga cheques
            If Trim(VGCVValParmsCV(11)) = "0" Then
                CantChq.Text = ""
            Else
                CantChq.Text = VGCVValParmsCV(11)
            End If
      
        Loc.Text = Format$(VGCVValParmsCV(12), "####,###,##0.00")
        
        SGUsar = -1
            If SGActivaSum = True Then
                Exit Sub
            End If
            If VGDecimales$ = "S" And (FMObtenerDecimales(VGmoneda%) > 0) Then
                efe.Text = str(FMCCurATX((efe.Text)) / FMObtenerFactorDecimal(VGmoneda%))
            End If

            If CCur(efe.Text) <> SGUsar And VGTipoConsAutom% = 0 Then
                FSumIng.abrirAltaDenominacion = True
                PMIngresoEfectivo
                efe.Text = Format$(CCur(VLVerif), "####,###,##0.00")
                SGActual = 0
            End If
            
            'Sumadora ------>
            While CCur(VLVerif) <> SGUsar
                MsgBox "El Monto Efetivo No Coincide con el Monto Desglosado para el Deposito. Verificar", vbCritical, "Mensaje del Sistema"
                efe.Text = Format$(CCur(VLVerif), "####,###,##0.00")
                FSumIng.abrirAltaDenominacion = True
                PMIngresoEfectivo
                SGActual = 0
            Wend
            SGActivaSum = False

            
        Pago_Val.Text = Format$(VGCVValParmsCV(15), "####,###,##0.00")
        
        'abrir form de comision
        Comision.SetFocus
        SendKeys "{F5}"
        
        ' se inhabilitan campos
        Proceso.Enabled = False
        serpac.Enabled = False
        Ref.Enabled = False
        efe.Enabled = False
        CantChq.Enabled = False
        Loc.Enabled = False
        Pago_Val.Enabled = False
        
        'se inhabilitan campos que no pertenecen a CV
        CboTipCta.Enabled = False
        Cta.Enabled = False
        NomCta.Enabled = False
        Debito.Enabled = False
    End If
    VlEjecInfoCVv = True
    ' se inhabilitan campos
    Proceso.Enabled = False
    serpac.Enabled = False
    Ref.Enabled = False
    efe.Enabled = False
    CantChq.Enabled = False
    Loc.Enabled = False
    Pago_Val.Enabled = False
        
    'se inhabilitan campos que no pertenecen a CV
    CboTipCta.Enabled = False
    Cta.Enabled = False
    NomCta.Enabled = False
    Debito.Enabled = False
End Sub

Sub CVImprimeComprobanteCNT_MIG()
    Dim strtpcodserv As String
    Dim strtpservicio As String
    Dim strobtsm As String
    Dim strperfact As String
   
    'DIRECCION DE CNT
    Dim VLarreglo(30) As String
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "DIRCNT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLEmpDir = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLEmpDir = ""
    End If
    PMChequea VGSqlConn&
    
    'RUC
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "REPCNT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLRucCNEL = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLRucCNEL = ""
    End If
    PMChequea VGSqlConn&
    
    
    If Trim(Proceso.Text) = "3" Then
     'CATEGORIA DEL SERVICIO CNT
        PMChequea VGSqlConn&
        PMPasoValores VGSqlConn&, "@i_tabla", 0, SQLVARCHAR, "sv_categorias_servicios_cnt"
        PMPasoValores VGSqlConn&, "@i_tipo", 0, SQLCHAR, "V"
        PMPasoValores VGSqlConn&, "@i_codigo", 0, SQLVARCHAR, CInt(VLcategoria)
        If FMTransmitirRPC(VGSqlConn&, ServerName$, "cobis", "sp_hp_catalogo", True, "") Then
            PMMapeaVariableATX VGSqlConn&, VTDetalles$
            PMChequea VGSqlConn&
            VL_Nombre_Catg = VTDetalles$
            PMChequea VGSqlConn&
        Else
            VLCanalEcut = ""
            PMChequea VGSqlConn&
        End If
    
    End If

   If Trim(VLFechaEmiCNT) <> "" Then
    VLFechaEmiCNT = Format(VGFechaProceso, "dd-mm-yyyy")
   End If
   
   If Trim(Proceso.Text) = "3" Then
    strtpcodserv = "Telefono: " + Trim(Ref) + " " + "Area: " + Trim(Me.serpac.Text)
   Else
    strtpcodserv = "Celular: " + Trim(Ref)
   End If

   If Trim(VL_Nombre_Catg) <> "" Then
    VLcategoria = CInt(VLcategoria)
   End If
   
   If Trim(Proceso.Text) = "3" Then
    strtpservicio = "Tipo de Servicio: " + "3 TELEFONIA FIJA"
   Else
    strtpservicio = "Tipo de Servicio: " + "5482 MOVIL POSTPAGO"
   End If
   
   'strobtsm = FMObtenerSimbolo("51")
   strobtsm = ""
   If Trim(vl_fecha_validez) <> "" And Trim(VLFechaVenc) <> "" Then
    strperfact = "MES FACTURACION: " + vl_fecha_validez + " " + "FEC. VENC: " + VLFechaVenc
   End If
      
   VLfnCV = "01"
   'se llena arreglo
   Erase CVcomprobantes
   ReDim CVcomprobantes(39)
   CVcomprobantes(0) = "62677"
   CVcomprobantes(1) = CStr(VGTSN%)
   CVcomprobantes(2) = Format(VGFechaProceso, VGFormatoFecha$) + " " + Format(Now, VGFormatoHora$)
   CVcomprobantes(3) = CStr(VGOficina%)
   CVcomprobantes(4) = CStr(FMObtenerMonedaForma("141"))
   CVcomprobantes(5) = VGLogin$
   CVcomprobantes(6) = "BCO. BOLIVARIANO"
   CVcomprobantes(7) = Trim(Format(VGFechaProceso, "yyyymmdd") & SGSecTrn)
   CVcomprobantes(8) = VGMensImpr + FmObtenermodo() + " " + VLTrn
   CVcomprobantes(9) = "TELEFONO"
   CVcomprobantes(10) = IIf(VLHorario = "D", "H:D", "H:N")
   CVcomprobantes(11) = VLFechaCorte
   CVcomprobantes(12) = Trim(Empresa.Text)
   CVcomprobantes(13) = Mid(Trim(Me.Sal_Emp.Caption), 1, 24)
   CVcomprobantes(14) = VLEmpDir
   CVcomprobantes(15) = VLRucCNEL
   CVcomprobantes(16) = VLFacturaCNT
   CVcomprobantes(17) = VLFechaEmiCNT
   CVcomprobantes(18) = strtpcodserv
   CVcomprobantes(19) = Mid(Nombre, 1, 25)
   CVcomprobantes(20) = CStr(VLcategoria)
   CVcomprobantes(21) = VL_Nombre_Catg
   CVcomprobantes(22) = CStr(Vl_Mes_Impago)
   CVcomprobantes(23) = strtpservicio
   VLNeto = FMCCurATX(valor.Text)
   CVcomprobantes(24) = strobtsm + Format(VLNeto, VGFormatoMoney)
   CVcomprobantes(25) = Format(efe, VGFormatoMoney)
   CVcomprobantes(26) = Format(Debito, VGFormatoMoney)
   CVcomprobantes(27) = Format(Cta.ClipText, "000-000000-0")
   CVcomprobantes(28) = Trim(CantChq)
   CVcomprobantes(29) = Format(Loc, VGFormatoMoney)
   CVcomprobantes(30) = strobtsm + Format(Pago_Val, VGFormatoMoney)
   CVcomprobantes(31) = strperfact
   If VGTipoEjecucion% = CGReverso% Then
      VLNeto = valor.Text
   Else
      VLNeto = valor.Text - Me.Pago_Val.Text
   End If
   CVcomprobantes(32) = FMEspaciosATX("USD. " + Format(FMCCurATX(VLNeto), VGFormatoMoney), 12, CGJustificacionDerecha)
   CVcomprobantes(33) = VLclave_acceso
   CVcomprobantes(34) = VLcodTransaccion
   CVcomprobantes(35) = VLcodCT
   CVcomprobantes(36) = VLMail
   CVcomprobantes(37) = VLTpTrans
   CVcomprobantes(38) = SGSecTrn
            
End Sub

Sub CVImprimeComprobanteEtapa()
    If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   'llena parámetros de cabecera
   GeneraCabCV CStr(VLTsnTemp%), "51", "", VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, Trim$(str$(FMObtenerMonedaForma("51"))), ""
    
   Dim strtpservicio As String
   Dim strtpcodserv As String
   If VGTipoEjecucion = CGReverso Then
        strtpservicio = Trim(VLDescripServicio) + " " + "Autorizacion: " + (Trim(VLNumTransaccion)) 'ref14 vmirandt
        If (Trim(VLCodDocEtapaReverso)) = "null" Then
            VLCodDocEtapaReverso = "0"
        End If
        strtpcodserv = Trim(Ref) + " " + " Doc. ETAPA:: " + (Trim(VLCodDocEtapaReverso)) '(Trim(VLCodDocEtapa))
   Else
        strtpservicio = Trim(VLDescripServicio)
        strtpcodserv = Trim(Ref) + " " + " Transaccion: " + (Trim(VLNumTransaccion))
   End If
   
   Dim strobtsm As String
   'strobtsm = FMObtenerSimbolo("51")
   strobtsm = ""
   
   VLfnCV = "02"
   'se llena arreglo
   Erase CVcomprobantes
   ReDim CVcomprobantes(31)
   CVcomprobantes(0) = "62677"
   CVcomprobantes(1) = VLcabCV(0)
   CVcomprobantes(2) = VLcabCV(1) + " " + VLcabCV(2)
   CVcomprobantes(3) = VLcabCV(3)
   CVcomprobantes(4) = VLcabCV(4)
   CVcomprobantes(5) = VLcabCV(5)
   CVcomprobantes(6) = VLcabCV(6)
   CVcomprobantes(7) = VLcabCV(7)
   CVcomprobantes(8) = VLcabCV(8) + " " + VLcabCV(9)
   CVcomprobantes(9) = VLcabCV(10)
   CVcomprobantes(10) = VLcabCV(11)
   CVcomprobantes(11) = VLFechaCorte
   CVcomprobantes(12) = Trim(Empresa1)
   CVcomprobantes(13) = Mid(Trim(Sal_Emp.Caption), 1, 24)
   CVcomprobantes(14) = strtpservicio
   CVcomprobantes(15) = strtpcodserv
   CVcomprobantes(16) = Mid(Nombre, 1, 25)
   CVcomprobantes(17) = FMEspaciosATX(strobtsm + Format(Me.Total.Text, VGFormatoMoney), 12, CGJustificacionDerecha) '+ Coms
   CVcomprobantes(18) = Format(efe, VGFormatoMoney)
   CVcomprobantes(19) = Format(Debito, VGFormatoMoney)
   CVcomprobantes(20) = Format(Cta.ClipText, "000-000000-0")
   CVcomprobantes(21) = Trim(CantChq)
   CVcomprobantes(22) = Format(Loc, VGFormatoMoney)
   CVcomprobantes(23) = FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha)
   VLNeto = FMCCurATX(Pago_Val.Text)
   CVcomprobantes(24) = FMEspaciosATX(strobtsm + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha)
   CVcomprobantes(25) = VLclave_acceso
   CVcomprobantes(26) = VLcodTransaccion
   CVcomprobantes(27) = VLcodCT
   CVcomprobantes(28) = VLMail
   CVcomprobantes(29) = VLTpTrans
   CVcomprobantes(30) = VLcabCV(12)
     
End Sub

Sub CVImprimeComprobanteCNEL()
    If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If
   'llena parámetros de cabecera
   GeneraCabCV CStr(VLTsnTemp%), "51", "", VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, Trim$(str$(FMObtenerMonedaForma("51"))), ""
   Dim strtpservicio As String
   Dim strtpcodserv As String
   strtpservicio = Mid(Trim(Me.sal_proc.Caption), 1, 24)
   strtpcodserv = FMEspaciosATX(Trim(Ref), 10, CGJustificacionIzquierda)
   
   VLfnCV = "03"
   'se llena arreglo
   Erase CVcomprobantes
   ReDim CVcomprobantes(32)
   CVcomprobantes(0) = "62677"
   CVcomprobantes(1) = VLcabCV(0)
   CVcomprobantes(2) = VLcabCV(1) + " " + VLcabCV(2)
   CVcomprobantes(3) = VLcabCV(3)
   CVcomprobantes(4) = VLcabCV(4)
   CVcomprobantes(5) = VLcabCV(5)
   CVcomprobantes(6) = VLcabCV(6)
   CVcomprobantes(7) = VLcabCV(7)
   CVcomprobantes(8) = VLcabCV(8) + " " + VLcabCV(9)
   CVcomprobantes(9) = VLcabCV(10)
   CVcomprobantes(10) = VLcabCV(11)
   CVcomprobantes(11) = VLFechaCorte
   CVcomprobantes(12) = Trim(Empresa.Text)
   CVcomprobantes(13) = Mid(Trim(Sal_Emp.Caption), 1, 24)
   CVcomprobantes(14) = strtpservicio
   CVcomprobantes(15) = strtpcodserv
   CVcomprobantes(16) = Mid(Nombre, 1, 25) + " CED/RUC:" + FMEspaciosATX(VLCedula, 13, CGJustificacionIzquierda)
   CVcomprobantes(17) = FMEspaciosATX("USD. " + Format(valor, VGFormatoMoney), 12, CGJustificacionDerecha) + " " + " No.AUT.:" + FMEspaciosATX(VLo_pautorizacion, 13, CGJustificacionIzquierda)
   CVcomprobantes(18) = "USD. " + Format(efe, VGFormatoMoney)
   CVcomprobantes(19) = "USD. " + Format(Debito, VGFormatoMoney)
   CVcomprobantes(20) = Format(Cta.ClipText, "000-000000-0")
   CVcomprobantes(21) = Trim(CantChq)
   CVcomprobantes(22) = Format(Loc, VGFormatoMoney)
   VLNeto = FMCCurATX(Pago_Val.Text)
   If VGTipoEjecucion% = CGReverso% And vl_servidor_BUS <> "PSSRV1" Then
        CVcomprobantes(23) = FMEspaciosATX("USD. " + Format((VLNeto), VGFormatoMoney), 12, CGJustificacionDerecha)
   Else
        'PMSetDetalle "v" + "TOTAL: " + FMEspaciosATX("USD. " + Format((VLNeto - VLTotCom), VGFormatoMoney), 12, CGJustificacionDerecha)
        CVcomprobantes(23) = FMEspaciosATX("USD. " + Format((VLNeto - VLTotCom), VGFormatoMoney), 12, CGJustificacionDerecha)
   End If
   
   CVcomprobantes(24) = FMEspaciosATX("USD. " + Format(FMCCurATX(VLDpPValorPendienteCobro), VGFormatoMoney), 12, CGJustificacionDerecha)
   CVcomprobantes(25) = VLclave_acceso
   CVcomprobantes(26) = VLcodTransaccion
   CVcomprobantes(27) = VLcodCT
   CVcomprobantes(28) = VLMail
   CVcomprobantes(29) = VLTpTrans
   CVcomprobantes(30) = VLcabCV(12)
   CVcomprobantes(31) = VLRucCNEL
End Sub

Sub CVImprimeComprobanteCNTMOVIL_MG()
    Dim strobtsm As String
    'strobtsm = FMObtenerSimbolo("51")
    strobtsm = ""
    VLTsnTemp% = VGTSN%
    'llena parámetros de cabecera
    GeneraCabCV CStr(VLTsnTemp%), "51", "", VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, Trim$(str$(FMObtenerMonedaForma("51"))), ""

    'DIRECCION DE CNT
    Dim VLarreglo(30) As String
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "DIRCNT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLEmpDir = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLEmpDir = ""
    End If
    PMChequea VGSqlConn&
    
    'RUC
    PMChequea VGSqlConn&
    PMPasoValores VGSqlConn, "@t_trn", 0, SQLINT2, 1579
    PMPasoValores VGSqlConn&, "@i_operacion", 0, SQLVARCHAR, "Q"
    PMPasoValores VGSqlConn&, "@i_nemonico", 0, SQLVARCHAR, "REPCNT"
    PMPasoValores VGSqlConn&, "@i_producto", 0, SQLVARCHAR, "CTE"
    If FMTransmitirRPC(VGSqlConn, VGServerNameRec$, "cobis", "sp_parametro", True, "Transaccion Ok") = True Then
      VTR1% = FMMapeaArreglo(VGSqlConn&, VLarreglo())
      VLRucCNEL = LTrim(RTrim(Trim(VLarreglo(4))))
    Else
      VLRucCNEL = ""
    End If
    PMChequea VGSqlConn&
    
    VLfnCV = "04"
    'se llena arreglo
    Erase CVcomprobantes
    ReDim CVcomprobantes(34)
    CVcomprobantes(0) = "62677"
    CVcomprobantes(1) = VLcabCV(0)
    CVcomprobantes(2) = VLcabCV(1) + " " + VLcabCV(2)
    CVcomprobantes(3) = VLcabCV(3)
    CVcomprobantes(4) = VLcabCV(4)
    CVcomprobantes(5) = VLcabCV(5)
    CVcomprobantes(6) = VLcabCV(6)
    CVcomprobantes(7) = VLcabCV(7)
    CVcomprobantes(8) = VLcabCV(8) + " " + VLcabCV(9)
    CVcomprobantes(9) = VLcabCV(10)
    CVcomprobantes(10) = VLcabCV(11)
    CVcomprobantes(11) = VLFechaCorte
    CVcomprobantes(12) = Trim(Empresa.Text)
    CVcomprobantes(13) = Mid(Trim(Me.Sal_Emp.Caption), 1, 24)
    CVcomprobantes(14) = VLEmpDir
    CVcomprobantes(15) = Trim(Ref)
    CVcomprobantes(16) = "5482 MOVIL POSTPAGO"
    CVcomprobantes(17) = Mid(Nombre, 1, 25)

    VLNeto = FMCCurATX(valor.Text)
    CVcomprobantes(18) = FMEspaciosATX(strobtsm + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha)
    CVcomprobantes(19) = FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha)
    CVcomprobantes(20) = FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha)
    CVcomprobantes(21) = Format(Cta.ClipText, "000-000000-0")
    CVcomprobantes(22) = Trim(CantChq)
    CVcomprobantes(23) = FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
   
    If VGTipoEjecucion% = CGReverso% Then
        VLNeto = valor.Text
    Else
        VLNeto = valor.Text - Me.Pago_Val.Text
    End If
    
    CVcomprobantes(24) = FMEspaciosATX(strobtsm + Format(Pago_Val, VGFormatoMoney), 12, CGJustificacionDerecha)
    CVcomprobantes(25) = FMEspaciosATX("USD. " + Format(FMCCurATX(VLNeto), VGFormatoMoney), 12, CGJustificacionDerecha)
    
    Dim strperfact As String
    strperfact = ""
    If Trim(vl_fecha_validez) <> "" And Trim(VLFechaVenc) <> "" Then
        strperfact = "MES FACTURACION: " + vl_fecha_validez + " " + "FEC. VENC: " + VLFechaVenc
    End If
    CVcomprobantes(26) = strperfact
    CVcomprobantes(27) = VLclave_acceso
    CVcomprobantes(28) = VLcodTransaccion
    CVcomprobantes(29) = VLcodCT
    CVcomprobantes(30) = VLMail
    CVcomprobantes(31) = VLTpTrans
    CVcomprobantes(32) = VLcabCV(12)
    CVcomprobantes(33) = Trim(VLRucCNEL)
End Sub

Sub CVImprimeComprobanteINTERAGUA()
   If VGHorarioDif = True Then
        VLTrn = "3137" 'Colocar el Trn correcto para este servicio para HD
   Else
        VLTrn = "3137" 'Colocar el Trn correcto para este servicio para HN
   End If
   
   VLTsnTemp% = VGTSN%
   'llena parámetros de cabecera
   GeneraCabCV CStr(VLTsnTemp%), "51", "", VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, Trim$(str$(FMObtenerMonedaForma("51"))), ""
   
   Dim strtpservicio As String
   Dim strtpcodserv As String
   Dim strobtsm As String
   Dim sldfecha As String
   'strobtsm = FMObtenerSimbolo("51")
   strobtsm = ""
   strtpservicio = IIf(Proceso.Text <> "", " Proceso: " + Mid(sal_proc, 1, 10), "")
   strtpcodserv = Trim(Ref)
   
   VLfnCV = "05"
   'se llena arreglo
   Erase CVcomprobantes
   ReDim CVcomprobantes(30)
   CVcomprobantes(0) = "62677"
   CVcomprobantes(1) = VLcabCV(0)
   CVcomprobantes(2) = VLcabCV(1) + " " + VLcabCV(2)
   CVcomprobantes(3) = VLcabCV(3)
   CVcomprobantes(4) = VLcabCV(4)
   CVcomprobantes(5) = VLcabCV(5)
   CVcomprobantes(6) = VLcabCV(6)
   CVcomprobantes(7) = VLcabCV(7)
   CVcomprobantes(8) = VLcabCV(8) + " " + VLcabCV(9)
   CVcomprobantes(9) = VLcabCV(10)
   CVcomprobantes(10) = VLcabCV(11)
   CVcomprobantes(11) = VLFechaCorte
   CVcomprobantes(12) = Trim(Empresa.Text)
   CVcomprobantes(13) = Mid(Trim(Me.Sal_Emp.Caption), 1, 24)
   CVcomprobantes(14) = strtpcodserv
   CVcomprobantes(15) = Mid(Nombre, 1, 25)
   CVcomprobantes(16) = FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha)
   CVcomprobantes(17) = FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha)
   CVcomprobantes(18) = Format(Cta.ClipText, "000-000000-0")
   CVcomprobantes(19) = Trim(CantChq)
   CVcomprobantes(20) = FMEspaciosATX(Format(Loc, VGFormatoMoney), 11, CGJustificacionDerecha)
     
   VLNeto = FMCCurATX(Pago_Val.Text)
   CVcomprobantes(21) = FMEspaciosATX(strobtsm + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha)
   If VGTipoEjecucion% = CGReverso% Then
        sldfecha = FMEspaciosATX(strobtsm + Format(FMCCurATX((valor.Text)), VGFormatoMoney), 13, CGJustificacionIzquierda)
   Else
        sldfecha = ""
   End If
   
   CVcomprobantes(22) = sldfecha
   CVcomprobantes(23) = VLclave_acceso
   CVcomprobantes(24) = VLcodTransaccion
   CVcomprobantes(25) = VLcodCT
   CVcomprobantes(26) = VLMail
   CVcomprobantes(27) = VLTpTrans
   CVcomprobantes(28) = VLcabCV(12)
   CVcomprobantes(29) = strtpservicio
End Sub

Sub CVImprimeComprobanteAMAGUA()
   Dim VLCta As String
  
   If VLTsnTemp% = 0 Then
      VLTsnTemp% = VGTSN%
   End If

   'llena parámetros de cabecera
   GeneraCabCV CStr(VLTsnTemp%), "51", "", VLEtiqTrn, IIf(VLHorario = "0", "", VLHorario), VLTrn, Trim$(str$(FMObtenerMonedaForma("51"))), ""
   
   Dim strtpservicio As String
   Dim strtpcodserv As String
   Dim strobtsm As String
   'strobtsm = FMObtenerSimbolo("51")
   strobtsm = ""
   strtpservicio = " No. Autoriz: " + txtCodPago.Text
   strtpcodserv = Trim(Ref)
   
   VLfnCV = "06"
   'se llena arreglo
   Erase CVcomprobantes
   ReDim CVcomprobantes(31)
   CVcomprobantes(0) = "62677"
   CVcomprobantes(1) = VLcabCV(0)
   CVcomprobantes(2) = VLcabCV(1) + " " + VLcabCV(2)
   CVcomprobantes(3) = VLcabCV(3)
   CVcomprobantes(4) = VLcabCV(4)
   CVcomprobantes(5) = VLcabCV(5)
   CVcomprobantes(6) = VLcabCV(6)
   CVcomprobantes(7) = VLcabCV(7)
   CVcomprobantes(8) = VLcabCV(8) + " " + VLcabCV(9)
   CVcomprobantes(9) = VLcabCV(10)
   CVcomprobantes(10) = VLcabCV(11)
   CVcomprobantes(11) = VLFechaCorte
   CVcomprobantes(12) = Trim(Empresa.Text)
   CVcomprobantes(13) = Mid(Trim(Sal_Emp.Caption), 1, 24)
   CVcomprobantes(14) = strtpcodserv
   CVcomprobantes(15) = Mid(Nombre, 1, 25)
   CVcomprobantes(16) = FMEspaciosATX(strobtsm + Format(Total_Pagar.Text, VGFormatoMoney), 12, CGJustificacionDerecha) '+ Coms
   CVcomprobantes(17) = FMEspaciosATX(Format(efe, VGFormatoMoney), 12, CGJustificacionDerecha)
   CVcomprobantes(18) = Format(Cta.ClipText, "000-000000-0")
   CVcomprobantes(19) = FMEspaciosATX(Format(Debito, VGFormatoMoney), 12, CGJustificacionDerecha)
   CVcomprobantes(20) = Trim(CantChq)
   CVcomprobantes(21) = FMEspaciosATX(Format(Loc, VGFormatoMoney), 12, CGJustificacionDerecha)

   VLNeto = FMCCurATX(Debito.Text) + FMCCurATX(efe.Text) + FMCCurATX(Loc.Text)
   CVcomprobantes(22) = FMEspaciosATX(Format(Comision, VGFormatoMoney), 6, CGJustificacionDerecha)
   CVcomprobantes(23) = FMEspaciosATX(strobtsm + Format(VLNeto, VGFormatoMoney), 12, CGJustificacionDerecha)
   CVcomprobantes(24) = VLclave_acceso
   
   CVcomprobantes(25) = VLcodTransaccion
   CVcomprobantes(26) = VLcodCT
   CVcomprobantes(27) = VLMail
   CVcomprobantes(28) = VLTpTrans
   CVcomprobantes(29) = VLcabCV(12)
   CVcomprobantes(30) = strtpservicio
End Sub



Sub GeneraCabCV(strCodigoIP As String, strNemonicoTrx As String, strVTLocalSsn As String, strEtiTrx As String, strHorario As String, TrnImpresion As String, VTMoneda As String, VTTRXPERSON As String)
'impresion de cabecera
    '1ra.Linea
    strCodigoIP = IIf(strCodigoIP = "" Or strCodigoIP = "0", "", CStr(strCodigoIP))
    strFechaActual = IIf(VGFechaProceso = "", Format(Date, VGFormatoFecha$) & Space(1), Format(VGFechaProceso, VGFormatoFecha$) & Space(1))
    strHoraActual = Format(Now, VGFormatoHora$) & Space(1)
    strOficina = IIf(CStr(VGOficina%) = "", "", CStr(VGOficina%) & Space(1))
    strMoneda = VTMoneda + " "
    strLogin = IIf(VGLogin$ = "", "", VGLogin$)
    
    '2da.Linea
    strVTLocalSsn = IIf(strVTLocalSsn = "" Or strVTLocalSsn = "0", "", "SEC.:" & strVTLocalSsn)
    
    strEmpresa = "BCO.BOLIVARIANO"
    strEmpresa = strEmpresa & Space(15 - Len(strEmpresa)) & Space(1)
    'strSecuencial = IIf(SGSecTrn = "" Or SGSecTrn = "0", "", "SEC.:" & Trim(Format(VGFechaProceso, "yyyymmdd") & SGSecTrn))
    strSecuencial = IIf(SGSecTrn = "" Or SGSecTrn = "0", "", Trim(Format(VGFechaProceso, "yyyymmdd") & SGSecTrn))
    strSecuencial = IIf(strVTLocalSsn = "", strSecuencial, strVTLocalSsn)

    '3ra.Linea
    strObtenerModo = IIf(FmObtenermodo() = "", "", FmObtenermodo() & Space(1))
    If Trim$(VTTRXPERSON) = "" Then
        strTransaccion = IIf(str(FMObtenerTrn(strNemonicoTrx)) = "" Or str(FMObtenerTrn(strNemonicoTrx)) = "0", "", Trim(str(FMObtenerTrn(strNemonicoTrx))) & Space(1))
    Else
        If (strNemonicoTrx = 19 Or strNemonicoTrx = 11 Or strNemonicoTrx = 58 Or strNemonicoTrx = 304 Or strNemonicoTrx = 305) And VTTRXPERSON <> "" Then   'ref1
           strTransaccion = Trim$(VTTRXPERSON) + Space(1)
        Else
           strTransaccion = Trim$(VTTRXPERSON)
        End If
    End If
    If strEtiTrx = "" Then
        strDesNem = IIf(FMObtenerTitulo(strNemonicoTrx) = "", "", Mid(FMObtenerTitulo(strNemonicoTrx), 1, 25))
    Else
        'ref1
        If (strNemonicoTrx <> 11 And strNemonicoTrx <> 58 And strNemonicoTrx <> 304 And strNemonicoTrx <> 305) Then
           strTransaccion = ""
        End If
        'ref1
        strDesNem = strEtiTrx
    End If
    If strTransaccion = "" Then
        strTransaccion = Mid(strDesNem, 1, (InStr(strDesNem, " ") - 1))
        strDesNem = Mid(strDesNem, (InStr(strDesNem, " ") + 1), Len(strDesNem) - (InStr(strDesNem, " ")))
      
    End If

    
    If Trim(strHorario) = "" Then
        If VGHorarioDif = True Then
            strHorDifNor = " H:D"
        Else
            strHorDifNor = " H:N"
        End If
    Else
        strHorDifNor = " H:" & UCase(Trim(strHorario))
    End If
    If TrnImpresion = "" Then
        TrnImpresion = Trim(strTransaccion)
    End If
    
    'se cambia valor de la moneda a parámetro para impresión: USD $
    strMoneda = FMObtenerSimbolo("51")
    
    Erase VLcabCV
    VLcabCV(0) = strCodigoIP
    VLcabCV(1) = strFechaActual
    VLcabCV(2) = strHoraActual
    VLcabCV(3) = strOficina
    VLcabCV(4) = strMoneda
    VLcabCV(5) = strLogin
    VLcabCV(6) = strEmpresa
    VLcabCV(7) = strSecuencial
    VLcabCV(8) = strObtenerModo
    VLcabCV(9) = strTransaccion
    VLcabCV(10) = strDesNem
    VLcabCV(11) = strHorDifNor
    VLcabCV(12) = SGSecTrn
End Sub

Sub EnviaparmCV()
    Select Case VLfnCV
        Case "01"
            'CVImprimeComprobanteCNT_MIG
            'Envío de Parametros a CAJA VERDE
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, CVcomprobantes(0), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ip", 0, SQLVARCHAR, CVcomprobantes(1), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_hora", 0, SQLVARCHAR, CVcomprobantes(2), "", ""
            PMPasoValoresATX VGSqlConn, "@i_oficina", 0, SQLVARCHAR, CVcomprobantes(3), "", ""
            PMPasoValoresATX VGSqlConn, "@i_moneda", 0, SQLVARCHAR, CVcomprobantes(4), "", ""
            PMPasoValoresATX VGSqlConn, "@i_usuario", 0, SQLVARCHAR, CVcomprobantes(5), "", ""
            PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, CVcomprobantes(6), "", ""
            PMPasoValoresATX VGSqlConn, "@i_secuencial", 0, SQLVARCHAR, CVcomprobantes(7), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cod_trx", 0, SQLVARCHAR, CVcomprobantes(8), "", ""
            PMPasoValoresATX VGSqlConn, "@i_desc_trx", 0, SQLVARCHAR, CVcomprobantes(9), "", ""
            PMPasoValoresATX VGSqlConn, "@i_horario", 0, SQLVARCHAR, CVcomprobantes(10), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_corte", 0, SQLVARCHAR, CVcomprobantes(11), "", ""
            PMPasoValoresATX VGSqlConn, "@i_num_compañia", 0, SQLVARCHAR, CVcomprobantes(12), "", ""
            PMPasoValoresATX VGSqlConn, "@i_compañia", 0, SQLVARCHAR, CVcomprobantes(13), "", ""
            PMPasoValoresATX VGSqlConn, "@i_direccion", 0, SQLVARCHAR, CVcomprobantes(14), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ruc", 0, SQLVARCHAR, CVcomprobantes(15), "", ""
            PMPasoValoresATX VGSqlConn, "@i_factura", 0, SQLVARCHAR, CVcomprobantes(16), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecemi", 0, SQLVARCHAR, CVcomprobantes(17), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tpcodserv", 0, SQLVARCHAR, CVcomprobantes(18), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, CVcomprobantes(19), "", ""
            PMPasoValoresATX VGSqlConn, "@i_num_categoria", 0, SQLVARCHAR, CVcomprobantes(20), "", ""
            PMPasoValoresATX VGSqlConn, "@i_categoria", 0, SQLVARCHAR, CVcomprobantes(21), "", ""
            PMPasoValoresATX VGSqlConn, "@i_mes_impago", 0, SQLVARCHAR, CVcomprobantes(22), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tp_servicio", 0, SQLVARCHAR, CVcomprobantes(23), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total_serv", 0, SQLVARCHAR, CVcomprobantes(24), "", ""
            PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLVARCHAR, CVcomprobantes(25), "", ""
            PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLVARCHAR, CVcomprobantes(26), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ctad", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nro_cheque", 0, SQLVARCHAR, CVcomprobantes(28), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLVARCHAR, CVcomprobantes(29), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLVARCHAR, CVcomprobantes(30), "", ""
            PMPasoValoresATX VGSqlConn, "@i_mes_fact", 0, SQLVARCHAR, CVcomprobantes(31), "", ""
            PMPasoValoresATX VGSqlConn, "@i_saldo_fec", 0, SQLVARCHAR, CVcomprobantes(32), "", ""
            PMPasoValoresATX VGSqlConn, "@i_clave_acceso", 0, SQLVARCHAR, CVcomprobantes(33), "", ""
            
            'complementarios
            PMPasoValoresATX VGSqlConn, "@i_comprobante", 0, SQLVARCHAR, CVcomprobantes(34), "", ""   '-- ojo falta definir
            PMPasoValoresATX VGSqlConn, "@i_cod_ct", 0, SQLVARCHAR, CVcomprobantes(35), "", ""
            PMPasoValoresATX VGSqlConn, "@i_mail", 0, SQLVARCHAR, CVcomprobantes(36), "", ""
            PMPasoValoresATX VGSqlConn, "@i_transaction_type", 0, SQLVARCHAR, CVcomprobantes(37), "", ""
          
            If FMTransmitirRPCATX(VGSqlConn, "CVSRV", "cob_procesador", "sp_caja_verde", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
            
            'se llama cola para actualización de valores en tabla sybase para caja verde procesada ok y codigo de la transaccion atx
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "43181", "", ""
            PMPasoValoresATX VGSqlConn, "@e_ct", 0, SQLVARCHAR, CVcomprobantes(35), "", ""
            PMPasoValoresATX VGSqlConn, "@e_nemonico", 0, SQLVARCHAR, CVcomprobantes(37), "", ""
            PMPasoValoresATX VGSqlConn, "@e_id_trx_atx", 0, SQLINT4, CVcomprobantes(38), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_started", 0, SQLVARCHAR, Format$(CStr(CDate(VGCVValParmsCV(21))), "yyyy/MM/dd HH:mm:ss"), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_processed", 0, SQLVARCHAR, Format$(CStr(Now), "yyyy/MM/dd HH:mm:ss"), "", ""
            If FMTransmitirRPCATX(VGSqlConn, "", "cob_cuentas", "pa_cv_atransaccion", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
        Case "02"
            'CVImprimeComprobanteEtapa()
            'Envío de Parametros a CAJA VERDE
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, CVcomprobantes(0), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ip", 0, SQLVARCHAR, CVcomprobantes(1), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_hora", 0, SQLVARCHAR, CVcomprobantes(2), "", ""
            PMPasoValoresATX VGSqlConn, "@i_oficina", 0, SQLVARCHAR, CVcomprobantes(3), "", ""
            PMPasoValoresATX VGSqlConn, "@i_moneda", 0, SQLVARCHAR, CVcomprobantes(4), "", ""
            PMPasoValoresATX VGSqlConn, "@i_usuario", 0, SQLVARCHAR, CVcomprobantes(5), "", ""
            PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, CVcomprobantes(6), "", ""
            PMPasoValoresATX VGSqlConn, "@i_secuencial", 0, SQLVARCHAR, CVcomprobantes(7), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cod_trx", 0, SQLVARCHAR, CVcomprobantes(8), "", ""
            PMPasoValoresATX VGSqlConn, "@i_desc_trx", 0, SQLVARCHAR, CVcomprobantes(9), "", ""
            PMPasoValoresATX VGSqlConn, "@i_horario", 0, SQLVARCHAR, CVcomprobantes(10), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_corte", 0, SQLVARCHAR, CVcomprobantes(11), "", ""
            PMPasoValoresATX VGSqlConn, "@i_num_compañia", 0, SQLVARCHAR, CVcomprobantes(12), "", ""
            PMPasoValoresATX VGSqlConn, "@i_compañia", 0, SQLVARCHAR, CVcomprobantes(13), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tp_servicio", 0, SQLVARCHAR, CVcomprobantes(14), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tpcodserv", 0, SQLVARCHAR, CVcomprobantes(15), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, CVcomprobantes(16), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total_serv", 0, SQLVARCHAR, CVcomprobantes(17), "", ""
            PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLVARCHAR, CVcomprobantes(18), "", ""
            PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLVARCHAR, CVcomprobantes(19), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ctad", 0, SQLVARCHAR, CVcomprobantes(20), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nro_cheque", 0, SQLVARCHAR, CVcomprobantes(21), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLVARCHAR, CVcomprobantes(22), "", ""
            PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLVARCHAR, CVcomprobantes(23), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLVARCHAR, CVcomprobantes(24), "", ""
            PMPasoValoresATX VGSqlConn, "@i_clave_acceso", 0, SQLVARCHAR, CVcomprobantes(25), "", ""
            
            'complementarios
            PMPasoValoresATX VGSqlConn, "@i_comprobante", 0, SQLVARCHAR, CVcomprobantes(26), "", ""   '-- ojo falta definir
            PMPasoValoresATX VGSqlConn, "@i_cod_ct", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
            PMPasoValoresATX VGSqlConn, "@i_mail", 0, SQLVARCHAR, CVcomprobantes(28), "", ""
            PMPasoValoresATX VGSqlConn, "@i_transaction_type", 0, SQLVARCHAR, CVcomprobantes(29), "", ""
          
            If FMTransmitirRPCATX(VGSqlConn, "CVSRV", "cob_procesador", "sp_caja_verde", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
                                 
            'se llama cola para actualización de valores en tabla sybase para caja verde procesada ok y codigo de la transaccion atx
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "43181", "", ""
            PMPasoValoresATX VGSqlConn, "@e_ct", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
            PMPasoValoresATX VGSqlConn, "@e_nemonico", 0, SQLVARCHAR, CVcomprobantes(29), "", ""
            PMPasoValoresATX VGSqlConn, "@e_id_trx_atx", 0, SQLINT4, CVcomprobantes(30), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_started", 0, SQLVARCHAR, Format$(CStr(CDate(VGCVValParmsCV(21))), "yyyy/MM/dd HH:mm:ss"), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_processed", 0, SQLVARCHAR, Format$(CStr(Now), "yyyy/MM/dd HH:mm:ss"), "", ""
            If FMTransmitirRPCATX(VGSqlConn, "", "cob_cuentas", "pa_cv_atransaccion", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
            
        Case "03"
            'CVImprimeComprobanteCNEL
            'Envío de Parametros a CAJA VERDE
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, CVcomprobantes(0), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ip", 0, SQLVARCHAR, CVcomprobantes(1), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_hora", 0, SQLVARCHAR, CVcomprobantes(2), "", ""
            PMPasoValoresATX VGSqlConn, "@i_oficina", 0, SQLVARCHAR, CVcomprobantes(3), "", ""
            PMPasoValoresATX VGSqlConn, "@i_moneda", 0, SQLVARCHAR, CVcomprobantes(4), "", ""
            PMPasoValoresATX VGSqlConn, "@i_usuario", 0, SQLVARCHAR, CVcomprobantes(5), "", ""
            PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, CVcomprobantes(6), "", ""
            PMPasoValoresATX VGSqlConn, "@i_secuencial", 0, SQLVARCHAR, CVcomprobantes(7), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cod_trx", 0, SQLVARCHAR, CVcomprobantes(8), "", ""
            PMPasoValoresATX VGSqlConn, "@i_desc_trx", 0, SQLVARCHAR, CVcomprobantes(9), "", ""
            PMPasoValoresATX VGSqlConn, "@i_horario", 0, SQLVARCHAR, CVcomprobantes(10), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_corte", 0, SQLVARCHAR, CVcomprobantes(11), "", ""
            PMPasoValoresATX VGSqlConn, "@i_num_compañia", 0, SQLVARCHAR, CVcomprobantes(12), "", ""
            PMPasoValoresATX VGSqlConn, "@i_compañia", 0, SQLVARCHAR, CVcomprobantes(13), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ruc", 0, SQLVARCHAR, CVcomprobantes(31), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tp_servicio", 0, SQLVARCHAR, CVcomprobantes(14), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tpcodserv", 0, SQLVARCHAR, CVcomprobantes(15), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, CVcomprobantes(16), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total_serv", 0, SQLVARCHAR, CVcomprobantes(17), "", ""
            PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLVARCHAR, CVcomprobantes(18), "", ""
            PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLVARCHAR, CVcomprobantes(19), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ctad", 0, SQLVARCHAR, CVcomprobantes(20), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nro_cheque", 0, SQLVARCHAR, CVcomprobantes(21), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLVARCHAR, CVcomprobantes(22), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLVARCHAR, CVcomprobantes(23), "", ""
            PMPasoValoresATX VGSqlConn, "@i_saldo_fec", 0, SQLVARCHAR, CVcomprobantes(24), "", ""
            PMPasoValoresATX VGSqlConn, "@i_clave_acceso", 0, SQLVARCHAR, CVcomprobantes(25), "", ""
            
            'complementarios
            PMPasoValoresATX VGSqlConn, "@i_comprobante", 0, SQLVARCHAR, CVcomprobantes(26), "", ""   '-- ojo falta definir
            PMPasoValoresATX VGSqlConn, "@i_cod_ct", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
            PMPasoValoresATX VGSqlConn, "@i_mail", 0, SQLVARCHAR, CVcomprobantes(28), "", ""
            PMPasoValoresATX VGSqlConn, "@i_transaction_type", 0, SQLVARCHAR, CVcomprobantes(29), "", ""
          
            If FMTransmitirRPCATX(VGSqlConn, "CVSRV", "cob_procesador", "sp_caja_verde", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
                        
            'se llama cola para actualización de valores en tabla sybase para caja verde procesada ok y codigo de la transaccion atx
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "43181", "", ""
            PMPasoValoresATX VGSqlConn, "@e_ct", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
            PMPasoValoresATX VGSqlConn, "@e_nemonico", 0, SQLVARCHAR, CVcomprobantes(29), "", ""
            PMPasoValoresATX VGSqlConn, "@e_id_trx_atx", 0, SQLINT4, CVcomprobantes(30), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_started", 0, SQLVARCHAR, Format$(CStr(CDate(VGCVValParmsCV(21))), "yyyy/MM/dd HH:mm:ss"), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_processed", 0, SQLVARCHAR, Format$(CStr(Now), "yyyy/MM/dd HH:mm:ss"), "", ""
            If FMTransmitirRPCATX(VGSqlConn, "", "cob_cuentas", "pa_cv_atransaccion", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
            
        Case "04"
            'CVImprimeComprobanteCNTMOVIL_MG()
            'Envío de Parametros a CAJA VERDE
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, CVcomprobantes(0), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ip", 0, SQLVARCHAR, CVcomprobantes(1), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_hora", 0, SQLVARCHAR, CVcomprobantes(2), "", ""
            PMPasoValoresATX VGSqlConn, "@i_oficina", 0, SQLVARCHAR, CVcomprobantes(3), "", ""
            PMPasoValoresATX VGSqlConn, "@i_moneda", 0, SQLVARCHAR, CVcomprobantes(4), "", ""
            PMPasoValoresATX VGSqlConn, "@i_usuario", 0, SQLVARCHAR, CVcomprobantes(5), "", ""
            PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, CVcomprobantes(6), "", ""
            PMPasoValoresATX VGSqlConn, "@i_secuencial", 0, SQLVARCHAR, CVcomprobantes(7), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cod_trx", 0, SQLVARCHAR, CVcomprobantes(8), "", ""
            PMPasoValoresATX VGSqlConn, "@i_desc_trx", 0, SQLVARCHAR, CVcomprobantes(9), "", ""
            PMPasoValoresATX VGSqlConn, "@i_horario", 0, SQLVARCHAR, CVcomprobantes(10), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_corte", 0, SQLVARCHAR, CVcomprobantes(11), "", ""
            PMPasoValoresATX VGSqlConn, "@i_num_compañia", 0, SQLVARCHAR, CVcomprobantes(12), "", ""
            PMPasoValoresATX VGSqlConn, "@i_compañia", 0, SQLVARCHAR, CVcomprobantes(13), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ruc", 0, SQLVARCHAR, CVcomprobantes(33), "", ""
            PMPasoValoresATX VGSqlConn, "@i_direccion", 0, SQLVARCHAR, CVcomprobantes(14), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tpcodserv", 0, SQLVARCHAR, CVcomprobantes(15), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tp_servicio", 0, SQLVARCHAR, CVcomprobantes(16), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, CVcomprobantes(17), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total_serv", 0, SQLVARCHAR, CVcomprobantes(18), "", ""
            PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLVARCHAR, CVcomprobantes(19), "", ""
            PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLVARCHAR, CVcomprobantes(20), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ctad", 0, SQLVARCHAR, CVcomprobantes(21), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nro_cheque", 0, SQLVARCHAR, CVcomprobantes(22), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLVARCHAR, CVcomprobantes(23), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLVARCHAR, CVcomprobantes(24), "", ""
            PMPasoValoresATX VGSqlConn, "@i_saldo_fec", 0, SQLVARCHAR, CVcomprobantes(25), "", ""
            PMPasoValoresATX VGSqlConn, "@i_mes_fec", 0, SQLVARCHAR, CVcomprobantes(26), "", ""
            PMPasoValoresATX VGSqlConn, "@i_clave_acceso", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
            
            'complementarios
            PMPasoValoresATX VGSqlConn, "@i_comprobante", 0, SQLVARCHAR, CVcomprobantes(28), "", ""   '-- ojo falta definir
            PMPasoValoresATX VGSqlConn, "@i_cod_ct", 0, SQLVARCHAR, CVcomprobantes(29), "", ""
            PMPasoValoresATX VGSqlConn, "@i_mail", 0, SQLVARCHAR, CVcomprobantes(30), "", ""
            PMPasoValoresATX VGSqlConn, "@i_transaction_type", 0, SQLVARCHAR, CVcomprobantes(31), "", ""
          
            If FMTransmitirRPCATX(VGSqlConn, "CVSRV", "cob_procesador", "sp_caja_verde", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
                            
            'se llama cola para actualización de valores en tabla sybase para caja verde procesada ok y codigo de la transaccion atx
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "43181", "", ""
            PMPasoValoresATX VGSqlConn, "@e_ct", 0, SQLVARCHAR, CVcomprobantes(29), "", ""
            PMPasoValoresATX VGSqlConn, "@e_nemonico", 0, SQLVARCHAR, CVcomprobantes(31), "", ""
            PMPasoValoresATX VGSqlConn, "@e_id_trx_atx", 0, SQLINT4, CVcomprobantes(32), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_started", 0, SQLVARCHAR, Format$(CStr(CDate(VGCVValParmsCV(21))), "yyyy/MM/dd HH:mm:ss"), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_processed", 0, SQLVARCHAR, Format$(CStr(Now), "yyyy/MM/dd HH:mm:ss"), "", ""
            If FMTransmitirRPCATX(VGSqlConn, "", "cob_cuentas", "pa_cv_atransaccion", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
            
        Case "05"
            'CVImprimeComprobanteINTERAGUA()
            'Envío de Parametros a CAJA VERDE
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, CVcomprobantes(0), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ip", 0, SQLVARCHAR, CVcomprobantes(1), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_hora", 0, SQLVARCHAR, CVcomprobantes(2), "", ""
            PMPasoValoresATX VGSqlConn, "@i_oficina", 0, SQLVARCHAR, CVcomprobantes(3), "", ""
            PMPasoValoresATX VGSqlConn, "@i_moneda", 0, SQLVARCHAR, CVcomprobantes(4), "", ""
            PMPasoValoresATX VGSqlConn, "@i_usuario", 0, SQLVARCHAR, CVcomprobantes(5), "", ""
            PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, CVcomprobantes(6), "", ""
            PMPasoValoresATX VGSqlConn, "@i_secuencial", 0, SQLVARCHAR, CVcomprobantes(7), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cod_trx", 0, SQLVARCHAR, CVcomprobantes(8), "", ""
            PMPasoValoresATX VGSqlConn, "@i_desc_trx", 0, SQLVARCHAR, CVcomprobantes(9), "", ""
            PMPasoValoresATX VGSqlConn, "@i_horario", 0, SQLVARCHAR, CVcomprobantes(10), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_corte", 0, SQLVARCHAR, CVcomprobantes(11), "", ""
            PMPasoValoresATX VGSqlConn, "@i_num_compañia", 0, SQLVARCHAR, CVcomprobantes(12), "", ""
            PMPasoValoresATX VGSqlConn, "@i_compañia", 0, SQLVARCHAR, CVcomprobantes(13), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tpcodserv", 0, SQLVARCHAR, CVcomprobantes(14), "", ""
            PMPasoValoresATX VGSqlConn, "@i_comprobanter", 0, SQLVARCHAR, CVcomprobantes(29), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, CVcomprobantes(15), "", ""
            PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLVARCHAR, CVcomprobantes(16), "", ""
            PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLVARCHAR, CVcomprobantes(17), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ctad", 0, SQLVARCHAR, CVcomprobantes(18), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nro_cheque", 0, SQLVARCHAR, CVcomprobantes(19), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLVARCHAR, CVcomprobantes(20), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLVARCHAR, CVcomprobantes(21), "", ""
            PMPasoValoresATX VGSqlConn, "@i_saldo_fec", 0, SQLVARCHAR, CVcomprobantes(22), "", ""
            PMPasoValoresATX VGSqlConn, "@i_clave_acceso", 0, SQLVARCHAR, CVcomprobantes(23), "", ""
            
            'complementarios
            PMPasoValoresATX VGSqlConn, "@i_comprobante", 0, SQLVARCHAR, CVcomprobantes(24), "", ""   '-- ojo falta definir
            PMPasoValoresATX VGSqlConn, "@i_cod_ct", 0, SQLVARCHAR, CVcomprobantes(25), "", ""
            PMPasoValoresATX VGSqlConn, "@i_mail", 0, SQLVARCHAR, CVcomprobantes(26), "", ""
            PMPasoValoresATX VGSqlConn, "@i_transaction_type", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
          
            If FMTransmitirRPCATX(VGSqlConn, "CVSRV", "cob_procesador", "sp_caja_verde", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
                     
            'se llama cola para actualización de valores en tabla sybase para caja verde procesada ok y codigo de la transaccion atx
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "43181", "", ""
            PMPasoValoresATX VGSqlConn, "@e_ct", 0, SQLVARCHAR, CVcomprobantes(25), "", ""
            PMPasoValoresATX VGSqlConn, "@e_nemonico", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
            PMPasoValoresATX VGSqlConn, "@e_id_trx_atx", 0, SQLINT4, CVcomprobantes(28), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_started", 0, SQLVARCHAR, Format$(CStr(CDate(VGCVValParmsCV(21))), "yyyy/MM/dd HH:mm:ss"), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_processed", 0, SQLVARCHAR, Format$(CStr(Now), "yyyy/MM/dd HH:mm:ss"), "", ""
            If FMTransmitirRPCATX(VGSqlConn, "", "cob_cuentas", "pa_cv_atransaccion", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
        Case "06"
            'CVImprimeComprobanteAMAGUA()
            'Envío de Parametros a CAJA VERDE
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, CVcomprobantes(0), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ip", 0, SQLVARCHAR, CVcomprobantes(1), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_hora", 0, SQLVARCHAR, CVcomprobantes(2), "", ""
            PMPasoValoresATX VGSqlConn, "@i_oficina", 0, SQLVARCHAR, CVcomprobantes(3), "", ""
            PMPasoValoresATX VGSqlConn, "@i_moneda", 0, SQLVARCHAR, CVcomprobantes(4), "", ""
            PMPasoValoresATX VGSqlConn, "@i_usuario", 0, SQLVARCHAR, CVcomprobantes(5), "", ""
            PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, CVcomprobantes(6), "", ""
            PMPasoValoresATX VGSqlConn, "@i_secuencial", 0, SQLVARCHAR, CVcomprobantes(7), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cod_trx", 0, SQLVARCHAR, CVcomprobantes(8), "", ""
            PMPasoValoresATX VGSqlConn, "@i_desc_trx", 0, SQLVARCHAR, CVcomprobantes(9), "", ""
            PMPasoValoresATX VGSqlConn, "@i_horario", 0, SQLVARCHAR, CVcomprobantes(10), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_corte", 0, SQLVARCHAR, CVcomprobantes(11), "", ""
            PMPasoValoresATX VGSqlConn, "@i_num_compañia", 0, SQLVARCHAR, CVcomprobantes(12), "", ""
            PMPasoValoresATX VGSqlConn, "@i_compañia", 0, SQLVARCHAR, CVcomprobantes(13), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tpcodserv", 0, SQLVARCHAR, CVcomprobantes(14), "", ""
            PMPasoValoresATX VGSqlConn, "@i_comprobanter", 0, SQLVARCHAR, CVcomprobantes(30), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, CVcomprobantes(15), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total_serv", 0, SQLVARCHAR, CVcomprobantes(16), "", ""
            PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLVARCHAR, CVcomprobantes(17), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ctad", 0, SQLVARCHAR, CVcomprobantes(18), "", ""
            PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLVARCHAR, CVcomprobantes(19), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nro_cheque", 0, SQLVARCHAR, CVcomprobantes(20), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLVARCHAR, CVcomprobantes(21), "", ""
            PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLVARCHAR, CVcomprobantes(22), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLVARCHAR, CVcomprobantes(23), "", ""
            PMPasoValoresATX VGSqlConn, "@i_clave_acceso", 0, SQLVARCHAR, CVcomprobantes(24), "", ""
            
            'complementarios
            PMPasoValoresATX VGSqlConn, "@i_comprobante", 0, SQLVARCHAR, CVcomprobantes(25), "", ""   '-- ojo falta definir
            PMPasoValoresATX VGSqlConn, "@i_cod_ct", 0, SQLVARCHAR, CVcomprobantes(26), "", ""
            PMPasoValoresATX VGSqlConn, "@i_mail", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
            PMPasoValoresATX VGSqlConn, "@i_transaction_type", 0, SQLVARCHAR, CVcomprobantes(28), "", ""
          
            If FMTransmitirRPCATX(VGSqlConn, "CVSRV", "cob_procesador", "sp_caja_verde", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
                         
            'se llama cola para actualización de valores en tabla sybase para caja verde procesada ok y codigo de la transaccion atx
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "43181", "", ""
            PMPasoValoresATX VGSqlConn, "@e_ct", 0, SQLVARCHAR, CVcomprobantes(26), "", ""
            PMPasoValoresATX VGSqlConn, "@e_nemonico", 0, SQLVARCHAR, CVcomprobantes(28), "", ""
            PMPasoValoresATX VGSqlConn, "@e_id_trx_atx", 0, SQLINT4, CVcomprobantes(29), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_started", 0, SQLVARCHAR, Format$(CStr(CDate(VGCVValParmsCV(21))), "yyyy/MM/dd HH:mm:ss"), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_processed", 0, SQLVARCHAR, Format$(CStr(Now), "yyyy/MM/dd HH:mm:ss"), "", ""
            If FMTransmitirRPCATX(VGSqlConn, "", "cob_cuentas", "pa_cv_atransaccion", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
        
        Case "07"
            'Envío de Parametros a CAJA VERDE
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, CVcomprobantes(0), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ip", 0, SQLVARCHAR, CVcomprobantes(1), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_hora", 0, SQLVARCHAR, CVcomprobantes(2), "", ""
            PMPasoValoresATX VGSqlConn, "@i_oficina", 0, SQLVARCHAR, CVcomprobantes(3), "", ""
            PMPasoValoresATX VGSqlConn, "@i_moneda", 0, SQLVARCHAR, CVcomprobantes(4), "", ""
            PMPasoValoresATX VGSqlConn, "@i_usuario", 0, SQLVARCHAR, CVcomprobantes(5), "", ""
            PMPasoValoresATX VGSqlConn, "@i_empresa", 0, SQLVARCHAR, CVcomprobantes(6), "", ""
            PMPasoValoresATX VGSqlConn, "@i_secuencial", 0, SQLVARCHAR, CVcomprobantes(7), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cod_trx", 0, SQLVARCHAR, CVcomprobantes(8), "", ""
            PMPasoValoresATX VGSqlConn, "@i_desc_trx", 0, SQLVARCHAR, CVcomprobantes(9), "", ""
            PMPasoValoresATX VGSqlConn, "@i_horario", 0, SQLVARCHAR, CVcomprobantes(10), "", ""
            PMPasoValoresATX VGSqlConn, "@i_fecha_corte", 0, SQLVARCHAR, CVcomprobantes(11), "", ""
            PMPasoValoresATX VGSqlConn, "@i_num_compañia", 0, SQLVARCHAR, CVcomprobantes(12), "", ""
            PMPasoValoresATX VGSqlConn, "@i_compañia", 0, SQLVARCHAR, CVcomprobantes(13), "", ""
            PMPasoValoresATX VGSqlConn, "@i_tpcodserv", 0, SQLVARCHAR, CVcomprobantes(14), "", ""
            PMPasoValoresATX VGSqlConn, "@i_comprobanter", 0, SQLVARCHAR, CVcomprobantes(31), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nombre", 0, SQLVARCHAR, CVcomprobantes(15), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total_serv", 0, SQLVARCHAR, CVcomprobantes(29), "", ""
            PMPasoValoresATX VGSqlConn, "@i_efectivo", 0, SQLVARCHAR, CVcomprobantes(16), "", ""
            PMPasoValoresATX VGSqlConn, "@i_ctad", 0, SQLVARCHAR, CVcomprobantes(17), "", ""
            PMPasoValoresATX VGSqlConn, "@i_debito", 0, SQLVARCHAR, CVcomprobantes(18), "", ""
            PMPasoValoresATX VGSqlConn, "@i_nro_cheque", 0, SQLVARCHAR, CVcomprobantes(19), "", ""
            PMPasoValoresATX VGSqlConn, "@i_cheque", 0, SQLVARCHAR, CVcomprobantes(20), "", ""
            PMPasoValoresATX VGSqlConn, "@i_retencion", 0, SQLVARCHAR, CVcomprobantes(21), "", ""
            PMPasoValoresATX VGSqlConn, "@i_comision", 0, SQLVARCHAR, CVcomprobantes(30), "", ""
            PMPasoValoresATX VGSqlConn, "@i_total", 0, SQLVARCHAR, CVcomprobantes(22), "", ""
            PMPasoValoresATX VGSqlConn, "@i_clave_acceso", 0, SQLVARCHAR, CVcomprobantes(23), "", ""
            
            'complementarios
            PMPasoValoresATX VGSqlConn, "@i_comprobante", 0, SQLVARCHAR, CVcomprobantes(24), "", ""   '-- ojo falta definir
            PMPasoValoresATX VGSqlConn, "@i_cod_ct", 0, SQLVARCHAR, CVcomprobantes(25), "", ""
            PMPasoValoresATX VGSqlConn, "@i_mail", 0, SQLVARCHAR, CVcomprobantes(26), "", ""
            PMPasoValoresATX VGSqlConn, "@i_transaction_type", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
          
            If FMTransmitirRPCATX(VGSqlConn, "CVSRV", "cob_procesador", "sp_caja_verde", True, "Transaccion Ok", "S", "N", "N", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
                                      
            'se llama cola para actualización de valores en tabla sybase para caja verde procesada ok y codigo de la transaccion atx
            PMInicioTransaccion
            PMPasoValoresATX VGSqlConn, "@t_trn", 0, SQLINT4, "43181", "", ""
            PMPasoValoresATX VGSqlConn, "@e_ct", 0, SQLVARCHAR, CVcomprobantes(25), "", ""
            PMPasoValoresATX VGSqlConn, "@e_nemonico", 0, SQLVARCHAR, CVcomprobantes(27), "", ""
            PMPasoValoresATX VGSqlConn, "@e_id_trx_atx", 0, SQLINT4, CVcomprobantes(28), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_started", 0, SQLVARCHAR, Format$(CStr(CDate(VGCVValParmsCV(21))), "yyyy/MM/dd HH:mm:ss"), "", ""
            PMPasoValoresATX VGSqlConn, "@e_tx_processed", 0, SQLVARCHAR, Format$(CStr(Now), "yyyy/MM/dd HH:mm:ss"), "", ""
            If FMTransmitirRPCATX(VGSqlConn, "", "cob_cuentas", "pa_cv_atransaccion", True, "Transaccion Ok", "S", "N", "S", "51", "S", "S") = True Then
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            Else
                PMChequeaATX VGSqlConn&
                PMFinTransaccion
            End If
    End Select
End Sub
'Ref 20>





